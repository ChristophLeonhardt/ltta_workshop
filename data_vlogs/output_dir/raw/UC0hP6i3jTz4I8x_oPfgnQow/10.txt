1
00:00:04,490 --> 00:00:07,279
so I hope<font color="#E5E5E5"> you enjoyed last week's</font>

2
00:00:07,279 --> 00:00:12,110
<font color="#CCCCCC">tutorial on tensor flow and this week</font><font color="#E5E5E5"> we</font>

3
00:00:12,110 --> 00:00:13,490
<font color="#E5E5E5">again have something very special for</font>

4
00:00:13,490 --> 00:00:16,160
<font color="#CCCCCC">you Simon</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> Sendero here will give a</font>

5
00:00:16,160 --> 00:00:18,650
lecture<font color="#E5E5E5"> about</font><font color="#CCCCCC"> neural</font><font color="#E5E5E5"> networks back</font>

6
00:00:18,650 --> 00:00:20,900
<font color="#E5E5E5">propagation how to train those networks</font>

7
00:00:20,900 --> 00:00:24,860
<font color="#E5E5E5">and so on and it's really quite special</font>

8
00:00:24,860 --> 00:00:26,599
<font color="#CCCCCC">to have</font><font color="#E5E5E5"> Simon here he really</font><font color="#CCCCCC"> is an</font>

9
00:00:26,599 --> 00:00:29,329
expert<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> topic he also works a deep</font>

10
00:00:29,329 --> 00:00:32,259
mind in the deep learning<font color="#E5E5E5"> group</font><font color="#CCCCCC"> he is</font>

11
00:00:32,259 --> 00:00:35,149
<font color="#E5E5E5">educated locally to some degree at least</font>

12
00:00:35,149 --> 00:00:38,440
<font color="#E5E5E5">yeah so I'm a mother</font>

13
00:00:38,440 --> 00:00:43,070
Cambridge then PhD at UCL<font color="#CCCCCC"> and then later</font>

14
00:00:43,070 --> 00:00:47,329
worked with<font color="#E5E5E5"> geoff hinton in canada so</font>

15
00:00:47,329 --> 00:00:49,730
there<font color="#E5E5E5"> couldn't be a</font><font color="#CCCCCC"> better person</font><font color="#E5E5E5"> to do</font>

16
00:00:49,730 --> 00:00:51,980
this<font color="#E5E5E5"> before we start just</font><font color="#CCCCCC"> a quick</font>

17
00:00:51,980 --> 00:00:54,499
announcement<font color="#CCCCCC"> terry williams who attended</font>

18
00:00:54,499 --> 00:00:56,809
here last week he's running a reading

19
00:00:56,809 --> 00:00:58,519
group<font color="#CCCCCC"> on deep learning and the game</font><font color="#E5E5E5"> of</font>

20
00:00:58,519 --> 00:01:02,780
<font color="#CCCCCC">Go</font><font color="#E5E5E5"> I'll put this book cover</font><font color="#CCCCCC"> and his card</font>

21
00:01:02,780 --> 00:01:04,309
here on the table<font color="#CCCCCC"> in case</font><font color="#E5E5E5"> anyone's</font>

22
00:01:04,309 --> 00:01:06,530
interested<font color="#CCCCCC"> it's basically a new book</font>

23
00:01:06,530 --> 00:01:10,970
that<font color="#E5E5E5"> came out that tries to explain deep</font>

24
00:01:10,970 --> 00:01:14,689
learning<font color="#E5E5E5"> based on on the game of</font><font color="#CCCCCC"> go in</font>

25
00:01:14,689 --> 00:01:17,270
the wake of alphago<font color="#CCCCCC"> okay thank you very</font>

26
00:01:17,270 --> 00:01:20,659
<font color="#E5E5E5">much over to you Simon Hayter and get up</font>

27
00:01:20,659 --> 00:01:24,799
to<font color="#CCCCCC"> noon everyone see can everyone hear</font>

28
00:01:24,799 --> 00:01:32,840
me<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> you can hear me okay</font><font color="#E5E5E5"> yes so sort</font>

29
00:01:32,840 --> 00:01:33,200
<font color="#E5E5E5">of saying</font>

30
00:01:33,200 --> 00:01:34,909
today's<font color="#E5E5E5"> lecture is just me covering some</font>

31
00:01:34,909 --> 00:01:36,439
<font color="#E5E5E5">of the foundations of neural networks</font>

32
00:01:36,439 --> 00:01:39,229
and<font color="#E5E5E5"> I'm guessing</font><font color="#CCCCCC"> that some of you will</font>

33
00:01:39,229 --> 00:01:41,479
<font color="#CCCCCC">be</font><font color="#E5E5E5"> quite familiar with the material</font><font color="#CCCCCC"> that</font>

34
00:01:41,479 --> 00:01:43,460
<font color="#E5E5E5">we're going to go</font><font color="#CCCCCC"> over today and I</font><font color="#E5E5E5"> hope</font>

35
00:01:43,460 --> 00:01:44,659
<font color="#E5E5E5">that most of you have</font><font color="#CCCCCC"> seen</font><font color="#E5E5E5"> bits of it</font>

36
00:01:44,659 --> 00:01:46,340
before<font color="#E5E5E5"> but nevertheless it's kind of</font>

37
00:01:46,340 --> 00:01:48,799
good to go back over<font color="#CCCCCC"> the</font><font color="#E5E5E5"> foundations to</font>

38
00:01:48,799 --> 00:01:50,180
make sure that they're<font color="#E5E5E5"> very solid and</font>

39
00:01:50,180 --> 00:01:51,619
also one<font color="#CCCCCC"> of things that</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to</font>

40
00:01:51,619 --> 00:01:53,149
hope to<font color="#E5E5E5"> do as we go through is in</font>

41
00:01:53,149 --> 00:01:55,130
<font color="#E5E5E5">addition to kind of conveying some of</font>

42
00:01:55,130 --> 00:01:56,570
the mathematics also try<font color="#E5E5E5"> and give you</font><font color="#CCCCCC"> a</font>

43
00:01:56,570 --> 00:01:58,789
sense<font color="#E5E5E5"> of the intuition to get a kind of</font>

44
00:01:58,789 --> 00:02:00,170
deeper and<font color="#E5E5E5"> more visceral understanding</font>

45
00:02:00,170 --> 00:02:04,219
of what's<font color="#CCCCCC"> going</font><font color="#E5E5E5"> on and as we go through</font>

46
00:02:04,219 --> 00:02:06,350
there'll be a couple<font color="#E5E5E5"> of natural section</font>

47
00:02:06,350 --> 00:02:08,479
breaks<font color="#E5E5E5"> between the sections so that's</font>

48
00:02:08,479 --> 00:02:09,949
probably<font color="#E5E5E5"> a good time to</font><font color="#CCCCCC"> do questions</font>

49
00:02:09,949 --> 00:02:11,360
<font color="#CCCCCC">from</font><font color="#E5E5E5"> the preceding section if there are</font>

50
00:02:11,360 --> 00:02:15,290
any and<font color="#E5E5E5"> we'll also have an</font><font color="#CCCCCC"> inci break in</font>

51
00:02:15,290 --> 00:02:17,000
the middle<font color="#CCCCCC"> probably two-thirds of the</font>

52
00:02:17,000 --> 00:02:17,860
way<font color="#CCCCCC"> through</font>

53
00:02:17,860 --> 00:02:20,230
and then the the<font color="#CCCCCC"> last point is</font><font color="#E5E5E5"> these</font>

54
00:02:20,230 --> 00:02:21,160
slides were all going<font color="#E5E5E5"> to be available</font>

55
00:02:21,160 --> 00:02:23,260
<font color="#CCCCCC">online and in</font><font color="#E5E5E5"> the slides I've added</font>

56
00:02:23,260 --> 00:02:25,630
quite a few hyperlinks<font color="#CCCCCC"> out</font><font color="#E5E5E5"> to additional</font>

57
00:02:25,630 --> 00:02:27,700
material which if one<font color="#E5E5E5"> of the topics</font>

58
00:02:27,700 --> 00:02:28,510
we're talking about is particular

59
00:02:28,510 --> 00:02:29,980
interesting to you<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> kind of go</font>

60
00:02:29,980 --> 00:02:37,330
off and read<font color="#E5E5E5"> more about that okay</font><font color="#CCCCCC"> and so</font>

61
00:02:37,330 --> 00:02:40,180
this slide<font color="#E5E5E5"> is in some sense a tldr of</font>

62
00:02:40,180 --> 00:02:42,790
what we're going to do today and<font color="#E5E5E5"> at a</font>

63
00:02:42,790 --> 00:02:44,590
high level<font color="#CCCCCC"> it's also kind of a tldr of</font>

64
00:02:44,590 --> 00:02:46,450
what we're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do in this entire</font>

65
00:02:46,450 --> 00:02:49,270
course<font color="#E5E5E5"> so deep learning</font><font color="#CCCCCC"> good neural</font>

66
00:02:49,270 --> 00:02:51,010
<font color="#CCCCCC">networks</font><font color="#E5E5E5"> is actually pretty simple as</font>

67
00:02:51,010 --> 00:02:52,480
it's more or less<font color="#CCCCCC"> just the</font><font color="#E5E5E5"> composition</font>

68
00:02:52,480 --> 00:02:54,610
<font color="#E5E5E5">of linear transforms and nonlinear</font>

69
00:02:54,610 --> 00:02:57,640
functions<font color="#E5E5E5"> and it turns out that by</font>

70
00:02:57,640 --> 00:02:59,890
composing<font color="#CCCCCC"> these quite simple building</font>

71
00:02:59,890 --> 00:03:02,560
blocks<font color="#CCCCCC"> into large graphs</font><font color="#E5E5E5"> we gained</font>

72
00:03:02,560 --> 00:03:05,650
<font color="#E5E5E5">massive powerful flexing flexible</font>

73
00:03:05,650 --> 00:03:07,750
modeling power and when I say massive

74
00:03:07,750 --> 00:03:09,820
<font color="#CCCCCC">fight I do mean quite</font><font color="#E5E5E5"> massive so these</font>

75
00:03:09,820 --> 00:03:12,370
days we<font color="#E5E5E5"> routinely train neural networks</font>

76
00:03:12,370 --> 00:03:13,540
with<font color="#E5E5E5"> hundreds of millions</font><font color="#CCCCCC"> of parameters</font>

77
00:03:13,540 --> 00:03:16,900
<font color="#CCCCCC">and when I say training or learning</font><font color="#E5E5E5"> what</font>

78
00:03:16,900 --> 00:03:18,840
does<font color="#CCCCCC"> that mean well it basically</font><font color="#E5E5E5"> means</font>

79
00:03:18,840 --> 00:03:21,640
optimizing a loss function that in some

80
00:03:21,640 --> 00:03:22,510
sense describes a<font color="#E5E5E5"> problem we're</font>

81
00:03:22,510 --> 00:03:25,540
<font color="#CCCCCC">interested in over some data set</font><font color="#E5E5E5"> or in</font>

82
00:03:25,540 --> 00:03:27,549
the case of<font color="#E5E5E5"> reinforcement learning</font><font color="#CCCCCC"> with</font>

83
00:03:27,549 --> 00:03:30,820
<font color="#E5E5E5">respect to world experience with with</font>

84
00:03:30,820 --> 00:03:32,769
<font color="#CCCCCC">effective</font><font color="#E5E5E5"> our parameters and we do that</font>

85
00:03:32,769 --> 00:03:35,170
<font color="#CCCCCC">using various gradient optimization</font>

86
00:03:35,170 --> 00:03:37,000
methods<font color="#CCCCCC"> one of the most common of</font><font color="#E5E5E5"> those</font>

87
00:03:37,000 --> 00:03:39,040
is<font color="#E5E5E5"> SPD or</font><font color="#CCCCCC"> stochastic gradient descent</font>

88
00:03:39,040 --> 00:03:42,220
and<font color="#E5E5E5"> so from a thousand feet</font><font color="#CCCCCC"> that's</font>

89
00:03:42,220 --> 00:03:44,140
that's kind of it it's pretty simple<font color="#E5E5E5"> but</font>

90
00:03:44,140 --> 00:03:46,420
<font color="#E5E5E5">in this course what we're going to do is</font>

91
00:03:46,420 --> 00:03:48,610
look<font color="#E5E5E5"> at the details of the different</font>

92
00:03:48,610 --> 00:03:50,320
<font color="#E5E5E5">building</font><font color="#CCCCCC"> blocks</font><font color="#E5E5E5"> when you might want</font><font color="#CCCCCC"> to</font>

93
00:03:50,320 --> 00:03:52,540
<font color="#E5E5E5">make certain choices and also how</font><font color="#CCCCCC"> to do</font>

94
00:03:52,540 --> 00:03:57,430
this well at a very large<font color="#E5E5E5"> scale so</font>

95
00:03:57,430 --> 00:03:59,380
before we dive in let's step back<font color="#CCCCCC"> a</font>

96
00:03:59,380 --> 00:04:01,209
<font color="#CCCCCC">little bit and ask why are</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> doing this</font>

97
00:04:01,209 --> 00:04:03,120
what what a neuron<font color="#CCCCCC"> that's good for and</font>

98
00:04:03,120 --> 00:04:05,170
<font color="#CCCCCC">turns out they're</font><font color="#E5E5E5"> actually useful for a</font>

99
00:04:05,170 --> 00:04:06,940
whole ton of things<font color="#CCCCCC"> but</font><font color="#E5E5E5"> these days</font><font color="#CCCCCC"> you</font>

100
00:04:06,940 --> 00:04:09,010
<font color="#CCCCCC">know I think</font><font color="#E5E5E5"> a better question is you</font>

101
00:04:09,010 --> 00:04:09,970
know<font color="#CCCCCC"> if you can come up with</font><font color="#E5E5E5"> the right</font>

102
00:04:09,970 --> 00:04:11,769
loss function<font color="#E5E5E5"> and a quiet training later</font>

103
00:04:11,769 --> 00:04:14,860
what a neuron<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> not good for so</font>

104
00:04:14,860 --> 00:04:17,680
just to kind<font color="#CCCCCC"> of go over some examples in</font>

105
00:04:17,680 --> 00:04:19,839
recent<font color="#E5E5E5"> years we've seen some very</font>

106
00:04:19,839 --> 00:04:22,270
impressive<font color="#E5E5E5"> steps forward in computer</font>

107
00:04:22,270 --> 00:04:25,090
vision<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> now recognize</font><font color="#E5E5E5"> objects in</font>

108
00:04:25,090 --> 00:04:27,220
images with very high accuracy<font color="#CCCCCC"> there's</font>

109
00:04:27,220 --> 00:04:29,940
all<font color="#E5E5E5"> sorts of cool more esoteric</font>

110
00:04:29,940 --> 00:04:31,639
<font color="#E5E5E5">applications that the folks</font>

111
00:04:31,639 --> 00:04:34,699
so listen very<font color="#E5E5E5"> nice work looking at</font>

112
00:04:34,699 --> 00:04:38,810
<font color="#E5E5E5">doing superhuman recognition of</font><font color="#CCCCCC"> human</font>

113
00:04:38,810 --> 00:04:41,330
emotions by having a neural<font color="#E5E5E5"> network that</font>

114
00:04:41,330 --> 00:04:43,189
<font color="#E5E5E5">can recognize micro expressions on folks</font>

115
00:04:43,189 --> 00:04:45,499
faces<font color="#E5E5E5"> so essentially better or even</font>

116
00:04:45,499 --> 00:04:48,830
<font color="#E5E5E5">human emotions than humans</font><font color="#CCCCCC"> are later in</font>

117
00:04:48,830 --> 00:04:50,469
<font color="#CCCCCC">this course there'll be a module</font><font color="#E5E5E5"> on</font>

118
00:04:50,469 --> 00:04:52,669
<font color="#E5E5E5">sequence models with a recurrent neural</font>

119
00:04:52,669 --> 00:04:54,919
networks and<font color="#E5E5E5"> there we've seen incredible</font>

120
00:04:54,919 --> 00:04:57,830
<font color="#E5E5E5">gains and speech recognition one of the</font>

121
00:04:57,830 --> 00:04:59,300
cool things<font color="#E5E5E5"> again</font><font color="#CCCCCC"> in recent</font><font color="#E5E5E5"> years that</font>

122
00:04:59,300 --> 00:05:03,169
came up is this idea<font color="#E5E5E5"> of using neural</font>

123
00:05:03,169 --> 00:05:04,939
networks for<font color="#E5E5E5"> machine translation</font><font color="#CCCCCC"> and</font>

124
00:05:04,939 --> 00:05:07,490
furthermore<font color="#CCCCCC"> it turns out that you can</font>

125
00:05:07,490 --> 00:05:09,969
use<font color="#CCCCCC"> neural networks</font><font color="#E5E5E5"> for multilingual</font>

126
00:05:09,969 --> 00:05:16,930
<font color="#CCCCCC">machine</font><font color="#E5E5E5"> translation so</font><font color="#CCCCCC"> the echo is</font>

127
00:05:19,360 --> 00:05:22,729
<font color="#CCCCCC">hello-hello note them maybe</font><font color="#E5E5E5"> the mics on</font>

128
00:05:22,729 --> 00:05:24,139
<font color="#CCCCCC">turn</font><font color="#E5E5E5"> I'll</font><font color="#CCCCCC"> turn</font><font color="#E5E5E5"> raise my</font><font color="#CCCCCC"> voice per dad</font>

129
00:05:24,139 --> 00:05:25,520
yeah please do raise your hand if

130
00:05:25,520 --> 00:05:26,779
<font color="#CCCCCC">they're if you're having trouble</font><font color="#E5E5E5"> hearing</font>

131
00:05:26,779 --> 00:05:30,949
me<font color="#E5E5E5"> yes</font><font color="#CCCCCC"> so one of</font><font color="#E5E5E5"> the particularly cool</font>

132
00:05:30,949 --> 00:05:33,560
things that<font color="#E5E5E5"> came out in the last year</font><font color="#CCCCCC"> or</font>

133
00:05:33,560 --> 00:05:35,689
so<font color="#E5E5E5"> is this idea of</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> multilingual</font>

134
00:05:35,689 --> 00:05:37,069
translation through<font color="#CCCCCC"> a common</font>

135
00:05:37,069 --> 00:05:39,710
representation<font color="#E5E5E5"> so we can translate from</font>

136
00:05:39,710 --> 00:05:43,990
many languages<font color="#E5E5E5"> into many other languages</font>

137
00:05:49,779 --> 00:05:52,990
heavily wide

138
00:06:03,210 --> 00:06:04,780
<font color="#E5E5E5">okay</font>

139
00:06:04,780 --> 00:06:08,949
<font color="#E5E5E5">is that better for</font><font color="#CCCCCC"> folks</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> yeah this</font>

140
00:06:08,949 --> 00:06:10,330
<font color="#E5E5E5">notion of a kind of interlink</font><font color="#CCCCCC"> where so</font>

141
00:06:10,330 --> 00:06:12,729
if we have a common representation space

142
00:06:12,729 --> 00:06:14,710
<font color="#E5E5E5">that is the bottleneck when we're</font>

143
00:06:14,710 --> 00:06:16,000
translating<font color="#CCCCCC"> from one language to another</font>

144
00:06:16,000 --> 00:06:18,370
then in a very real sense<font color="#CCCCCC"> you can think</font>

145
00:06:18,370 --> 00:06:20,169
<font color="#CCCCCC">of the representations in that space as</font>

146
00:06:20,169 --> 00:06:22,000
some kind<font color="#E5E5E5"> of inter linguist</font><font color="#CCCCCC"> so it's kind</font>

147
00:06:22,000 --> 00:06:23,800
of representing concept across<font color="#E5E5E5"> many</font>

148
00:06:23,800 --> 00:06:26,740
<font color="#CCCCCC">different languages along similar lines</font>

149
00:06:26,740 --> 00:06:28,870
there's been some<font color="#E5E5E5"> excellent work from</font>

150
00:06:28,870 --> 00:06:31,360
deep mind<font color="#E5E5E5"> on speech synthesis so going</font>

151
00:06:31,360 --> 00:06:36,009
<font color="#E5E5E5">from text</font><font color="#CCCCCC"> to speech and wavenet was a</font>

152
00:06:36,009 --> 00:06:37,870
<font color="#E5E5E5">something</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> was developed at D mind</font>

153
00:06:37,870 --> 00:06:39,819
<font color="#E5E5E5">starting back two</font><font color="#CCCCCC"> years</font><font color="#E5E5E5"> ago and now it's</font>

154
00:06:39,819 --> 00:06:42,280
in production<font color="#E5E5E5"> so a lot of the voices</font>

155
00:06:42,280 --> 00:06:44,110
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you'll hear in say Google home or</font>

156
00:06:44,110 --> 00:06:45,819
Google assistant<font color="#E5E5E5"> are now synthesized</font>

157
00:06:45,819 --> 00:06:47,800
with<font color="#E5E5E5"> wavenet so a very fast turnaround</font>

158
00:06:47,800 --> 00:06:51,449
<font color="#E5E5E5">from research to large-scale deployment</font>

159
00:06:51,449 --> 00:06:54,900
<font color="#CCCCCC">other places where they've been enjoying</font>

160
00:06:54,900 --> 00:06:57,159
impressive uses in reinforcement

161
00:06:57,159 --> 00:06:58,419
learning<font color="#E5E5E5"> and you'll hear much more about</font>

162
00:06:58,419 --> 00:07:00,130
<font color="#CCCCCC">that in the other half of the course so</font>

163
00:07:00,130 --> 00:07:04,060
things<font color="#E5E5E5"> like</font><font color="#CCCCCC"> dqn or a3c and applying that</font>

164
00:07:04,060 --> 00:07:06,070
<font color="#E5E5E5">to</font><font color="#CCCCCC"> aims headings like atari and then</font>

165
00:07:06,070 --> 00:07:09,009
<font color="#E5E5E5">also moving into</font><font color="#CCCCCC"> moralistic games and 3d</font>

166
00:07:09,009 --> 00:07:11,949
<font color="#E5E5E5">environments also with reinforcement</font>

167
00:07:11,949 --> 00:07:13,630
learning<font color="#E5E5E5"> you guys are all probably</font>

168
00:07:13,630 --> 00:07:17,710
<font color="#CCCCCC">familiar with</font><font color="#E5E5E5"> alphago which was able</font><font color="#CCCCCC"> to</font>

169
00:07:17,710 --> 00:07:20,880
beat<font color="#E5E5E5"> the</font><font color="#CCCCCC"> human world champion at go and</font>

170
00:07:20,880 --> 00:07:23,979
has now even superseded that by playing

171
00:07:23,979 --> 00:07:25,330
just<font color="#CCCCCC"> the</font><font color="#E5E5E5"> games itself so not not even</font>

172
00:07:25,330 --> 00:07:28,120
<font color="#E5E5E5">using any any human data now</font><font color="#CCCCCC"> the list</font>

173
00:07:28,120 --> 00:07:30,370
goes on<font color="#CCCCCC"> and in all these</font><font color="#E5E5E5"> cases what</font>

174
00:07:30,370 --> 00:07:32,440
we're dealing with is pretty<font color="#E5E5E5"> simple and</font>

175
00:07:32,440 --> 00:07:34,690
there's just a couple<font color="#E5E5E5"> of different</font>

176
00:07:34,690 --> 00:07:37,240
<font color="#CCCCCC">elements you see grab a laser pointer</font>

177
00:07:37,240 --> 00:07:41,949
<font color="#E5E5E5">yeah cool yes so we essentially have our</font>

178
00:07:41,949 --> 00:07:43,889
neural network<font color="#E5E5E5"> so we defined some</font>

179
00:07:43,889 --> 00:07:46,810
architecture we<font color="#CCCCCC"> have our</font><font color="#E5E5E5"> inputs so it</font>

180
00:07:46,810 --> 00:07:48,729
could<font color="#E5E5E5"> be images spectrograms</font>

181
00:07:48,729 --> 00:07:51,819
you name<font color="#E5E5E5"> it we have parameters that</font>

182
00:07:51,819 --> 00:07:53,919
define the network<font color="#E5E5E5"> and some outputs that</font>

183
00:07:53,919 --> 00:07:56,139
<font color="#E5E5E5">we want to predict and essentially all</font>

184
00:07:56,139 --> 00:07:58,930
<font color="#E5E5E5">we're doing is formulating a loss</font>

185
00:07:58,930 --> 00:08:01,150
function between<font color="#E5E5E5"> our inputs and our</font>

186
00:08:01,150 --> 00:08:03,400
outputs and then optimizing<font color="#E5E5E5"> that loss</font>

187
00:08:03,400 --> 00:08:04,990
function with respect to<font color="#E5E5E5"> our parameters</font>

188
00:08:04,990 --> 00:08:07,500
and and again<font color="#CCCCCC"> it's in a</font><font color="#E5E5E5"> high level</font>

189
00:08:07,500 --> 00:08:09,490
everything<font color="#CCCCCC"> we're doing is very</font><font color="#E5E5E5"> simple</font>

190
00:08:09,490 --> 00:08:13,599
but the devil<font color="#E5E5E5"> is in the details so</font>

191
00:08:13,599 --> 00:08:14,930
here's a road map

192
00:08:14,930 --> 00:08:19,220
for most<font color="#E5E5E5"> the rest of today</font><font color="#CCCCCC"> so that the</font>

193
00:08:19,220 --> 00:08:20,870
<font color="#E5E5E5">the field of neural networks has been</font>

194
00:08:20,870 --> 00:08:22,940
around for a<font color="#E5E5E5"> long</font><font color="#CCCCCC"> time and there's a</font>

195
00:08:22,940 --> 00:08:25,070
fairly rich history<font color="#E5E5E5"> so there's you know</font>

196
00:08:25,070 --> 00:08:26,449
not time to cover all<font color="#CCCCCC"> that today</font><font color="#E5E5E5"> what</font>

197
00:08:26,449 --> 00:08:28,190
would we<font color="#E5E5E5"> are going to cover today in in</font>

198
00:08:28,190 --> 00:08:29,900
the course<font color="#CCCCCC"> overall</font><font color="#E5E5E5"> are the things that</font>

199
00:08:29,900 --> 00:08:31,520
are<font color="#E5E5E5"> having the most impact right now but</font>

200
00:08:31,520 --> 00:08:33,740
I just<font color="#CCCCCC"> wanted to begin</font><font color="#E5E5E5"> by calling out</font>

201
00:08:33,740 --> 00:08:35,630
some of the topics<font color="#E5E5E5"> that I think are</font>

202
00:08:35,630 --> 00:08:37,070
<font color="#CCCCCC">interesting but that we're not</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

203
00:08:37,070 --> 00:08:39,950
cover and<font color="#E5E5E5"> I'd also encourage you to</font><font color="#CCCCCC"> kind</font>

204
00:08:39,950 --> 00:08:41,958
of delve into the<font color="#CCCCCC"> history</font><font color="#E5E5E5"> of the field</font>

205
00:08:41,958 --> 00:08:43,159
<font color="#E5E5E5">if there are particular topics that</font>

206
00:08:43,159 --> 00:08:44,750
you're<font color="#CCCCCC"> interested in</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> there's a</font>

207
00:08:44,750 --> 00:08:46,670
lot of<font color="#E5E5E5"> work dating back to the sort like</font>

208
00:08:46,670 --> 00:08:48,890
early 2000<font color="#E5E5E5"> and even the</font><font color="#CCCCCC"> 80s and 90s that</font>

209
00:08:48,890 --> 00:08:52,850
<font color="#E5E5E5">is probably worth revisiting</font><font color="#CCCCCC"> in the rest</font>

210
00:08:52,850 --> 00:08:54,740
<font color="#E5E5E5">of</font><font color="#CCCCCC"> the course we'll begin by a treatment</font>

211
00:08:54,740 --> 00:08:56,149
of single layer networks and just seeing

212
00:08:56,149 --> 00:08:59,029
<font color="#CCCCCC">ok what</font><font color="#E5E5E5"> can we do with just one layer</font>

213
00:08:59,029 --> 00:09:01,550
weights and<font color="#E5E5E5"> neurons</font><font color="#CCCCCC"> we'll then move on</font>

214
00:09:01,550 --> 00:09:03,950
<font color="#E5E5E5">to talk about the</font><font color="#CCCCCC"> advantages that</font><font color="#E5E5E5"> we get</font>

215
00:09:03,950 --> 00:09:07,459
by adding<font color="#CCCCCC"> just one hidden</font><font color="#E5E5E5"> layer</font><font color="#CCCCCC"> and then</font>

216
00:09:07,459 --> 00:09:09,529
we'll<font color="#E5E5E5"> kind of switch</font><font color="#CCCCCC"> gears and kind of</font>

217
00:09:09,529 --> 00:09:11,870
<font color="#E5E5E5">focus on what</font><font color="#CCCCCC"> I call modern deep net</font>

218
00:09:11,870 --> 00:09:14,839
so here it's useful<font color="#CCCCCC"> just to think</font><font color="#E5E5E5"> in</font>

219
00:09:14,839 --> 00:09:17,209
<font color="#E5E5E5">terms of abstract compute graphs and</font>

220
00:09:17,209 --> 00:09:20,570
we'll see<font color="#E5E5E5"> some very large networks and</font>

221
00:09:20,570 --> 00:09:22,940
<font color="#E5E5E5">also how to think about composing those</font>

222
00:09:22,940 --> 00:09:26,180
in software<font color="#CCCCCC"> there'll be a session and</font>

223
00:09:26,180 --> 00:09:27,500
<font color="#E5E5E5">this is probably the</font><font color="#CCCCCC"> most math heavy</font>

224
00:09:27,500 --> 00:09:29,630
part<font color="#E5E5E5"> of today</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> learning and so there</font>

225
00:09:29,630 --> 00:09:31,940
<font color="#CCCCCC">will kind of recap some concepts from</font>

226
00:09:31,940 --> 00:09:35,600
calculus<font color="#CCCCCC"> and vector algebra</font><font color="#E5E5E5"> and then</font>

227
00:09:35,600 --> 00:09:37,400
we'll talk<font color="#CCCCCC"> about modular backprop an</font>

228
00:09:37,400 --> 00:09:39,350
automatic<font color="#CCCCCC"> differentiation and</font><font color="#E5E5E5"> those are</font>

229
00:09:39,350 --> 00:09:41,839
tools<font color="#E5E5E5"> that allow</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> to build these</font>

230
00:09:41,839 --> 00:09:43,820
extremely esoteric graphs<font color="#CCCCCC"> without having</font>

231
00:09:43,820 --> 00:09:45,470
to<font color="#CCCCCC"> think too much</font><font color="#E5E5E5"> about how</font><font color="#CCCCCC"> learning</font>

232
00:09:45,470 --> 00:09:48,470
operates<font color="#CCCCCC"> I'll talk a bit about what I'm</font>

233
00:09:48,470 --> 00:09:51,020
calling a model<font color="#CCCCCC"> Zoo so when we think</font>

234
00:09:51,020 --> 00:09:52,640
about these networks in<font color="#E5E5E5"> terms of these</font>

235
00:09:52,640 --> 00:09:54,290
<font color="#E5E5E5">modules then what are the building</font>

236
00:09:54,290 --> 00:09:55,610
blocks that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can use</font><font color="#CCCCCC"> to construct</font><font color="#E5E5E5"> them</font>

237
00:09:55,610 --> 00:09:58,579
from and then toward the<font color="#E5E5E5"> end</font><font color="#CCCCCC"> I've</font>

238
00:09:58,579 --> 00:10:00,230
<font color="#E5E5E5">touched on some kind of practical topics</font>

239
00:10:00,230 --> 00:10:01,640
in terms<font color="#E5E5E5"> of you want actually doing this</font>

240
00:10:01,640 --> 00:10:02,750
in practice<font color="#E5E5E5"> what are things that you</font>

241
00:10:02,750 --> 00:10:04,190
<font color="#E5E5E5">might want to be aware</font><font color="#CCCCCC"> of what</font><font color="#E5E5E5"> a tricks</font>

242
00:10:04,190 --> 00:10:05,510
you can<font color="#CCCCCC"> use</font><font color="#E5E5E5"> to sort of diagnose if</font>

243
00:10:05,510 --> 00:10:07,190
things are going wrong and<font color="#E5E5E5"> maybe we'll</font>

244
00:10:07,190 --> 00:10:11,570
<font color="#E5E5E5">talk about a research topic yes but as I</font>

245
00:10:11,570 --> 00:10:12,920
was<font color="#E5E5E5"> saying it's a large field with many</font>

246
00:10:12,920 --> 00:10:17,420
branches dating back depending when you

247
00:10:17,420 --> 00:10:18,980
count<font color="#CCCCCC"> dating</font><font color="#E5E5E5"> back to the 60s and then</font>

248
00:10:18,980 --> 00:10:20,390
<font color="#E5E5E5">there was another resurgence in the 80s</font>

249
00:10:20,390 --> 00:10:23,120
so a couple<font color="#E5E5E5"> of things that I think are</font>

250
00:10:23,120 --> 00:10:24,529
<font color="#CCCCCC">interesting that won't be covered in</font>

251
00:10:24,529 --> 00:10:26,870
this<font color="#E5E5E5"> lecture course are also machines</font>

252
00:10:26,870 --> 00:10:28,370
and hopfield networks

253
00:10:28,370 --> 00:10:32,839
they were developed<font color="#CCCCCC"> ran</font><font color="#E5E5E5"> through the 80s</font>

254
00:10:32,839 --> 00:10:35,029
and for quite a while<font color="#E5E5E5"> were extremely</font>

255
00:10:35,029 --> 00:10:37,880
popular and there was some interesting

256
00:10:37,880 --> 00:10:39,260
early work I guess in the<font color="#E5E5E5"> second wave of</font>

257
00:10:39,260 --> 00:10:41,330
neural networks<font color="#E5E5E5"> that they're not in</font>

258
00:10:41,330 --> 00:10:43,700
<font color="#E5E5E5">favor as much now but I think they're</font>

259
00:10:43,700 --> 00:10:45,279
<font color="#E5E5E5">still useful so particularly for</font>

260
00:10:45,279 --> 00:10:47,180
<font color="#CCCCCC">situations</font><font color="#E5E5E5"> were we're interested in</font>

261
00:10:47,180 --> 00:10:49,070
<font color="#E5E5E5">models of memory</font><font color="#CCCCCC"> and in particular</font>

262
00:10:49,070 --> 00:10:52,040
associative memory<font color="#CCCCCC"> so I think for</font><font color="#E5E5E5"> me</font>

263
00:10:52,040 --> 00:10:53,180
that's that's<font color="#E5E5E5"> one thing that's worth</font>

264
00:10:53,180 --> 00:10:56,029
revisiting<font color="#CCCCCC"> another</font><font color="#E5E5E5"> area that what's</font>

265
00:10:56,029 --> 00:10:57,830
<font color="#E5E5E5">property at one time that doesn't</font>

266
00:10:57,830 --> 00:11:00,620
receive<font color="#E5E5E5"> as much attention now is models</font>

267
00:11:00,620 --> 00:11:01,820
that operate in the<font color="#E5E5E5"> continuous time</font>

268
00:11:01,820 --> 00:11:04,070
<font color="#E5E5E5">domain so in particular spiking neural</font>

269
00:11:04,070 --> 00:11:06,350
networks<font color="#E5E5E5"> and one of the reasons that</font>

270
00:11:06,350 --> 00:11:07,820
they're interesting that it's a

271
00:11:07,820 --> 00:11:10,610
different learning<font color="#E5E5E5"> paradigm but if you</font>

272
00:11:10,610 --> 00:11:12,560
have that kind of model<font color="#E5E5E5"> it's possible to</font>

273
00:11:12,560 --> 00:11:15,170
do extremely<font color="#E5E5E5"> efficient implementations</font>

274
00:11:15,170 --> 00:11:17,690
in hardware so you<font color="#E5E5E5"> can have very</font>

275
00:11:17,690 --> 00:11:18,910
<font color="#CCCCCC">low-power</font>

276
00:11:18,910 --> 00:11:22,040
<font color="#CCCCCC">New York neural networks so I said</font><font color="#E5E5E5"> yeah</font>

277
00:11:22,040 --> 00:11:24,080
<font color="#CCCCCC">there's lots of</font><font color="#E5E5E5"> things to to look at I'd</font>

278
00:11:24,080 --> 00:11:25,880
encourage you<font color="#E5E5E5"> to look</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> the history of</font>

279
00:11:25,880 --> 00:11:27,110
the field<font color="#E5E5E5"> in addition</font><font color="#CCCCCC"> to the stuff</font><font color="#E5E5E5"> that</font>

280
00:11:27,110 --> 00:11:34,279
<font color="#E5E5E5">we cover in this course oh and one last</font>

281
00:11:34,279 --> 00:11:37,040
thing at a high level this small caveat

282
00:11:37,040 --> 00:11:41,029
on terminology<font color="#CCCCCC"> and this is a little bit</font>

283
00:11:41,029 --> 00:11:43,850
a function of the history of<font color="#E5E5E5"> the field</font>

284
00:11:43,850 --> 00:11:46,490
<font color="#E5E5E5">we sometimes use different names to</font>

285
00:11:46,490 --> 00:11:49,700
<font color="#CCCCCC">refer to</font><font color="#E5E5E5"> the same thing</font><font color="#CCCCCC"> so I'll try</font><font color="#E5E5E5"> and</font>

286
00:11:49,700 --> 00:11:51,350
be<font color="#E5E5E5"> consistent but I'm sure I wouldn't</font>

287
00:11:51,350 --> 00:11:54,350
manage<font color="#E5E5E5"> it fully so for instance people</font>

288
00:11:54,350 --> 00:11:56,720
interchangeably<font color="#E5E5E5"> might use the word unit</font>

289
00:11:56,720 --> 00:12:00,709
or neuron<font color="#E5E5E5"> to describe the activate</font>

290
00:12:00,709 --> 00:12:02,529
activity in a single<font color="#E5E5E5"> element of a layer</font>

291
00:12:02,529 --> 00:12:06,380
similarly you might hear non-linearity

292
00:12:06,380 --> 00:12:08,300
or activation function and they they

293
00:12:08,300 --> 00:12:10,400
also mean the same thing<font color="#CCCCCC"> slightly</font>

294
00:12:10,400 --> 00:12:13,130
<font color="#E5E5E5">trickier is that we sometimes use the</font>

295
00:12:13,130 --> 00:12:14,900
same name to refer to different<font color="#CCCCCC"> things</font>

296
00:12:14,900 --> 00:12:18,380
so in the more<font color="#E5E5E5"> traditional view of the</font>

297
00:12:18,380 --> 00:12:21,050
field<font color="#E5E5E5"> folks would refer</font><font color="#CCCCCC"> to the compound</font>

298
00:12:21,050 --> 00:12:23,180
<font color="#E5E5E5">of say a nonlinear transformation</font><font color="#CCCCCC"> plus</font><font color="#E5E5E5"> a</font>

299
00:12:23,180 --> 00:12:25,570
non-linearity<font color="#CCCCCC"> as Leia</font>

300
00:12:25,570 --> 00:12:28,040
in more<font color="#CCCCCC"> modern parlance particularly</font>

301
00:12:28,040 --> 00:12:29,060
when we're thinking<font color="#CCCCCC"> about implementation</font>

302
00:12:29,060 --> 00:12:30,560
<font color="#E5E5E5">that things like tend to flow then we</font>

303
00:12:30,560 --> 00:12:33,860
kind of<font color="#CCCCCC"> tend to describe as a layer</font>

304
00:12:33,860 --> 00:12:35,630
these more atomic<font color="#E5E5E5"> operations so in this</font>

305
00:12:35,630 --> 00:12:37,730
case we'd call the linear transformation

306
00:12:37,730 --> 00:12:40,839
<font color="#CCCCCC">as one layer and the</font>

307
00:12:40,839 --> 00:12:44,720
<font color="#E5E5E5">nonlinearity another layer and</font><font color="#CCCCCC"> link</font><font color="#E5E5E5"> to</font>

308
00:12:44,720 --> 00:12:45,950
<font color="#E5E5E5">that there's</font><font color="#CCCCCC"> also slightly</font><font color="#E5E5E5"> different</font>

309
00:12:45,950 --> 00:12:48,140
graphical conventions<font color="#E5E5E5"> when we're</font>

310
00:12:48,140 --> 00:12:50,060
depicting models<font color="#E5E5E5"> it should usually be</font>

311
00:12:50,060 --> 00:12:51,320
obvious<font color="#E5E5E5"> from context but I just wanted</font>

312
00:12:51,320 --> 00:12:52,400
to<font color="#CCCCCC"> call that out just in</font><font color="#E5E5E5"> case</font><font color="#CCCCCC"> that's</font>

313
00:12:52,400 --> 00:12:56,690
confusing<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so as I said we're gonna</font>

314
00:12:56,690 --> 00:12:58,790
start off with<font color="#E5E5E5"> what can we do with</font><font color="#CCCCCC"> a</font>

315
00:12:58,790 --> 00:13:00,470
single<font color="#CCCCCC"> layer networks and to begin with</font>

316
00:13:00,470 --> 00:13:02,690
<font color="#CCCCCC">I'm gonna make a</font><font color="#E5E5E5"> very short digression</font>

317
00:13:02,690 --> 00:13:07,190
<font color="#CCCCCC">on real neurons</font><font color="#E5E5E5"> and describe</font><font color="#CCCCCC"> some of the</font>

318
00:13:07,190 --> 00:13:09,140
kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> inspiration for the</font><font color="#CCCCCC"> artifice in</font>

319
00:13:09,140 --> 00:13:10,970
<font color="#E5E5E5">your</font><font color="#CCCCCC"> Andriy we use it's a very loose</font>

320
00:13:10,970 --> 00:13:12,110
connection and I won't<font color="#E5E5E5"> dwell there too</font>

321
00:13:12,110 --> 00:13:15,050
much<font color="#CCCCCC"> will</font><font color="#E5E5E5"> then talk about what we can do</font>

322
00:13:15,050 --> 00:13:17,300
with a<font color="#E5E5E5"> linear layer sigmoid activation</font>

323
00:13:17,300 --> 00:13:20,890
function and then we'll kind<font color="#CCCCCC"> of recap</font>

324
00:13:20,890 --> 00:13:23,330
<font color="#CCCCCC">binary classification or logistic</font>

325
00:13:23,330 --> 00:13:25,100
regression which should have<font color="#CCCCCC"> been in</font>

326
00:13:25,100 --> 00:13:26,600
either<font color="#E5E5E5"> the last lecture or in</font><font color="#CCCCCC"> their</font>

327
00:13:26,600 --> 00:13:29,029
<font color="#E5E5E5">business for that lecture and</font><font color="#CCCCCC"> then we'll</font>

328
00:13:29,029 --> 00:13:31,190
move on from<font color="#E5E5E5"> binary classification into</font>

329
00:13:31,190 --> 00:13:36,200
<font color="#E5E5E5">multi-class classification okay so in</font>

330
00:13:36,200 --> 00:13:38,570
the slide<font color="#CCCCCC"> here in the bottom right this</font>

331
00:13:38,570 --> 00:13:42,290
is a cartoon depiction of a real neuron

332
00:13:42,290 --> 00:13:43,940
<font color="#E5E5E5">so there's a couple things</font><font color="#CCCCCC"> going on</font><font color="#E5E5E5"> we</font>

333
00:13:43,940 --> 00:13:47,120
have a cell body<font color="#CCCCCC"> the dendrites which</font><font color="#E5E5E5"> is</font>

334
00:13:47,120 --> 00:13:48,529
where the inputs from<font color="#E5E5E5"> other neurons are</font>

335
00:13:48,529 --> 00:13:51,740
received<font color="#E5E5E5"> and then the axon with the</font>

336
00:13:51,740 --> 00:13:53,000
<font color="#E5E5E5">tunnel bulbs and that's kind of the</font>

337
00:13:53,000 --> 00:13:55,339
output from<font color="#E5E5E5"> this neuron and more or less</font>

338
00:13:55,339 --> 00:13:57,890
the way<font color="#E5E5E5"> this operates when a neuron is</font>

339
00:13:57,890 --> 00:13:59,660
active an electrical impulse travels

340
00:13:59,660 --> 00:14:02,060
down the axon<font color="#E5E5E5"> it reaches the terminal</font>

341
00:14:02,060 --> 00:14:03,920
bulb which causes vesicles of

342
00:14:03,920 --> 00:14:05,959
neurotransmitter to be released<font color="#E5E5E5"> those</font>

343
00:14:05,959 --> 00:14:08,200
kind<font color="#E5E5E5"> of diffuse across the gap between</font>

344
00:14:08,200 --> 00:14:10,160
this neuron and the neuron<font color="#CCCCCC"> that it's</font>

345
00:14:10,160 --> 00:14:12,440
communicating with<font color="#CCCCCC"> when it's received in</font>

346
00:14:12,440 --> 00:14:14,600
the dendrites<font color="#E5E5E5"> it causes a depolarization</font>

347
00:14:14,600 --> 00:14:17,570
that eventually<font color="#E5E5E5"> makes its way back</font><font color="#CCCCCC"> to</font>

348
00:14:17,570 --> 00:14:21,080
<font color="#E5E5E5">the cell body and</font><font color="#CCCCCC"> B so some of the</font>

349
00:14:21,080 --> 00:14:22,130
depolarizations

350
00:14:22,130 --> 00:14:24,140
from all these dendrites<font color="#E5E5E5"> is what</font>

351
00:14:24,140 --> 00:14:25,940
<font color="#CCCCCC">determines whether</font><font color="#E5E5E5"> or not the receiving</font>

352
00:14:25,940 --> 00:14:30,260
<font color="#E5E5E5">neuron is going to fire or</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> and in a</font>

353
00:14:30,260 --> 00:14:32,720
very<font color="#E5E5E5"> very coarse way this process of</font>

354
00:14:32,720 --> 00:14:35,180
receiving<font color="#E5E5E5"> inputs of different strengths</font>

355
00:14:35,180 --> 00:14:37,220
<font color="#E5E5E5">and integrating it in the cell body is</font>

356
00:14:37,220 --> 00:14:41,270
what this equation<font color="#CCCCCC"> is describing so it's</font>

357
00:14:41,270 --> 00:14:43,400
<font color="#E5E5E5">just a weighted sum of inputs or an</font>

358
00:14:43,400 --> 00:14:45,320
affine transformation if you will so the

359
00:14:45,320 --> 00:14:50,750
inputs X the the weights W and maybe

360
00:14:50,750 --> 00:14:53,200
some bias<font color="#CCCCCC"> B and so</font>

361
00:14:53,200 --> 00:14:56,100
is what we'd call a simple<font color="#E5E5E5"> linear neuron</font>

362
00:14:56,100 --> 00:14:58,420
<font color="#CCCCCC">if we have a whole collection of</font><font color="#E5E5E5"> them</font>

363
00:14:58,420 --> 00:15:00,910
then we can move into matrix<font color="#CCCCCC"> vector</font>

364
00:15:00,910 --> 00:15:04,990
notation so this vector Y is a vector<font color="#CCCCCC"> of</font>

365
00:15:04,990 --> 00:15:08,530
linear neuron<font color="#E5E5E5"> States and we obtain that</font>

366
00:15:08,530 --> 00:15:10,930
<font color="#CCCCCC">by doing</font><font color="#E5E5E5"> a matrix vector multiplication</font>

367
00:15:10,930 --> 00:15:12,910
<font color="#E5E5E5">between the inputs and our weight matrix</font>

368
00:15:12,910 --> 00:15:17,080
<font color="#E5E5E5">and some bias vector B and there's not</font>

369
00:15:17,080 --> 00:15:18,730
<font color="#E5E5E5">an awful lot we can do</font><font color="#CCCCCC"> with that</font><font color="#E5E5E5"> setup</font>

370
00:15:18,730 --> 00:15:20,710
<font color="#CCCCCC">but we are</font><font color="#E5E5E5"> able to do linear regression</font>

371
00:15:20,710 --> 00:15:22,920
which<font color="#E5E5E5"> I think you guys saw previously</font>

372
00:15:22,920 --> 00:15:26,260
<font color="#E5E5E5">but in practice we typically combine</font>

373
00:15:26,260 --> 00:15:28,210
these linear layers with some

374
00:15:28,210 --> 00:15:29,860
<font color="#E5E5E5">non-linearity</font><font color="#CCCCCC"> and particularly for a</font>

375
00:15:29,860 --> 00:15:33,310
stacking them in depth<font color="#E5E5E5"> so let's let's</font>

376
00:15:33,310 --> 00:15:34,090
take<font color="#E5E5E5"> a look at one of those</font>

377
00:15:34,090 --> 00:15:35,470
nonlinearities and<font color="#CCCCCC"> this will kind</font><font color="#E5E5E5"> of</font>

378
00:15:35,470 --> 00:15:37,960
complete the<font color="#CCCCCC"> picture of our</font><font color="#E5E5E5"> artificial</font>

379
00:15:37,960 --> 00:15:41,470
<font color="#E5E5E5">neuron so what I'm showing here is</font>

380
00:15:41,470 --> 00:15:43,660
something<font color="#E5E5E5"> called the sigmoid function</font>

381
00:15:43,660 --> 00:15:45,220
<font color="#E5E5E5">you can think of it</font><font color="#CCCCCC"> as a kind of</font>

382
00:15:45,220 --> 00:15:49,090
squashing function so this<font color="#E5E5E5"> equation here</font>

383
00:15:49,090 --> 00:15:50,650
describes the<font color="#E5E5E5"> input-output relationship</font>

384
00:15:50,650 --> 00:15:52,560
and so when we combine<font color="#E5E5E5"> that</font><font color="#CCCCCC"> with the</font>

385
00:15:52,560 --> 00:15:55,810
<font color="#E5E5E5">linear mapping from previously we have a</font>

386
00:15:55,810 --> 00:15:57,640
<font color="#E5E5E5">way</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> sum</font><font color="#CCCCCC"> of inputs</font><font color="#E5E5E5"> offset by a bias</font>

387
00:15:57,640 --> 00:15:59,140
and then<font color="#E5E5E5"> we pass</font><font color="#CCCCCC"> it through</font><font color="#E5E5E5"> this</font>

388
00:15:59,140 --> 00:16:01,150
squashing function and this in a very

389
00:16:01,150 --> 00:16:04,300
coarse way reproduces what happens in it

390
00:16:04,300 --> 00:16:05,710
in a real neuron when it receives input

391
00:16:05,710 --> 00:16:09,330
so there's some threshold below which

392
00:16:09,330 --> 00:16:11,530
the neuron isn't going to fire at all

393
00:16:11,530 --> 00:16:13,990
once it's above threshold<font color="#E5E5E5"> then it</font>

394
00:16:13,990 --> 00:16:16,120
increases its fire and great<font color="#E5E5E5"> but there's</font>

395
00:16:16,120 --> 00:16:17,860
only so<font color="#E5E5E5"> fast that a real neuron can fire</font>

396
00:16:17,860 --> 00:16:21,970
and so it has upset rating and so at a

397
00:16:21,970 --> 00:16:23,440
very<font color="#E5E5E5"> high level</font><font color="#CCCCCC"> that's what this</font>

398
00:16:23,440 --> 00:16:28,240
function is<font color="#CCCCCC"> is performing for us it used</font>

399
00:16:28,240 --> 00:16:31,660
<font color="#E5E5E5">to be that this</font><font color="#CCCCCC"> was the sort of</font>

400
00:16:31,660 --> 00:16:33,070
<font color="#E5E5E5">canonical choice</font><font color="#CCCCCC"> in neural network so if</font>

401
00:16:33,070 --> 00:16:35,160
you look at papers particularly<font color="#E5E5E5"> from the</font>

402
00:16:35,160 --> 00:16:37,360
<font color="#E5E5E5">90s or the early two-thousands you'll</font>

403
00:16:37,360 --> 00:16:39,760
see this<font color="#CCCCCC"> kind of activation function</font>

404
00:16:39,760 --> 00:16:41,710
everywhere<font color="#E5E5E5"> it's not that common anymore</font>

405
00:16:41,710 --> 00:16:43,630
<font color="#E5E5E5">and we'll go into</font><font color="#CCCCCC"> some of</font><font color="#E5E5E5"> the reasons</font>

406
00:16:43,630 --> 00:16:46,060
<font color="#CCCCCC">why</font><font color="#E5E5E5"> but at a high level</font><font color="#CCCCCC"> it doesn't</font><font color="#E5E5E5"> have</font>

407
00:16:46,060 --> 00:16:49,120
as nice gradient properties as we'd like

408
00:16:49,120 --> 00:16:50,170
when we're building<font color="#E5E5E5"> these very deep</font>

409
00:16:50,170 --> 00:16:53,230
models<font color="#E5E5E5"> however</font><font color="#CCCCCC"> it is I still actively</font>

410
00:16:53,230 --> 00:16:54,430
<font color="#CCCCCC">use them a</font><font color="#E5E5E5"> couple</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> places so in</font>

411
00:16:54,430 --> 00:16:56,860
particular<font color="#E5E5E5"> for</font><font color="#CCCCCC"> gating</font><font color="#E5E5E5"> units if we want</font>

412
00:16:56,860 --> 00:17:00,100
<font color="#E5E5E5">to kind of have</font><font color="#CCCCCC"> some kind</font><font color="#E5E5E5"> of soft</font>

413
00:17:00,100 --> 00:17:02,170
differentiable switch and one of the

414
00:17:02,170 --> 00:17:03,340
most<font color="#E5E5E5"> common places that you'll see this</font>

415
00:17:03,340 --> 00:17:06,569
is in long<font color="#CCCCCC"> short-term memory cells</font>

416
00:17:06,569 --> 00:17:08,429
which<font color="#E5E5E5"> I'll hear</font><font color="#CCCCCC"> a lot more</font><font color="#E5E5E5"> about in</font><font color="#CCCCCC"> the</font>

417
00:17:08,429 --> 00:17:14,459
class on recurrent networks<font color="#CCCCCC"> so yeah as I</font>

418
00:17:14,459 --> 00:17:18,148
<font color="#E5E5E5">said even</font><font color="#CCCCCC"> with just</font><font color="#E5E5E5"> a simple linear so</font>

419
00:17:18,148 --> 00:17:19,648
<font color="#E5E5E5">signal neuron</font><font color="#CCCCCC"> we can actually do useful</font>

420
00:17:19,648 --> 00:17:23,369
things so I just grabbed this purple<font color="#E5E5E5"> box</font>

421
00:17:23,369 --> 00:17:25,049
here I<font color="#CCCCCC"> grabbed some tourist slides so</font>

422
00:17:25,049 --> 00:17:27,049
there's a<font color="#E5E5E5"> slight change in</font><font color="#CCCCCC"> notation</font><font color="#E5E5E5"> but</font>

423
00:17:27,049 --> 00:17:30,210
if you think back to logistic regression

424
00:17:30,210 --> 00:17:33,120
what do we have we have<font color="#CCCCCC"> a linear model a</font>

425
00:17:33,120 --> 00:17:34,830
<font color="#CCCCCC">linked</font><font color="#E5E5E5"> function and then a cross and to</font>

426
00:17:34,830 --> 00:17:37,590
be loss and this<font color="#E5E5E5"> linear model is exactly</font>

427
00:17:37,590 --> 00:17:40,139
what's<font color="#CCCCCC"> going on in this linear</font><font color="#E5E5E5"> layer and</font>

428
00:17:40,139 --> 00:17:43,169
the link<font color="#CCCCCC"> function is what the sigmoid is</font>

429
00:17:43,169 --> 00:17:45,210
<font color="#CCCCCC">doing so there's an extremely tight</font>

430
00:17:45,210 --> 00:17:48,419
relationship between<font color="#E5E5E5"> logistic regression</font>

431
00:17:48,419 --> 00:17:51,360
<font color="#E5E5E5">and bited classification and these</font>

432
00:17:51,360 --> 00:17:53,309
<font color="#E5E5E5">layers in in a neural network and so</font>

433
00:17:53,309 --> 00:17:54,750
with just<font color="#E5E5E5"> a single neuron we can</font>

434
00:17:54,750 --> 00:17:57,929
actually build a binary classifier<font color="#E5E5E5"> so in</font>

435
00:17:57,929 --> 00:17:59,909
this toy example<font color="#CCCCCC"> I've</font><font color="#E5E5E5"> got two classes 0</font>

436
00:17:59,909 --> 00:18:03,419
<font color="#CCCCCC">&</font><font color="#E5E5E5"> 1</font><font color="#CCCCCC"> if I arrange</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> have my weight</font>

437
00:18:03,419 --> 00:18:04,649
vector pointing<font color="#E5E5E5"> in this direction so</font>

438
00:18:04,649 --> 00:18:07,700
orthogonal to this red separating plane

439
00:18:07,700 --> 00:18:10,529
and I<font color="#E5E5E5"> adjust the strength of the weights</font>

440
00:18:10,529 --> 00:18:12,629
and<font color="#E5E5E5"> the biases appropriately then I can</font>

441
00:18:12,629 --> 00:18:14,610
have<font color="#E5E5E5"> a</font><font color="#CCCCCC"> system where when I give</font><font color="#E5E5E5"> it an</font>

442
00:18:14,610 --> 00:18:17,629
input from class 0 the output is<font color="#CCCCCC"> 0 and</font>

443
00:18:17,629 --> 00:18:20,009
when<font color="#E5E5E5"> I give it an input from class 1 the</font>

444
00:18:20,009 --> 00:18:25,320
<font color="#CCCCCC">output</font><font color="#E5E5E5"> is 1 so that was binary</font>

445
00:18:25,320 --> 00:18:26,519
classification we're now<font color="#E5E5E5"> going to move</font>

446
00:18:26,519 --> 00:18:29,070
on and<font color="#E5E5E5"> discuss something called a soft</font>

447
00:18:29,070 --> 00:18:31,350
<font color="#E5E5E5">max layer and this essentially extends</font>

448
00:18:31,350 --> 00:18:34,019
binary classification into<font color="#E5E5E5"> multi-class</font>

449
00:18:34,019 --> 00:18:37,139
classification so this type<font color="#CCCCCC"> of layer is</font>

450
00:18:37,139 --> 00:18:39,269
a way to allow us<font color="#E5E5E5"> to do either</font>

451
00:18:39,269 --> 00:18:40,830
multi-class classification<font color="#E5E5E5"> another place</font>

452
00:18:40,830 --> 00:18:42,919
that<font color="#E5E5E5"> you you might see this used is</font>

453
00:18:42,919 --> 00:18:45,210
<font color="#E5E5E5">internally</font><font color="#CCCCCC"> in networks if you need to do</font>

454
00:18:45,210 --> 00:18:47,070
some kind of multi-way switching so if

455
00:18:47,070 --> 00:18:49,289
say you have a junction<font color="#E5E5E5"> in your network</font>

456
00:18:49,289 --> 00:18:50,879
and<font color="#E5E5E5"> there's multiple different inputs</font>

457
00:18:50,879 --> 00:18:55,110
and<font color="#E5E5E5"> one of them needs to be routed this</font>

458
00:18:55,110 --> 00:18:56,309
is something you can<font color="#E5E5E5"> use</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> a kind of</font>

459
00:18:56,309 --> 00:19:00,990
multi way gating mechanism<font color="#E5E5E5"> so what does</font>

460
00:19:00,990 --> 00:19:03,000
it<font color="#E5E5E5"> actually do well if we first think</font>

461
00:19:03,000 --> 00:19:06,179
<font color="#CCCCCC">about</font><font color="#E5E5E5"> the Arg max function so when we</font>

462
00:19:06,179 --> 00:19:08,759
apply<font color="#CCCCCC"> that</font><font color="#E5E5E5"> to some input vector X all</font>

463
00:19:08,759 --> 00:19:11,879
but the largest<font color="#CCCCCC"> element is zero</font><font color="#E5E5E5"> and the</font>

464
00:19:11,879 --> 00:19:15,289
largest<font color="#E5E5E5"> element is one the softmax</font><font color="#CCCCCC"> is</font>

465
00:19:15,289 --> 00:19:17,970
essentially<font color="#CCCCCC"> just a soft version of the</font>

466
00:19:17,970 --> 00:19:20,039
<font color="#CCCCCC">Arg max</font><font color="#E5E5E5"> so rather than</font>

467
00:19:20,039 --> 00:19:22,109
only the<font color="#E5E5E5"> largest</font><font color="#CCCCCC"> element being</font><font color="#E5E5E5"> one and</font>

468
00:19:22,109 --> 00:19:24,029
<font color="#E5E5E5">everything else being zero the largest</font>

469
00:19:24,029 --> 00:19:25,710
element<font color="#E5E5E5"> will be the one that's closest</font>

470
00:19:25,710 --> 00:19:27,419
<font color="#E5E5E5">to one the others will</font><font color="#CCCCCC"> be close to zero</font>

471
00:19:27,419 --> 00:19:30,600
and the sum<font color="#E5E5E5"> of activities across the</font><font color="#CCCCCC"> app</font>

472
00:19:30,600 --> 00:19:32,940
<font color="#CCCCCC">vector what we want so it it also gives</font>

473
00:19:32,940 --> 00:19:36,029
<font color="#E5E5E5">us a probability distribution</font><font color="#CCCCCC"> the</font>

474
00:19:36,029 --> 00:19:37,799
mathematical form<font color="#E5E5E5"> is here so we have</font>

475
00:19:37,799 --> 00:19:41,220
these exponents<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> know if the</font>

476
00:19:41,220 --> 00:19:42,720
<font color="#E5E5E5">resolution is high enough on this</font>

477
00:19:42,720 --> 00:19:44,609
monitor<font color="#E5E5E5"> but what I'm</font><font color="#CCCCCC"> showing in these</font>

478
00:19:44,609 --> 00:19:46,799
two bar plots here is<font color="#E5E5E5"> two slightly</font>

479
00:19:46,799 --> 00:19:49,830
<font color="#CCCCCC">different scenarios so the red bars are</font>

480
00:19:49,830 --> 00:19:52,889
the<font color="#E5E5E5"> inputs the blue bars are the outputs</font>

481
00:19:52,889 --> 00:19:56,340
<font color="#E5E5E5">and the scale of the red bars in the in</font>

482
00:19:56,340 --> 00:19:58,619
the lower plot is double<font color="#CCCCCC"> that</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> one</font>

483
00:19:58,619 --> 00:20:02,789
in the<font color="#E5E5E5"> the upper plot so in this example</font>

484
00:20:02,789 --> 00:20:05,369
<font color="#E5E5E5">here the the output</font><font color="#CCCCCC"> for the largest</font>

485
00:20:05,369 --> 00:20:08,759
<font color="#E5E5E5">input is the largest and you can't quite</font>

486
00:20:08,759 --> 00:20:11,249
see but it's about 0.6 so the closest to

487
00:20:11,249 --> 00:20:13,649
<font color="#E5E5E5">one however if I increase the magnitude</font>

488
00:20:13,649 --> 00:20:15,419
of<font color="#E5E5E5"> all the input so that the ratios are</font>

489
00:20:15,419 --> 00:20:17,580
still the same<font color="#E5E5E5"> but now this is</font><font color="#CCCCCC"> 0.9 so</font>

490
00:20:17,580 --> 00:20:19,409
it's much much close<font color="#CCCCCC"> to</font><font color="#E5E5E5"> 1 so as the</font>

491
00:20:19,409 --> 00:20:21,090
scale of the inputs gets larger and

492
00:20:21,090 --> 00:20:22,889
<font color="#E5E5E5">larger this gets closer and closer to</font>

493
00:20:22,889 --> 00:20:28,499
<font color="#E5E5E5">doing a hard max operation</font><font color="#CCCCCC"> and so what</font>

494
00:20:28,499 --> 00:20:29,909
<font color="#E5E5E5">can we use</font><font color="#CCCCCC"> this for</font><font color="#E5E5E5"> well as I said we</font>

495
00:20:29,909 --> 00:20:32,549
can<font color="#CCCCCC"> use it to do</font><font color="#E5E5E5"> multi way</font>

496
00:20:32,549 --> 00:20:35,039
classification so if<font color="#E5E5E5"> you combine this</font>

497
00:20:35,039 --> 00:20:38,759
kind of unit with a<font color="#E5E5E5"> cross entropy loss</font>

498
00:20:38,759 --> 00:20:40,649
<font color="#CCCCCC">we're able</font><font color="#E5E5E5"> to Train something that will</font>

499
00:20:40,649 --> 00:20:43,499
do<font color="#E5E5E5"> classification of inputs into one of</font>

500
00:20:43,499 --> 00:20:46,710
several<font color="#E5E5E5"> different</font><font color="#CCCCCC"> classes</font><font color="#E5E5E5"> so let's take</font>

501
00:20:46,710 --> 00:20:48,960
a look<font color="#E5E5E5"> at what this relationship looks</font>

502
00:20:48,960 --> 00:20:52,979
<font color="#CCCCCC">like so the output for the il iment</font>

503
00:20:52,979 --> 00:20:54,090
which you can<font color="#E5E5E5"> think of it as the</font>

504
00:20:54,090 --> 00:20:55,649
probability<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the input is assigned</font>

505
00:20:55,649 --> 00:21:00,149
to class<font color="#E5E5E5"> I is given by in the numerator</font>

506
00:21:00,149 --> 00:21:01,979
<font color="#E5E5E5">we have an exponent that is</font><font color="#CCCCCC"> a weighted</font>

507
00:21:01,979 --> 00:21:04,859
sum<font color="#E5E5E5"> of inputs plus a bias and then this</font>

508
00:21:04,859 --> 00:21:06,419
<font color="#E5E5E5">is normalized by that same expression</font>

509
00:21:06,419 --> 00:21:08,669
<font color="#CCCCCC">over all the other possible outputs so</font>

510
00:21:08,669 --> 00:21:10,879
we have a probability<font color="#E5E5E5"> distribution</font><font color="#CCCCCC"> and</font>

511
00:21:10,879 --> 00:21:13,470
in<font color="#CCCCCC"> a sense</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> think of what's going</font>

512
00:21:13,470 --> 00:21:15,869
<font color="#E5E5E5">on in this exponent as being the amount</font>

513
00:21:15,869 --> 00:21:17,820
<font color="#CCCCCC">of evidence that we have for</font><font color="#E5E5E5"> the</font>

514
00:21:17,820 --> 00:21:22,529
presence of the ID class<font color="#CCCCCC"> and had we had</font>

515
00:21:22,529 --> 00:21:24,450
<font color="#CCCCCC">to retrain</font><font color="#E5E5E5"> this had we learn we can</font><font color="#CCCCCC"> just</font>

516
00:21:24,450 --> 00:21:26,580
do that<font color="#E5E5E5"> by minimizing</font><font color="#CCCCCC"> the negative log</font>

517
00:21:26,580 --> 00:21:28,360
likelihood or<font color="#CCCCCC"> accordingly</font>

518
00:21:28,360 --> 00:21:30,130
<font color="#E5E5E5">the</font><font color="#CCCCCC"> cross-entropy</font><font color="#E5E5E5"> of the true labels</font>

519
00:21:30,130 --> 00:21:33,010
under our predictive<font color="#E5E5E5"> distribution in</font>

520
00:21:33,010 --> 00:21:35,100
terms<font color="#CCCCCC"> of notation</font><font color="#E5E5E5"> how we represent</font><font color="#CCCCCC"> that</font>

521
00:21:35,100 --> 00:21:36,850
something that you commonly see<font color="#E5E5E5"> these</font>

522
00:21:36,850 --> 00:21:40,030
<font color="#E5E5E5">things called</font><font color="#CCCCCC"> one-hot vectors to encode</font>

523
00:21:40,030 --> 00:21:42,760
the<font color="#CCCCCC"> two plus label</font><font color="#E5E5E5"> and what's that look</font>

524
00:21:42,760 --> 00:21:44,950
<font color="#CCCCCC">like well basically it's a</font><font color="#E5E5E5"> vector</font><font color="#CCCCCC"> that</font>

525
00:21:44,950 --> 00:21:48,429
is of the<font color="#E5E5E5"> dimensionality of the output</font>

526
00:21:48,429 --> 00:21:51,490
space<font color="#E5E5E5"> the element for the true class</font>

527
00:21:51,490 --> 00:21:52,870
like the the entry for<font color="#E5E5E5"> the element of</font>

528
00:21:52,870 --> 00:21:54,640
the true class label is<font color="#E5E5E5"> one and</font>

529
00:21:54,640 --> 00:21:57,100
everything<font color="#E5E5E5"> else is zero so it's this</font>

530
00:21:57,100 --> 00:21:58,690
<font color="#E5E5E5">vector here in the</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> above</font><font color="#CCCCCC"> these</font>

531
00:21:58,690 --> 00:22:01,510
digits<font color="#E5E5E5"> so four-digit for the</font><font color="#CCCCCC"> one hop</font>

532
00:22:01,510 --> 00:22:03,429
label vector<font color="#E5E5E5"> would look like this so the</font>

533
00:22:03,429 --> 00:22:05,169
<font color="#E5E5E5">fourth element</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> one everything else is</font>

534
00:22:05,169 --> 00:22:09,250
zero<font color="#CCCCCC"> if we</font><font color="#E5E5E5"> plug this into our</font><font color="#CCCCCC"> expression</font>

535
00:22:09,250 --> 00:22:11,440
for<font color="#E5E5E5"> the negative log likelihood then we</font>

536
00:22:11,440 --> 00:22:13,600
see<font color="#E5E5E5"> something</font><font color="#CCCCCC"> like this so since the</font>

537
00:22:13,600 --> 00:22:17,049
<font color="#E5E5E5">only element</font><font color="#CCCCCC"> that of</font><font color="#E5E5E5"> T that is going to</font>

538
00:22:17,049 --> 00:22:19,210
be nonzero<font color="#E5E5E5"> is the target</font><font color="#CCCCCC"> we're</font>

539
00:22:19,210 --> 00:22:22,650
essentially asking this probability here

540
00:22:22,650 --> 00:22:24,700
<font color="#CCCCCC">the log</font><font color="#E5E5E5"> probability of this to be</font>

541
00:22:24,700 --> 00:22:26,110
maximized and<font color="#E5E5E5"> then we just sum that</font>

542
00:22:26,110 --> 00:22:30,100
across<font color="#E5E5E5"> our data cases so even</font><font color="#CCCCCC"> just with</font>

543
00:22:30,100 --> 00:22:32,590
a linear layer<font color="#E5E5E5"> if we were to optimize</font>

544
00:22:32,590 --> 00:22:35,470
this we could form a very simple linear

545
00:22:35,470 --> 00:22:38,080
<font color="#CCCCCC">multi way classifier for say digits</font>

546
00:22:38,080 --> 00:22:39,970
it wouldn't work super well<font color="#CCCCCC"> and we'll</font>

547
00:22:39,970 --> 00:22:42,370
talk about<font color="#E5E5E5"> adding depth but</font><font color="#CCCCCC"> that's</font>

548
00:22:42,370 --> 00:22:43,720
<font color="#E5E5E5">something</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can actually usefully</font>

549
00:22:43,720 --> 00:22:48,250
do with one<font color="#E5E5E5"> of these layers</font><font color="#CCCCCC"> now as I</font>

550
00:22:48,250 --> 00:22:51,040
said<font color="#E5E5E5"> it's it used to be the case that</font>

551
00:22:51,040 --> 00:22:53,440
<font color="#E5E5E5">the the sigmoid was the dominant</font>

552
00:22:53,440 --> 00:22:55,419
non-linearity<font color="#E5E5E5"> and that's fallen out of</font>

553
00:22:55,419 --> 00:22:57,250
favor and<font color="#E5E5E5"> so in a lot of the neural</font>

554
00:22:57,250 --> 00:22:59,049
networks<font color="#E5E5E5"> that you'll see nowadays</font><font color="#CCCCCC"> a much</font>

555
00:22:59,049 --> 00:23:00,580
more common<font color="#CCCCCC"> activation function is</font>

556
00:23:00,580 --> 00:23:02,470
<font color="#E5E5E5">something called the rectified linear</font>

557
00:23:02,470 --> 00:23:04,450
unit or<font color="#CCCCCC"> so notice just shortened to a</font>

558
00:23:04,450 --> 00:23:08,980
<font color="#E5E5E5">ray</font><font color="#CCCCCC"> Lu and it has a</font><font color="#E5E5E5"> couple of nice</font>

559
00:23:08,980 --> 00:23:12,309
properties<font color="#E5E5E5"> so it's a lot simpler and</font>

560
00:23:12,309 --> 00:23:14,100
computationally cheaper than the sigmoid

561
00:23:14,100 --> 00:23:16,330
it's basically a function<font color="#CCCCCC"> that</font>

562
00:23:16,330 --> 00:23:20,440
thresholds<font color="#CCCCCC"> below by</font><font color="#E5E5E5"> 0</font><font color="#CCCCCC"> or otherwise has a</font>

563
00:23:20,440 --> 00:23:23,770
pass through so we can write it<font color="#CCCCCC"> down</font><font color="#E5E5E5"> as</font>

564
00:23:23,770 --> 00:23:26,890
this so if the if the input to the

565
00:23:26,890 --> 00:23:29,230
rayleigh function is below<font color="#CCCCCC"> zero then the</font>

566
00:23:29,230 --> 00:23:31,480
<font color="#E5E5E5">output is</font><font color="#CCCCCC"> just zero and then above</font><font color="#E5E5E5"> zero</font>

567
00:23:31,480 --> 00:23:34,809
<font color="#E5E5E5">it's just a linear</font><font color="#CCCCCC"> pass-through</font><font color="#E5E5E5"> and it</font>

568
00:23:34,809 --> 00:23:36,309
has a couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> nice properties</font><font color="#CCCCCC"> one of</font>

569
00:23:36,309 --> 00:23:40,330
which is in this<font color="#E5E5E5"> region here</font><font color="#CCCCCC"> the</font>

570
00:23:40,330 --> 00:23:41,970
<font color="#E5E5E5">gradient is</font><font color="#CCCCCC"> constant</font>

571
00:23:41,970 --> 00:23:44,530
and generally in in<font color="#E5E5E5"> your networks we</font>

572
00:23:44,530 --> 00:23:46,650
want to have gradients flowing so it's

573
00:23:46,650 --> 00:23:49,210
maybe<font color="#E5E5E5"> not so nice here that there's no</font>

574
00:23:49,210 --> 00:23:50,590
great information here<font color="#CCCCCC"> but</font><font color="#E5E5E5"> at least once</font>

575
00:23:50,590 --> 00:23:52,780
<font color="#CCCCCC">it's active</font><font color="#E5E5E5"> the gradient is constant</font><font color="#CCCCCC"> and</font>

576
00:23:52,780 --> 00:23:54,970
<font color="#E5E5E5">we don't have any saturation regions</font>

577
00:23:54,970 --> 00:23:56,760
once it was the<font color="#CCCCCC"> you know is active so</font>

578
00:23:56,760 --> 00:24:00,310
<font color="#CCCCCC">you'll</font><font color="#E5E5E5"> hear I think a lot</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> about the</font>

579
00:24:00,310 --> 00:24:02,830
<font color="#E5E5E5">details of the gradient properties of</font>

580
00:24:02,830 --> 00:24:04,360
<font color="#E5E5E5">this kind of stuff in James</font><font color="#CCCCCC"> Martin's</font>

581
00:24:04,360 --> 00:24:06,420
lecture<font color="#E5E5E5"> later on in</font><font color="#CCCCCC"> optimization but</font>

582
00:24:06,420 --> 00:24:08,290
these are<font color="#E5E5E5"> kind of some of the subtleties</font>

583
00:24:08,290 --> 00:24:09,100
<font color="#CCCCCC">that I was talking about they're</font>

584
00:24:09,100 --> 00:24:13,330
important<font color="#E5E5E5"> to think</font><font color="#CCCCCC"> about ok so</font><font color="#E5E5E5"> we've now</font>

585
00:24:13,330 --> 00:24:17,320
seen<font color="#E5E5E5"> just a very basic single layer now</font>

586
00:24:17,320 --> 00:24:19,750
let's move on one<font color="#E5E5E5"> step and ask</font><font color="#CCCCCC"> ok what</font>

587
00:24:19,750 --> 00:24:23,410
can<font color="#E5E5E5"> we do if we have more than one layer</font>

588
00:24:23,410 --> 00:24:25,330
so<font color="#CCCCCC"> what can</font><font color="#E5E5E5"> we do with neural networks</font>

589
00:24:25,330 --> 00:24:29,920
with<font color="#CCCCCC"> a hidden</font><font color="#E5E5E5"> layer and to motivate</font><font color="#CCCCCC"> this</font>

590
00:24:29,920 --> 00:24:31,990
we'll take a look at a very<font color="#E5E5E5"> simple</font>

591
00:24:31,990 --> 00:24:33,670
<font color="#CCCCCC">example</font><font color="#E5E5E5"> so what happens if</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> want to do</font>

592
00:24:33,670 --> 00:24:36,100
binary classification<font color="#E5E5E5"> but the inputs are</font>

593
00:24:36,100 --> 00:24:39,880
not<font color="#E5E5E5"> linearly separable</font><font color="#CCCCCC"> and then in the</font>

594
00:24:39,880 --> 00:24:42,850
second<font color="#CCCCCC"> part</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> section I'll kind of</font>

595
00:24:42,850 --> 00:24:46,060
give a a visual proof for why we can see

596
00:24:46,060 --> 00:24:47,530
<font color="#E5E5E5">that neural networks are universal</font>

597
00:24:47,530 --> 00:24:49,330
proper function approximate is so with

598
00:24:49,330 --> 00:24:50,680
enough<font color="#E5E5E5"> with a large enough</font><font color="#CCCCCC"> network we</font>

599
00:24:50,680 --> 00:24:54,940
can<font color="#E5E5E5"> approximate</font><font color="#CCCCCC"> any function so when I</font>

600
00:24:54,940 --> 00:24:57,070
say a single<font color="#CCCCCC"> hidden layer this is what I</font>

601
00:24:57,070 --> 00:24:59,740
mean so we have some inputs<font color="#E5E5E5"> here</font><font color="#CCCCCC"> a</font>

602
00:24:59,740 --> 00:25:04,720
linear module<font color="#E5E5E5"> of weights some nonlinear</font>

603
00:25:04,720 --> 00:25:06,820
activations<font color="#CCCCCC"> to give us this</font><font color="#E5E5E5"> hidden</font>

604
00:25:06,820 --> 00:25:09,880
representation another linear<font color="#E5E5E5"> mapping</font>

605
00:25:09,880 --> 00:25:11,230
and<font color="#E5E5E5"> then either directly to the output</font>

606
00:25:11,230 --> 00:25:13,870
<font color="#E5E5E5">or some puppet non-linearity and</font>

607
00:25:13,870 --> 00:25:16,360
basically another<font color="#E5E5E5"> way of</font><font color="#CCCCCC"> thinking about</font>

608
00:25:16,360 --> 00:25:18,640
why this<font color="#E5E5E5"> is useful is</font><font color="#CCCCCC"> that the outputs</font>

609
00:25:18,640 --> 00:25:20,110
of<font color="#E5E5E5"> one layer are the inputs to the next</font>

610
00:25:20,110 --> 00:25:21,910
and<font color="#CCCCCC"> so it allows us</font><font color="#E5E5E5"> to transform our</font>

611
00:25:21,910 --> 00:25:24,490
input<font color="#E5E5E5"> through a series of intermediate</font>

612
00:25:24,490 --> 00:25:27,370
representations<font color="#CCCCCC"> and the hope is that</font>

613
00:25:27,370 --> 00:25:29,320
rather<font color="#E5E5E5"> than trying to solve the problem</font>

614
00:25:29,320 --> 00:25:30,820
we're interested<font color="#CCCCCC"> in directly an input</font>

615
00:25:30,820 --> 00:25:32,440
space we can find<font color="#CCCCCC"> this series</font><font color="#E5E5E5"> of</font>

616
00:25:32,440 --> 00:25:34,900
transformations<font color="#CCCCCC"> the render</font><font color="#E5E5E5"> our problem</font>

617
00:25:34,900 --> 00:25:37,390
simpler in some<font color="#E5E5E5"> transform representation</font>

618
00:25:37,390 --> 00:25:40,570
so again I think<font color="#E5E5E5"> this was covered</font>

619
00:25:40,570 --> 00:25:41,980
<font color="#E5E5E5">towards the end of</font><font color="#CCCCCC"> those previous</font>

620
00:25:41,980 --> 00:25:43,000
<font color="#E5E5E5">lecture but if you think</font><font color="#CCCCCC"> back to what's</font>

621
00:25:43,000 --> 00:25:45,040
going<font color="#E5E5E5"> on with basis functions it's a</font>

622
00:25:45,040 --> 00:25:51,160
similar kind<font color="#E5E5E5"> of idea so</font><font color="#CCCCCC"> this is probably</font>

623
00:25:51,160 --> 00:25:52,510
<font color="#CCCCCC">that</font><font color="#E5E5E5"> the simplest example that can</font>

624
00:25:52,510 --> 00:25:54,850
<font color="#E5E5E5">exemplify that so it's kind of simple</font>

625
00:25:54,850 --> 00:25:55,960
<font color="#CCCCCC">XOR task so</font>

626
00:25:55,960 --> 00:25:57,580
let's imagine<font color="#E5E5E5"> that I have four data</font>

627
00:25:57,580 --> 00:26:00,940
<font color="#E5E5E5">points living in 2d a B C and D and a</font>

628
00:26:00,940 --> 00:26:04,510
<font color="#CCCCCC">and B are members of class</font><font color="#E5E5E5"> 0 C and D</font><font color="#CCCCCC"> are</font>

629
00:26:04,510 --> 00:26:09,960
members of<font color="#CCCCCC"> class</font><font color="#E5E5E5"> 1 now if I just have a</font>

630
00:26:09,960 --> 00:26:12,070
single linear layer plus logistic

631
00:26:12,070 --> 00:26:13,720
there's no way that<font color="#CCCCCC"> I can correctly</font>

632
00:26:13,720 --> 00:26:15,700
classify these<font color="#E5E5E5"> points there's no there's</font>

633
00:26:15,700 --> 00:26:18,580
no<font color="#E5E5E5"> line I can draw</font><font color="#CCCCCC"> that will put the</font>

634
00:26:18,580 --> 00:26:20,290
yellow<font color="#CCCCCC"> B the yellow point to one side</font>

635
00:26:20,290 --> 00:26:22,360
and<font color="#E5E5E5"> the blue points on the other now</font>

636
00:26:22,360 --> 00:26:24,100
<font color="#CCCCCC">let's</font><font color="#E5E5E5"> think about what</font><font color="#CCCCCC"> we can do with a</font>

637
00:26:24,100 --> 00:26:26,740
very<font color="#E5E5E5"> simple</font><font color="#CCCCCC"> Network</font><font color="#E5E5E5"> as I've drawn</font><font color="#CCCCCC"> here</font>

638
00:26:26,740 --> 00:26:28,450
so we're<font color="#CCCCCC"> just gonna have two hidden</font>

639
00:26:28,450 --> 00:26:33,340
<font color="#CCCCCC">units</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> so let's imagine that the the</font>

640
00:26:33,340 --> 00:26:36,010
first<font color="#E5E5E5"> in unit has a weight vector</font>

641
00:26:36,010 --> 00:26:39,280
pointing this direction so in terms of B

642
00:26:39,280 --> 00:26:42,850
<font color="#E5E5E5">its outputs these will be</font><font color="#CCCCCC"> 0 in this</font><font color="#E5E5E5"> red</font>

643
00:26:42,850 --> 00:26:46,000
shaded region and one here and then the

644
00:26:46,000 --> 00:26:48,130
second hidden unit will have<font color="#E5E5E5"> a slightly</font>

645
00:26:48,130 --> 00:26:49,570
different decision boundary<font color="#CCCCCC"> it'll be</font>

646
00:26:49,570 --> 00:26:52,470
this one<font color="#CCCCCC"> so it'll</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> 0 here</font><font color="#E5E5E5"> and one here</font>

647
00:26:52,470 --> 00:26:55,720
<font color="#E5E5E5">and now if we ask ourselves</font><font color="#CCCCCC"> ok in this</font>

648
00:26:55,720 --> 00:26:58,240
space<font color="#E5E5E5"> of hidden activities if</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> rewrite</font>

649
00:26:58,240 --> 00:27:00,220
the data fight if I plot<font color="#CCCCCC"> it again which</font>

650
00:27:00,220 --> 00:27:01,810
I'm doing down here

651
00:27:01,810 --> 00:27:04,330
what does my classification<font color="#E5E5E5"> problem like</font>

652
00:27:04,330 --> 00:27:06,640
in<font color="#E5E5E5"> this new space</font><font color="#CCCCCC"> so let's go</font><font color="#E5E5E5"> through</font>

653
00:27:06,640 --> 00:27:11,830
the steps<font color="#CCCCCC"> of that</font><font color="#E5E5E5"> so point a had one for</font>

654
00:27:11,830 --> 00:27:13,570
the first hidden unit<font color="#CCCCCC"> and 0 for</font><font color="#E5E5E5"> the</font>

655
00:27:13,570 --> 00:27:16,500
second so it would live here point B

656
00:27:16,500 --> 00:27:20,080
same again<font color="#E5E5E5"> 1</font><font color="#CCCCCC"> and 0 also lives there</font>

657
00:27:20,080 --> 00:27:23,020
Point C has<font color="#E5E5E5"> 0 for the first in unit</font><font color="#CCCCCC"> 0</font>

658
00:27:23,020 --> 00:27:26,610
<font color="#CCCCCC">for the second it lives here and then D</font>

659
00:27:26,610 --> 00:27:30,640
has<font color="#CCCCCC"> 1 and 1 so it lives here</font><font color="#E5E5E5"> so this is</font>

660
00:27:30,640 --> 00:27:32,770
<font color="#E5E5E5">the representation of these four data</font>

661
00:27:32,770 --> 00:27:34,870
<font color="#E5E5E5">points in the input space this is the</font>

662
00:27:34,870 --> 00:27:38,200
<font color="#CCCCCC">representation in this this first</font><font color="#E5E5E5"> hidden</font>

663
00:27:38,200 --> 00:27:41,200
layer<font color="#E5E5E5"> and so in this space the two</font>

664
00:27:41,200 --> 00:27:43,210
classes now are linearly<font color="#CCCCCC"> separable and</font>

665
00:27:43,210 --> 00:27:48,340
so if I add an additional linear plus

666
00:27:48,340 --> 00:27:50,440
sigmoid on top of this then I'm able to

667
00:27:50,440 --> 00:27:53,320
<font color="#CCCCCC">classify these two point B this</font><font color="#E5E5E5"> data set</font>

668
00:27:53,320 --> 00:27:57,460
<font color="#E5E5E5">correctly</font><font color="#CCCCCC"> and so this is again</font><font color="#E5E5E5"> it's a</font>

669
00:27:57,460 --> 00:27:58,540
<font color="#CCCCCC">very</font><font color="#E5E5E5"> simple</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> but I</font><font color="#CCCCCC"> think it's a</font>

670
00:27:58,540 --> 00:28:02,140
useful motivation for why having a

671
00:28:02,140 --> 00:28:05,490
hidden layer gives us additional power

672
00:28:05,490 --> 00:28:07,480
<font color="#E5E5E5">actually looks like there's a couple of</font>

673
00:28:07,480 --> 00:28:09,310
seats free I see<font color="#CCCCCC"> a</font><font color="#E5E5E5"> couple</font><font color="#CCCCCC"> for extending</font>

674
00:28:09,310 --> 00:28:09,490
<font color="#E5E5E5">good</font>

675
00:28:09,490 --> 00:28:11,649
<font color="#E5E5E5">if you want to take a second to sit down</font>

676
00:28:11,649 --> 00:28:14,260
if<font color="#E5E5E5"> that's easy for you there's a couple</font>

677
00:28:14,260 --> 00:28:17,909
<font color="#CCCCCC">down here at the front and the second</font><font color="#E5E5E5"> or</font>

678
00:28:22,260 --> 00:28:26,529
so here's another problem<font color="#E5E5E5"> of a similar</font>

679
00:28:26,529 --> 00:28:31,929
flavor<font color="#CCCCCC"> but slightly less</font><font color="#E5E5E5"> travel so if we</font>

680
00:28:31,929 --> 00:28:36,580
now have<font color="#E5E5E5"> the setting here where the data</font>

681
00:28:36,580 --> 00:28:37,630
from<font color="#CCCCCC"> different classes</font><font color="#E5E5E5"> live in these</font>

682
00:28:37,630 --> 00:28:40,179
quadrants then just two hidden units<font color="#E5E5E5"> on</font>

683
00:28:40,179 --> 00:28:41,710
their own<font color="#CCCCCC"> won't</font><font color="#E5E5E5"> cut it but it turns out</font>

684
00:28:41,710 --> 00:28:45,460
<font color="#E5E5E5">that with 16 units you can</font><font color="#CCCCCC"> actually do a</font>

685
00:28:45,460 --> 00:28:47,169
pretty<font color="#E5E5E5"> good job at carving up this</font><font color="#CCCCCC"> input</font>

686
00:28:47,169 --> 00:28:51,220
space into the<font color="#CCCCCC"> four quadrant</font><font color="#E5E5E5"> and there's</font>

687
00:28:51,220 --> 00:28:52,840
a link<font color="#CCCCCC"> from the slide out it's something</font>

688
00:28:52,840 --> 00:28:54,330
that if you guys are not aware of it

689
00:28:54,330 --> 00:28:56,590
it's<font color="#E5E5E5"> nice to look at there's a a</font>

690
00:28:56,590 --> 00:28:58,840
<font color="#CCCCCC">tensorflow</font><font color="#E5E5E5"> web playground that basically</font>

691
00:28:58,840 --> 00:29:01,779
<font color="#E5E5E5">lets you take some of these very simple</font>

692
00:29:01,779 --> 00:29:03,730
problems in your browser<font color="#E5E5E5"> and play around</font>

693
00:29:03,730 --> 00:29:05,620
<font color="#E5E5E5">with different numbers of</font><font color="#CCCCCC"> Units</font>

694
00:29:05,620 --> 00:29:07,390
<font color="#E5E5E5">different nonlinearities</font><font color="#CCCCCC"> and so on and</font>

695
00:29:07,390 --> 00:29:08,890
<font color="#E5E5E5">itself will typically train on these</font>

696
00:29:08,890 --> 00:29:11,740
problems<font color="#CCCCCC"> in a few seconds</font><font color="#E5E5E5"> in it</font><font color="#CCCCCC"> even</font>

697
00:29:11,740 --> 00:29:12,789
<font color="#CCCCCC">looks very simple I think it's a really</font>

698
00:29:12,789 --> 00:29:14,409
<font color="#CCCCCC">nice</font><font color="#E5E5E5"> thing to look at to refine your</font>

699
00:29:14,409 --> 00:29:17,500
intuition<font color="#E5E5E5"> for what sorts of things these</font>

700
00:29:17,500 --> 00:29:18,820
models learn what the decision

701
00:29:18,820 --> 00:29:21,630
boundaries look like and Academy to add

702
00:29:21,630 --> 00:29:23,860
detail to<font color="#E5E5E5"> your kind of mental picture of</font>

703
00:29:23,860 --> 00:29:26,320
<font color="#E5E5E5">what's going on so yeah when the</font><font color="#CCCCCC"> slice</font>

704
00:29:26,320 --> 00:29:27,909
<font color="#CCCCCC">is shared I'd encourage you to</font><font color="#E5E5E5"> take a</font>

705
00:29:27,909 --> 00:29:29,380
look<font color="#E5E5E5"> at that and</font><font color="#CCCCCC"> just kind of play with</font>

706
00:29:29,380 --> 00:29:30,970
<font color="#CCCCCC">some</font><font color="#E5E5E5"> of these simple</font><font color="#CCCCCC"> problems in the</font>

707
00:29:30,970 --> 00:29:34,500
browser to kind of refine<font color="#E5E5E5"> your intuition</font>

708
00:29:35,010 --> 00:29:37,720
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> so we've seen</font><font color="#E5E5E5"> that the power</font><font color="#CCCCCC"> that</font>

709
00:29:37,720 --> 00:29:40,990
we can<font color="#E5E5E5"> get for these toy problems</font><font color="#CCCCCC"> I'm</font>

710
00:29:40,990 --> 00:29:43,570
now<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to go through I guess I'd call</font>

711
00:29:43,570 --> 00:29:45,970
it a<font color="#E5E5E5"> sort it's not quite a proof but</font><font color="#CCCCCC"> a</font>

712
00:29:45,970 --> 00:29:49,200
visual intuition pump if you will for

713
00:29:49,200 --> 00:29:52,270
why neural networks<font color="#CCCCCC"> with just one hidden</font>

714
00:29:52,270 --> 00:29:54,010
layer<font color="#E5E5E5"> can still be viewed as</font><font color="#CCCCCC"> universal</font>

715
00:29:54,010 --> 00:29:56,289
function<font color="#CCCCCC"> approximate is and this</font><font color="#E5E5E5"> is one</font>

716
00:29:56,289 --> 00:29:59,460
of<font color="#E5E5E5"> those ideas that was arrived at by</font>

717
00:29:59,460 --> 00:30:02,700
several people<font color="#CCCCCC"> more or less concurrently</font>

718
00:30:02,700 --> 00:30:05,919
<font color="#E5E5E5">one the kind of well-known sort of</font>

719
00:30:05,919 --> 00:30:08,919
proposes a proof<font color="#E5E5E5"> of this was a guy</font><font color="#CCCCCC"> Chu</font>

720
00:30:08,919 --> 00:30:12,100
<font color="#E5E5E5">Benko from 89 and that the papers are</font>

721
00:30:12,100 --> 00:30:14,200
linked here<font color="#E5E5E5"> there's also again in terms</font>

722
00:30:14,200 --> 00:30:15,820
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the hyperlinks there's again some</font>

723
00:30:15,820 --> 00:30:19,690
nice interactive web demos<font color="#E5E5E5"> one of them</font>

724
00:30:19,690 --> 00:30:21,429
in Michael<font color="#CCCCCC"> Nielsen's</font><font color="#E5E5E5"> web become deep</font>

725
00:30:21,429 --> 00:30:22,390
learning<font color="#E5E5E5"> that</font>

726
00:30:22,390 --> 00:30:24,990
<font color="#E5E5E5">I'd recommend</font><font color="#CCCCCC"> you take a</font><font color="#E5E5E5"> look at and</font>

727
00:30:24,990 --> 00:30:26,770
going a little beyond the<font color="#E5E5E5"> scope</font><font color="#CCCCCC"> of this</font>

728
00:30:26,770 --> 00:30:29,620
<font color="#E5E5E5">class it turns</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> there are interesting</font>

729
00:30:29,620 --> 00:30:31,900
links<font color="#E5E5E5"> along these lines to be made</font>

730
00:30:31,900 --> 00:30:34,030
between neural networks<font color="#E5E5E5"> and something</font>

731
00:30:34,030 --> 00:30:36,460
called Gaussian<font color="#E5E5E5"> processes they're not</font>

732
00:30:36,460 --> 00:30:39,520
going to<font color="#E5E5E5"> be covered today but again I'd</font>

733
00:30:39,520 --> 00:30:40,420
<font color="#CCCCCC">encourage you</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> take a</font><font color="#E5E5E5"> look if you're</font>

734
00:30:40,420 --> 00:30:44,710
<font color="#E5E5E5">interested</font><font color="#CCCCCC"> okay so what what is our</font>

735
00:30:44,710 --> 00:30:47,830
visual<font color="#CCCCCC"> proof</font><font color="#E5E5E5"> going to be the with enough</font>

736
00:30:47,830 --> 00:30:49,690
<font color="#E5E5E5">hidden units we</font><font color="#CCCCCC"> can use a neural network</font>

737
00:30:49,690 --> 00:30:52,210
<font color="#E5E5E5">to approximate anything so let's begin</font>

738
00:30:52,210 --> 00:30:56,080
by<font color="#CCCCCC"> just considering two of our linear</font>

739
00:30:56,080 --> 00:30:59,410
plus sigmoid units here and let's

740
00:30:59,410 --> 00:31:01,360
imagine<font color="#E5E5E5"> that we arranged for the</font><font color="#CCCCCC"> weight</font>

741
00:31:01,360 --> 00:31:02,320
vectors to point in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> same direction</font>

742
00:31:02,320 --> 00:31:04,930
<font color="#E5E5E5">or maybe we'll start off with just</font><font color="#CCCCCC"> a</font>

743
00:31:04,930 --> 00:31:06,550
scalar case so the<font color="#E5E5E5"> only</font><font color="#CCCCCC"> difference</font>

744
00:31:06,550 --> 00:31:10,330
<font color="#E5E5E5">between unit 1 and unit 2 is the bias so</font>

745
00:31:10,330 --> 00:31:12,100
that's the kind of offset of where the

746
00:31:12,100 --> 00:31:15,220
sigmoid kicks in and then let's imagine

747
00:31:15,220 --> 00:31:16,930
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> what happens if we take this pair</font>

748
00:31:16,930 --> 00:31:20,500
<font color="#CCCCCC">of units</font><font color="#E5E5E5"> and we we subtract them from</font>

749
00:31:20,500 --> 00:31:24,610
each other<font color="#CCCCCC"> what does that</font><font color="#E5E5E5"> difference</font>

750
00:31:24,610 --> 00:31:26,380
output look like<font color="#E5E5E5"> and it turns out it</font>

751
00:31:26,380 --> 00:31:27,610
looks something<font color="#E5E5E5"> a little like this this</font>

752
00:31:27,610 --> 00:31:30,790
<font color="#CCCCCC">kind of bump of activity Y well over to</font>

753
00:31:30,790 --> 00:31:33,270
the far left<font color="#CCCCCC"> both</font><font color="#E5E5E5"> these units is 0 so</font>

754
00:31:33,270 --> 00:31:36,490
the<font color="#E5E5E5"> the difference is 0 over to the far</font>

755
00:31:36,490 --> 00:31:38,890
right<font color="#CCCCCC"> the upper buddies answers</font><font color="#E5E5E5"> 1 so</font>

756
00:31:38,890 --> 00:31:40,840
they cancel and then<font color="#E5E5E5"> in the middle we</font>

757
00:31:40,840 --> 00:31:43,180
<font color="#CCCCCC">have this this little</font><font color="#E5E5E5"> bump and so by</font>

758
00:31:43,180 --> 00:31:45,640
<font color="#E5E5E5">having this pair of units were</font><font color="#CCCCCC"> able to</font>

759
00:31:45,640 --> 00:31:47,560
create this this<font color="#E5E5E5"> bump</font><font color="#CCCCCC"> here which is a</font>

760
00:31:47,560 --> 00:31:51,010
lot<font color="#E5E5E5"> like a basis function right</font><font color="#CCCCCC"> so let's</font>

761
00:31:51,010 --> 00:31:53,230
imagine<font color="#E5E5E5"> that we want to use</font><font color="#CCCCCC"> a neural</font>

762
00:31:53,230 --> 00:31:55,450
<font color="#E5E5E5">network</font><font color="#CCCCCC"> with a</font><font color="#E5E5E5"> hidden layer to model</font>

763
00:31:55,450 --> 00:31:57,670
<font color="#E5E5E5">this gray this arbitrary</font><font color="#CCCCCC"> gray function</font>

764
00:31:57,670 --> 00:31:59,800
here one of the ways we<font color="#E5E5E5"> could do it</font><font color="#CCCCCC"> it's</font>

765
00:31:59,800 --> 00:32:01,630
probably<font color="#E5E5E5"> not the</font><font color="#CCCCCC"> best way but just as a</font>

766
00:32:01,630 --> 00:32:03,420
kind<font color="#E5E5E5"> of proof to show it can</font><font color="#CCCCCC"> be done</font><font color="#E5E5E5"> is</font>

767
00:32:03,420 --> 00:32:05,890
<font color="#E5E5E5">you</font><font color="#CCCCCC"> could imagine now that I've got</font>

768
00:32:05,890 --> 00:32:08,680
these little<font color="#CCCCCC"> bumps of activity I can</font>

769
00:32:08,680 --> 00:32:10,840
<font color="#CCCCCC">arrange for that</font><font color="#E5E5E5"> offset to light</font>

770
00:32:10,840 --> 00:32:12,880
different points<font color="#CCCCCC"> along this line and I</font>

771
00:32:12,880 --> 00:32:17,290
can also scale<font color="#E5E5E5"> the but a multiplicative</font>

772
00:32:17,290 --> 00:32:20,110
scale on this<font color="#E5E5E5"> so the idea is through</font>

773
00:32:20,110 --> 00:32:21,730
pairs of<font color="#E5E5E5"> units we can kind of come</font><font color="#CCCCCC"> up</font>

774
00:32:21,730 --> 00:32:23,740
<font color="#CCCCCC">with these little bumps</font><font color="#E5E5E5"> and if we think</font>

775
00:32:23,740 --> 00:32:25,210
<font color="#E5E5E5">of what the sum</font><font color="#CCCCCC"> of all these</font><font color="#E5E5E5"> bumps look</font>

776
00:32:25,210 --> 00:32:27,250
like if I have enough<font color="#E5E5E5"> of</font><font color="#CCCCCC"> them</font><font color="#E5E5E5"> and</font>

777
00:32:27,250 --> 00:32:28,900
<font color="#E5E5E5">they're narrow enough then it starts to</font>

778
00:32:28,900 --> 00:32:32,230
<font color="#E5E5E5">look</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> this gray curve that we're</font>

779
00:32:32,230 --> 00:32:34,600
trying<font color="#E5E5E5"> to fit so the Mobile's we have I</font>

780
00:32:34,600 --> 00:32:36,220
<font color="#E5E5E5">either the bigger the</font>

781
00:32:36,220 --> 00:32:38,470
<font color="#E5E5E5">the hidden layer the more accurate our</font>

782
00:32:38,470 --> 00:32:40,419
approximation<font color="#E5E5E5"> and so that's the kind of</font>

783
00:32:40,419 --> 00:32:44,260
sketch proof for 1d in 2d<font color="#CCCCCC"> this same</font>

784
00:32:44,260 --> 00:32:47,200
sorts of ideas<font color="#E5E5E5"> apply except we now need</font>

785
00:32:47,200 --> 00:32:50,289
a pair of hidden units<font color="#CCCCCC"> for each</font>

786
00:32:50,289 --> 00:32:53,409
dimension of the input so it's hard<font color="#E5E5E5"> to</font>

787
00:32:53,409 --> 00:32:55,990
visualize in dimensions beyond<font color="#E5E5E5"> two but a</font>

788
00:32:55,990 --> 00:32:58,390
similar sort of<font color="#E5E5E5"> thing would</font><font color="#CCCCCC"> apply in 2d</font>

789
00:32:58,390 --> 00:33:01,659
where we if we have four neurons we can

790
00:33:01,659 --> 00:33:03,130
<font color="#E5E5E5">build these little towers of activity</font>

791
00:33:03,130 --> 00:33:04,570
that<font color="#CCCCCC"> we can</font><font color="#E5E5E5"> kind of shift around and</font>

792
00:33:04,570 --> 00:33:08,130
<font color="#E5E5E5">again</font><font color="#CCCCCC"> the same idea would apply so</font>

793
00:33:08,130 --> 00:33:10,510
hopefully this<font color="#E5E5E5"> is convinced</font><font color="#CCCCCC"> to you that</font>

794
00:33:10,510 --> 00:33:13,419
with enough units<font color="#E5E5E5"> we can approximate</font>

795
00:33:13,419 --> 00:33:14,950
everything although<font color="#E5E5E5"> it doesn't sound</font>

796
00:33:14,950 --> 00:33:16,179
<font color="#E5E5E5">very efficient and you'd hope that</font>

797
00:33:16,179 --> 00:33:17,559
there's a much better way of<font color="#E5E5E5"> doing that</font>

798
00:33:17,559 --> 00:33:24,820
<font color="#E5E5E5">and it turns out</font><font color="#CCCCCC"> that there is so now</font>

799
00:33:24,820 --> 00:33:51,070
that<font color="#E5E5E5"> we've seen what</font><font color="#CCCCCC"> we can do mmm I</font>

800
00:33:51,070 --> 00:33:56,919
<font color="#CCCCCC">don't think</font><font color="#E5E5E5"> so you're you're</font><font color="#CCCCCC"> not taking</font>

801
00:33:56,919 --> 00:33:59,230
the<font color="#E5E5E5"> area under each bump</font><font color="#CCCCCC"> you're just</font>

802
00:33:59,230 --> 00:34:01,659
taking<font color="#E5E5E5"> their kind of magnitude of the</font>

803
00:34:01,659 --> 00:34:06,730
function<font color="#CCCCCC"> so</font><font color="#E5E5E5"> there's dump your question I</font>

804
00:34:06,730 --> 00:34:09,899
think<font color="#CCCCCC"> I may</font><font color="#E5E5E5"> listen this is your question</font>

805
00:34:09,899 --> 00:34:19,210
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> okay I see any any more questions</font>

806
00:34:19,210 --> 00:34:24,460
before<font color="#E5E5E5"> we move</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> okay so now we're</font>

807
00:34:24,460 --> 00:34:27,940
gonna start<font color="#CCCCCC"> to think about</font><font color="#E5E5E5"> deeper</font>

808
00:34:27,940 --> 00:34:31,510
networks<font color="#CCCCCC"> so we've seen</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> we can</font><font color="#E5E5E5"> do</font>

809
00:34:31,510 --> 00:34:35,469
with just a single<font color="#E5E5E5"> hidden layer</font><font color="#CCCCCC"> and we</font>

810
00:34:35,469 --> 00:34:36,940
do have<font color="#E5E5E5"> this Universal approximation</font>

811
00:34:36,940 --> 00:34:38,589
<font color="#CCCCCC">property but we've also</font><font color="#E5E5E5"> seen that it is</font>

812
00:34:38,589 --> 00:34:40,570
<font color="#E5E5E5">kind of a horrible way to do it it needs</font>

813
00:34:40,570 --> 00:34:43,540
many many units and it turns out<font color="#E5E5E5"> that as</font>

814
00:34:43,540 --> 00:34:47,320
we<font color="#E5E5E5"> add depth</font><font color="#CCCCCC"> things get a lot more</font>

815
00:34:47,320 --> 00:34:48,750
<font color="#E5E5E5">powerful and</font><font color="#CCCCCC"> we've become</font>

816
00:34:48,750 --> 00:34:51,120
a lot more efficient<font color="#E5E5E5"> and again I'll give</font>

817
00:34:51,120 --> 00:34:54,540
<font color="#CCCCCC">a kind</font><font color="#E5E5E5"> of a reference to a paper that</font>

818
00:34:54,540 --> 00:34:56,820
<font color="#E5E5E5">has</font><font color="#CCCCCC"> the full proof but for the class</font>

819
00:34:56,820 --> 00:34:58,650
I'll try and give you<font color="#CCCCCC"> a sort of more</font>

820
00:34:58,650 --> 00:35:01,410
visual motivation for how you<font color="#E5E5E5"> can see</font>

821
00:35:01,410 --> 00:35:03,840
that that<font color="#E5E5E5"> is something that happens</font><font color="#CCCCCC"> and</font>

822
00:35:03,840 --> 00:35:07,740
<font color="#E5E5E5">again to kind of motivate what you were</font>

823
00:35:07,740 --> 00:35:11,250
what<font color="#CCCCCC"> you get if you allow these very</font>

824
00:35:11,250 --> 00:35:13,620
deep transformations again<font color="#E5E5E5"> coming</font><font color="#CCCCCC"> back</font>

825
00:35:13,620 --> 00:35:15,570
this idea of rather<font color="#E5E5E5"> than trying</font><font color="#CCCCCC"> to kind</font>

826
00:35:15,570 --> 00:35:18,170
<font color="#CCCCCC">of go from inputs to outputs in one go</font>

827
00:35:18,170 --> 00:35:20,670
<font color="#CCCCCC">it allows us</font><font color="#E5E5E5"> to potentially break it</font>

828
00:35:20,670 --> 00:35:24,450
down into into<font color="#E5E5E5"> smaller</font><font color="#CCCCCC"> steps so</font><font color="#E5E5E5"> you know</font>

829
00:35:24,450 --> 00:35:26,730
cartoon from<font color="#E5E5E5"> vision might be rather than</font>

830
00:35:26,730 --> 00:35:29,670
going straight<font color="#E5E5E5"> from a vector</font><font color="#CCCCCC"> of pixels</font>

831
00:35:29,670 --> 00:35:31,770
into some kind of<font color="#E5E5E5"> scene level analysis</font>

832
00:35:31,770 --> 00:35:33,990
<font color="#E5E5E5">maybe it's easier if in the first stage</font>

833
00:35:33,990 --> 00:35:35,850
of transformation we can extract<font color="#E5E5E5"> the</font>

834
00:35:35,850 --> 00:35:38,280
edges<font color="#E5E5E5"> or into the edges from an image</font>

835
00:35:38,280 --> 00:35:40,020
<font color="#E5E5E5">from those you can start to think</font><font color="#CCCCCC"> about</font>

836
00:35:40,020 --> 00:35:43,260
composing<font color="#CCCCCC"> those edges into say junctions</font>

837
00:35:43,260 --> 00:35:46,980
and small shapes from there into<font color="#E5E5E5"> part</font>

838
00:35:46,980 --> 00:35:48,870
<font color="#E5E5E5">there aren't objects and then</font><font color="#CCCCCC"> there</font>

839
00:35:48,870 --> 00:35:51,000
<font color="#CCCCCC">enter into</font><font color="#E5E5E5"> full scene so breaking down</font>

840
00:35:51,000 --> 00:35:53,370
<font color="#E5E5E5">these complicated computations into</font>

841
00:35:53,370 --> 00:35:56,130
smaller chunks<font color="#E5E5E5"> in the in the second half</font>

842
00:35:56,130 --> 00:35:59,990
of<font color="#E5E5E5"> the section will kind of flip to this</font>

843
00:35:59,990 --> 00:36:02,070
what I'm calling<font color="#E5E5E5"> out a more modern</font>

844
00:36:02,070 --> 00:36:04,830
compute graph perspective and there will

845
00:36:04,830 --> 00:36:07,290
kind of really start to see<font color="#E5E5E5"> the creative</font>

846
00:36:07,290 --> 00:36:09,000
designs that you<font color="#CCCCCC"> can do in these very</font>

847
00:36:09,000 --> 00:36:10,770
large networks and I'll also throw in

848
00:36:10,770 --> 00:36:13,260
<font color="#E5E5E5">just a couple of examples of</font><font color="#CCCCCC"> real-world</font>

849
00:36:13,260 --> 00:36:14,880
<font color="#CCCCCC">networks that you can see what I mean</font>

850
00:36:14,880 --> 00:36:16,890
<font color="#E5E5E5">when</font><font color="#CCCCCC"> I when I say that the</font><font color="#E5E5E5"> structure</font>

851
00:36:16,890 --> 00:36:21,360
these things can get<font color="#CCCCCC"> very elaborate okay</font>

852
00:36:21,360 --> 00:36:26,310
<font color="#E5E5E5">so</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> what I'm gonna do for this slide</font>

853
00:36:26,310 --> 00:36:30,510
<font color="#E5E5E5">in the next one is</font><font color="#CCCCCC"> just go over</font><font color="#E5E5E5"> how we</font>

854
00:36:30,510 --> 00:36:33,270
<font color="#E5E5E5">can see the benefits of depth</font><font color="#CCCCCC"> you can</font>

855
00:36:33,270 --> 00:36:35,640
ignore<font color="#E5E5E5"> this is my slide from last year</font>

856
00:36:35,640 --> 00:36:36,870
when there<font color="#E5E5E5"> was an exam but this era of</font>

857
00:36:36,870 --> 00:36:38,250
things cause what they say you<font color="#E5E5E5"> know a</font>

858
00:36:38,250 --> 00:36:44,010
<font color="#CCCCCC">minute worried so here's the</font>

859
00:36:44,010 --> 00:36:47,010
construction so if we imagine<font color="#E5E5E5"> taking the</font>

860
00:36:47,010 --> 00:36:49,950
rectified linear unit<font color="#E5E5E5"> that we we saw</font>

861
00:36:49,950 --> 00:36:54,180
previously so one<font color="#CCCCCC"> of these</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> zero</font>

862
00:36:54,180 --> 00:36:59,850
<font color="#CCCCCC">if it's if</font><font color="#E5E5E5"> neighbors blow zero</font><font color="#CCCCCC"> zero it's</font>

863
00:36:59,850 --> 00:37:02,220
linear about that<font color="#E5E5E5"> and imagine we</font><font color="#CCCCCC"> take</font>

864
00:37:02,220 --> 00:37:05,099
another one<font color="#E5E5E5"> of these rectifiers and</font>

865
00:37:05,099 --> 00:37:06,630
essentially flip the signs of the

866
00:37:06,630 --> 00:37:07,980
weights and biases<font color="#CCCCCC"> so it's kind of</font><font color="#E5E5E5"> V</font>

867
00:37:07,980 --> 00:37:11,760
converse<font color="#CCCCCC"> what this gives</font><font color="#E5E5E5"> us</font><font color="#CCCCCC"> oriented it</font>

868
00:37:11,760 --> 00:37:13,770
<font color="#E5E5E5">around the origin in this case is a full</font>

869
00:37:13,770 --> 00:37:18,060
rectifier<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so in 1d this has the</font>

870
00:37:18,060 --> 00:37:20,910
property that anything we build<font color="#E5E5E5"> on top</font>

871
00:37:20,910 --> 00:37:24,510
of<font color="#E5E5E5"> this will have the same output for a</font>

872
00:37:24,510 --> 00:37:27,480
point of plus X as it will at minus X so

873
00:37:27,480 --> 00:37:29,340
it's kind of it's mirroring<font color="#E5E5E5"> where you</font>

874
00:37:29,340 --> 00:37:32,550
can imagine it<font color="#E5E5E5"> as kind</font><font color="#CCCCCC"> of folding a</font>

875
00:37:32,550 --> 00:37:35,220
space over<font color="#E5E5E5"> so yet multiple points in the</font>

876
00:37:35,220 --> 00:37:36,720
input<font color="#E5E5E5"> mapped at the same point in the</font>

877
00:37:36,720 --> 00:37:41,040
<font color="#E5E5E5">output</font><font color="#CCCCCC"> and so this letters have multiple</font>

878
00:37:41,040 --> 00:37:42,300
regions of the input showing the same

879
00:37:42,300 --> 00:37:45,150
functional mapping<font color="#CCCCCC"> will kind of</font><font color="#E5E5E5"> extend</font>

880
00:37:45,150 --> 00:37:48,780
that from<font color="#CCCCCC"> 1d into 2d here</font><font color="#E5E5E5"> so imagine</font>

881
00:37:48,780 --> 00:37:51,900
that I have<font color="#E5E5E5"> two pairs</font><font color="#CCCCCC"> of these full</font>

882
00:37:51,900 --> 00:37:55,830
rectifiers so that would causes you<font color="#E5E5E5"> four</font>

883
00:37:55,830 --> 00:37:58,349
hidden<font color="#E5E5E5"> units in this layer in total one</font>

884
00:37:58,349 --> 00:37:59,040
of the rectifiers

885
00:37:59,040 --> 00:38:02,040
is arranged<font color="#CCCCCC"> along the x axis</font><font color="#E5E5E5"> and one</font>

886
00:38:02,040 --> 00:38:04,109
along the y axis<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so what it means is</font>

887
00:38:04,109 --> 00:38:09,210
<font color="#CCCCCC">that any any function</font><font color="#E5E5E5"> of the output</font><font color="#CCCCCC"> of</font>

888
00:38:09,210 --> 00:38:11,160
these is replicated<font color="#CCCCCC"> in</font><font color="#E5E5E5"> each of these</font>

889
00:38:11,160 --> 00:38:13,230
quadrants<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so one way</font><font color="#CCCCCC"> you can think</font>

890
00:38:13,230 --> 00:38:15,000
about what<font color="#E5E5E5"> these rectifiers are doing is</font>

891
00:38:15,000 --> 00:38:17,040
if I were to take<font color="#CCCCCC"> that 2d plane and kind</font>

892
00:38:17,040 --> 00:38:18,930
of fold it<font color="#E5E5E5"> over and</font><font color="#CCCCCC"> then fold it back on</font>

893
00:38:18,930 --> 00:38:22,650
itself<font color="#CCCCCC"> functions that</font><font color="#E5E5E5"> I would map on</font>

894
00:38:22,650 --> 00:38:24,390
that<font color="#CCCCCC"> folded representation if I unfold</font>

895
00:38:24,390 --> 00:38:26,160
it it kind<font color="#CCCCCC"> of fall back into the</font>

896
00:38:26,160 --> 00:38:29,339
<font color="#CCCCCC">original input</font><font color="#E5E5E5"> space so that's the kind</font>

897
00:38:29,339 --> 00:38:32,820
<font color="#CCCCCC">of underlying intuition</font><font color="#E5E5E5"> you guys okay</font>

898
00:38:32,820 --> 00:38:37,260
yeah<font color="#CCCCCC"> and so this is</font><font color="#E5E5E5"> from this paper from</font>

899
00:38:37,260 --> 00:38:40,890
2014<font color="#E5E5E5"> by wonderful</font><font color="#CCCCCC"> Pascal oho and Benjy</font>

900
00:38:40,890 --> 00:38:45,420
<font color="#E5E5E5">and what I just described is the sort of</font>

901
00:38:45,420 --> 00:38:48,150
basic operation they use to come up with

902
00:38:48,150 --> 00:38:49,349
<font color="#E5E5E5">this interesting proof about the</font>

903
00:38:49,349 --> 00:38:51,060
<font color="#E5E5E5">representational</font><font color="#CCCCCC"> power of deep networks</font>

904
00:38:51,060 --> 00:38:54,750
<font color="#E5E5E5">so I'll kind</font><font color="#CCCCCC"> of step through</font><font color="#E5E5E5"> this this</font>

905
00:38:54,750 --> 00:38:56,460
diagram fairly quickly<font color="#E5E5E5"> again if you if</font>

906
00:38:56,460 --> 00:38:58,290
you're interested<font color="#E5E5E5"> then it's a nice paper</font>

907
00:38:58,290 --> 00:38:59,940
and fairly<font color="#E5E5E5"> easy to read but it's just</font>

908
00:38:59,940 --> 00:39:02,130
too too many details<font color="#CCCCCC"> to</font><font color="#E5E5E5"> go through today</font>

909
00:39:02,130 --> 00:39:06,690
so as I said we<font color="#CCCCCC"> imagine by applying</font>

910
00:39:06,690 --> 00:39:08,099
these pairs<font color="#E5E5E5"> of rectifiers what you end</font>

911
00:39:08,099 --> 00:39:12,690
up<font color="#E5E5E5"> with is this folded space</font><font color="#CCCCCC"> I can on</font>

912
00:39:12,690 --> 00:39:14,810
the outputs of that so

913
00:39:14,810 --> 00:39:18,590
<font color="#CCCCCC">I can apply a new set of</font><font color="#E5E5E5"> units on top of</font>

914
00:39:18,590 --> 00:39:20,240
that which<font color="#E5E5E5"> would end</font><font color="#CCCCCC"> up kind</font><font color="#E5E5E5"> of folding</font>

915
00:39:20,240 --> 00:39:23,570
<font color="#CCCCCC">this space again and so what we end up</font>

916
00:39:23,570 --> 00:39:26,300
<font color="#E5E5E5">with any decision bound we have in the</font>

917
00:39:26,300 --> 00:39:28,700
<font color="#E5E5E5">final layer as we kind of backtrack</font><font color="#CCCCCC"> so</font>

918
00:39:28,700 --> 00:39:30,680
going through<font color="#E5E5E5"> this unfolding gets</font>

919
00:39:30,680 --> 00:39:33,950
replicated<font color="#E5E5E5"> or distributed to different</font>

920
00:39:33,950 --> 00:39:38,090
<font color="#CCCCCC">parts of the input space so probably the</font>

921
00:39:38,090 --> 00:39:39,500
<font color="#E5E5E5">most helpful thing</font><font color="#CCCCCC"> to look at</font><font color="#E5E5E5"> is this</font>

922
00:39:39,500 --> 00:39:43,820
this<font color="#E5E5E5"> figure here so if we have a network</font>

923
00:39:43,820 --> 00:39:46,790
<font color="#CCCCCC">arranged like this in this output layer</font>

924
00:39:46,790 --> 00:39:48,520
if we have a<font color="#E5E5E5"> linear decision boundary</font>

925
00:39:48,520 --> 00:39:55,270
<font color="#E5E5E5">when we unfold that we end up with four</font>

926
00:39:55,270 --> 00:39:57,560
<font color="#CCCCCC">full boundaries one in each of the</font>

927
00:39:57,560 --> 00:40:00,830
quadrant<font color="#CCCCCC"> represented here so we've gone</font>

928
00:40:00,830 --> 00:40:03,710
from<font color="#CCCCCC"> two regions</font><font color="#E5E5E5"> that we can separate</font>

929
00:40:03,710 --> 00:40:05,120
here to eight regions<font color="#E5E5E5"> that we can</font>

930
00:40:05,120 --> 00:40:07,910
separate here if we were to unfold<font color="#CCCCCC"> that</font>

931
00:40:07,910 --> 00:40:12,770
again<font color="#CCCCCC"> then we end</font><font color="#E5E5E5"> up with 32 regions so</font>

932
00:40:12,770 --> 00:40:16,340
the kind<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> high-level take home</font>

933
00:40:16,340 --> 00:40:19,400
from this is the the<font color="#E5E5E5"> number of</font><font color="#CCCCCC"> regions</font>

934
00:40:19,400 --> 00:40:22,090
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we can assign different labels to</font>

935
00:40:22,090 --> 00:40:25,910
increases exponentially<font color="#E5E5E5"> with depth</font><font color="#CCCCCC"> and</font>

936
00:40:25,910 --> 00:40:27,050
it turns out<font color="#E5E5E5"> it only increases</font>

937
00:40:27,050 --> 00:40:29,270
polynomial<font color="#E5E5E5"> e with a number of units per</font>

938
00:40:29,270 --> 00:40:33,740
layer so so all<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> being equal for a</font>

939
00:40:33,740 --> 00:40:38,410
fixed total number of<font color="#E5E5E5"> neurons there's</font>

940
00:40:38,410 --> 00:40:40,820
potentially much<font color="#E5E5E5"> more power by making a</font>

941
00:40:40,820 --> 00:40:43,130
<font color="#CCCCCC">narrow</font><font color="#E5E5E5"> deep</font><font color="#CCCCCC"> network</font><font color="#E5E5E5"> than there is in</font>

942
00:40:43,130 --> 00:40:46,370
having<font color="#CCCCCC"> a shallow wide Network</font><font color="#E5E5E5"> you know</font>

943
00:40:46,370 --> 00:40:47,870
the details<font color="#CCCCCC"> of</font><font color="#E5E5E5"> that will depend</font><font color="#CCCCCC"> on your</font>

944
00:40:47,870 --> 00:40:50,120
<font color="#E5E5E5">problem but that's one</font><font color="#CCCCCC"> of the intuitions</font>

945
00:40:50,120 --> 00:40:54,520
for<font color="#E5E5E5"> why adding depth is so helpful it's</font>

946
00:41:08,830 --> 00:41:12,800
<font color="#CCCCCC">guess</font><font color="#E5E5E5"> so it's hot on to these questions</font>

947
00:41:12,800 --> 00:41:14,810
<font color="#E5E5E5">so I say the state of theory in deep</font>

948
00:41:14,810 --> 00:41:16,670
learning<font color="#CCCCCC"> alone</font><font color="#E5E5E5"> is is know in their world</font>

949
00:41:16,670 --> 00:41:20,180
we'd like<font color="#CCCCCC"> it to be so there aren't of</font>

950
00:41:20,180 --> 00:41:22,180
good rigorous demonstration of that

951
00:41:22,180 --> 00:41:27,620
empirically<font color="#E5E5E5"> in a lot of problems</font><font color="#CCCCCC"> what</font>

952
00:41:27,620 --> 00:41:28,730
you'll<font color="#CCCCCC"> find is in a few</font>

953
00:41:28,730 --> 00:41:31,310
you try and tackle something with a

954
00:41:31,310 --> 00:41:36,380
fixed budget<font color="#E5E5E5"> of Units then in practice</font>

955
00:41:36,380 --> 00:41:37,790
often<font color="#E5E5E5"> you will get better empirical</font>

956
00:41:37,790 --> 00:41:40,040
performance by adding<font color="#CCCCCC"> a</font><font color="#E5E5E5"> couple of hidden</font>

957
00:41:40,040 --> 00:41:42,970
<font color="#CCCCCC">layers rather</font><font color="#E5E5E5"> than having</font><font color="#CCCCCC"> one very wide</font>

958
00:41:42,970 --> 00:41:46,220
very wide one but it's also problem

959
00:41:46,220 --> 00:41:49,400
dependent<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think there's another</font>

960
00:41:49,400 --> 00:41:54,260
<font color="#E5E5E5">question somewhere over there okay</font><font color="#CCCCCC"> does</font>

961
00:41:54,260 --> 00:41:56,590
that<font color="#CCCCCC"> answer your question</font>

962
00:41:56,590 --> 00:42:05,540
sure yeah don't worry<font color="#CCCCCC"> but my pastor</font><font color="#E5E5E5"> yeah</font>

963
00:42:05,540 --> 00:42:07,370
I just encourage<font color="#CCCCCC"> you</font><font color="#E5E5E5"> to read the paper</font>

964
00:42:07,370 --> 00:42:10,400
<font color="#E5E5E5">because it's it's really nicely written</font>

965
00:42:10,400 --> 00:42:12,140
<font color="#E5E5E5">in to the extent that yeah this works</font>

966
00:42:12,140 --> 00:42:14,930
for<font color="#E5E5E5"> you as an intuition</font><font color="#CCCCCC"> pump it's worth</font>

967
00:42:14,930 --> 00:42:15,920
taking<font color="#CCCCCC"> the time</font><font color="#E5E5E5"> to kind</font><font color="#CCCCCC"> of go through</font>

968
00:42:15,920 --> 00:42:24,280
<font color="#CCCCCC">that argument and understand it okay</font><font color="#E5E5E5"> so</font>

969
00:42:26,140 --> 00:42:29,450
now<font color="#E5E5E5"> I said we're gonna switch</font><font color="#CCCCCC"> gears a</font>

970
00:42:29,450 --> 00:42:32,810
bit and<font color="#CCCCCC"> move from this what I would</font><font color="#E5E5E5"> say</font>

971
00:42:32,810 --> 00:42:36,040
is<font color="#E5E5E5"> a kind</font><font color="#CCCCCC"> of more traditional style</font><font color="#E5E5E5"> of</font>

972
00:42:36,040 --> 00:42:38,330
depicting and thinking about neural

973
00:42:38,330 --> 00:42:40,670
<font color="#E5E5E5">networks and in this we sort of bundle</font>

974
00:42:40,670 --> 00:42:43,610
in our description<font color="#CCCCCC"> of layers</font><font color="#E5E5E5"> the</font>

975
00:42:43,610 --> 00:42:45,920
nonlinearities<font color="#CCCCCC"> and move towards this</font>

976
00:42:45,920 --> 00:42:52,190
kind<font color="#CCCCCC"> of more explicit</font><font color="#E5E5E5"> compute graph</font>

977
00:42:52,190 --> 00:42:55,490
representation<font color="#E5E5E5"> where we have separate</font>

978
00:42:55,490 --> 00:42:57,710
node for our weights<font color="#E5E5E5"> and we separate</font><font color="#CCCCCC"> out</font>

979
00:42:57,710 --> 00:42:59,060
separate out the<font color="#E5E5E5"> linear transformation</font>

980
00:42:59,060 --> 00:43:04,550
<font color="#E5E5E5">from the</font><font color="#CCCCCC"> nonlinearities and this is more</font>

981
00:43:04,550 --> 00:43:05,600
similar<font color="#CCCCCC"> the kind of thing that you'll</font>

982
00:43:05,600 --> 00:43:08,150
see<font color="#CCCCCC"> if you</font><font color="#E5E5E5"> look at say visualizations in</font>

983
00:43:08,150 --> 00:43:12,530
<font color="#E5E5E5">tents aboard so these are kind of</font>

984
00:43:12,530 --> 00:43:15,110
isomorphic<font color="#E5E5E5"> to each other and to these</font>

985
00:43:15,110 --> 00:43:16,970
equations<font color="#E5E5E5"> here I'm just I just put</font>

986
00:43:16,970 --> 00:43:19,040
together an arbitrary graph<font color="#CCCCCC"> just to kind</font>

987
00:43:19,040 --> 00:43:26,030
of highlight this so we<font color="#E5E5E5"> have input</font><font color="#CCCCCC"> to a</font>

988
00:43:26,030 --> 00:43:29,570
first and<font color="#E5E5E5"> layer with a sigmoid the</font>

989
00:43:29,570 --> 00:43:31,910
outputs of this go to a<font color="#E5E5E5"> secondhand layer</font>

990
00:43:31,910 --> 00:43:34,150
which<font color="#E5E5E5"> I decided to pick a railing for</font>

991
00:43:34,150 --> 00:43:37,880
there's another pathway<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that yeah</font>

992
00:43:37,880 --> 00:43:39,110
this<font color="#E5E5E5"> one is really there's another</font>

993
00:43:39,110 --> 00:43:41,840
<font color="#CCCCCC">pathway</font><font color="#E5E5E5"> coming</font><font color="#CCCCCC"> through here and then</font>

994
00:43:41,840 --> 00:43:42,619
they<font color="#CCCCCC"> combine at the</font><font color="#E5E5E5"> app</font>

995
00:43:42,619 --> 00:43:44,569
that exactly the same thing here I'm

996
00:43:44,569 --> 00:43:47,269
just kind<font color="#CCCCCC"> of adding these additional</font>

997
00:43:47,269 --> 00:43:53,299
<font color="#E5E5E5">nodes</font><font color="#CCCCCC"> and it seems like</font><font color="#E5E5E5"> we've kind of</font>

998
00:43:53,299 --> 00:43:55,099
made this one looks more<font color="#CCCCCC"> complicated</font>

999
00:43:55,099 --> 00:43:56,660
than this one but there's a reason for

1000
00:43:56,660 --> 00:43:57,920
<font color="#E5E5E5">kind of breaking it down like this which</font>

1001
00:43:57,920 --> 00:44:00,470
will kind<font color="#E5E5E5"> of move on to in the next</font>

1002
00:44:00,470 --> 00:44:04,700
sections<font color="#E5E5E5"> and that's</font><font color="#CCCCCC"> the idea of kind</font><font color="#E5E5E5"> of</font>

1003
00:44:04,700 --> 00:44:07,839
looking at these<font color="#E5E5E5"> systems just as kind</font><font color="#CCCCCC"> of</font>

1004
00:44:07,839 --> 00:44:09,950
compute graphs from modular building

1005
00:44:09,950 --> 00:44:13,430
blocks<font color="#E5E5E5"> and the nice</font><font color="#CCCCCC"> thing is</font><font color="#E5E5E5"> if we if we</font>

1006
00:44:13,430 --> 00:44:15,049
represent<font color="#E5E5E5"> and think about our models in</font>

1007
00:44:15,049 --> 00:44:17,720
<font color="#E5E5E5">this way then there's a nice link into</font>

1008
00:44:17,720 --> 00:44:20,329
software<font color="#E5E5E5"> implementation so we can kind</font>

1009
00:44:20,329 --> 00:44:21,859
<font color="#CCCCCC">of take a very object-oriented approach</font>

1010
00:44:21,859 --> 00:44:23,930
to composing these graphs and

1011
00:44:23,930 --> 00:44:27,559
implementing them<font color="#E5E5E5"> and for most of what</font>

1012
00:44:27,559 --> 00:44:29,630
we need<font color="#CCCCCC"> to do there's a very small</font>

1013
00:44:29,630 --> 00:44:31,670
minimal set of<font color="#E5E5E5"> API functions that each</font>

1014
00:44:31,670 --> 00:44:33,230
of<font color="#E5E5E5"> these</font><font color="#CCCCCC"> modules</font><font color="#E5E5E5"> needs to be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to</font>

1015
00:44:33,230 --> 00:44:36,049
carry out<font color="#E5E5E5"> and you can basically have</font>

1016
00:44:36,049 --> 00:44:37,999
<font color="#E5E5E5">anything as a module in your graph as</font>

1017
00:44:37,999 --> 00:44:40,819
long<font color="#E5E5E5"> as it can carry out these these</font>

1018
00:44:40,819 --> 00:44:43,759
<font color="#E5E5E5">three functionalities so and well we'll</font>

1019
00:44:43,759 --> 00:44:45,440
go through them<font color="#CCCCCC"> and</font><font color="#E5E5E5"> in the subsequent</font>

1020
00:44:45,440 --> 00:44:48,859
<font color="#E5E5E5">slides but just to kind of signpost them</font>

1021
00:44:48,859 --> 00:44:50,480
there's a forward<font color="#E5E5E5"> path so Harry go from</font>

1022
00:44:50,480 --> 00:44:52,730
inputs to outputs<font color="#E5E5E5"> there's a backwards</font>

1023
00:44:52,730 --> 00:44:55,220
<font color="#CCCCCC">pair so given some gradients of</font><font color="#E5E5E5"> the loss</font>

1024
00:44:55,220 --> 00:44:58,970
we care about<font color="#E5E5E5"> how do we compute those</font>

1025
00:44:58,970 --> 00:45:00,019
<font color="#E5E5E5">gradients all the way through the graph</font>

1026
00:45:00,019 --> 00:45:03,019
and then how do we compute the<font color="#E5E5E5"> prior</font>

1027
00:45:03,019 --> 00:45:10,400
<font color="#E5E5E5">updates and this is just putting this up</font>

1028
00:45:10,400 --> 00:45:12,829
here this<font color="#CCCCCC"> is what</font><font color="#E5E5E5"> the compute graph for</font>

1029
00:45:12,829 --> 00:45:15,349
<font color="#CCCCCC">Inception before looks like and I</font><font color="#E5E5E5"> just</font>

1030
00:45:15,349 --> 00:45:17,119
wanted<font color="#E5E5E5"> to kind of put this up the</font><font color="#CCCCCC"> to</font>

1031
00:45:17,119 --> 00:45:20,630
ground why it's important<font color="#E5E5E5"> to have this</font>

1032
00:45:20,630 --> 00:45:22,759
kind<font color="#CCCCCC"> of modular framework because</font><font color="#E5E5E5"> you</font>

1033
00:45:22,759 --> 00:45:24,230
know for the for<font color="#E5E5E5"> the small networks that</font>

1034
00:45:24,230 --> 00:45:26,059
I was showing you initially<font color="#E5E5E5"> it kind of</font>

1035
00:45:26,059 --> 00:45:27,589
doesn't<font color="#CCCCCC"> matter how</font><font color="#E5E5E5"> you set up your code</font>

1036
00:45:27,589 --> 00:45:28,579
you could<font color="#E5E5E5"> you know you can drive</font>

1037
00:45:28,579 --> 00:45:31,369
<font color="#E5E5E5">everything by hand you know maybe you</font>

1038
00:45:31,369 --> 00:45:32,630
<font color="#E5E5E5">want to fuse some of the operations</font>

1039
00:45:32,630 --> 00:45:34,430
yourself just<font color="#E5E5E5"> to make things efficient</font>

1040
00:45:34,430 --> 00:45:37,130
<font color="#E5E5E5">but once you have these massive massive</font>

1041
00:45:37,130 --> 00:45:39,470
graphs then keeping<font color="#E5E5E5"> track of that in</font>

1042
00:45:39,470 --> 00:45:41,390
your head or by by hand is just<font color="#E5E5E5"> not</font>

1043
00:45:41,390 --> 00:45:43,700
really feasible<font color="#E5E5E5"> and so you need</font><font color="#CCCCCC"> to have</font>

1044
00:45:43,700 --> 00:45:45,170
some automated<font color="#E5E5E5"> way of plugging these</font>

1045
00:45:45,170 --> 00:45:46,670
things together and<font color="#E5E5E5"> being able to to</font>

1046
00:45:46,670 --> 00:45:50,329
deal with them so this I think<font color="#E5E5E5"> it's not</font>

1047
00:45:50,329 --> 00:45:52,099
<font color="#CCCCCC">state-of-the-art anymore</font><font color="#E5E5E5"> that's a kind</font>

1048
00:45:52,099 --> 00:45:54,259
<font color="#E5E5E5">of sign of how the fields moving but as</font>

1049
00:45:54,259 --> 00:45:55,650
of<font color="#E5E5E5"> around this</font>

1050
00:45:55,650 --> 00:45:57,980
last year this<font color="#E5E5E5"> was a state-of-the-art</font>

1051
00:45:57,980 --> 00:46:00,690
<font color="#CCCCCC">vision architecture</font><font color="#E5E5E5"> it's still</font><font color="#CCCCCC"> pretty</font>

1052
00:46:00,690 --> 00:46:03,900
<font color="#E5E5E5">good</font><font color="#CCCCCC"> this is another example</font><font color="#E5E5E5"> this time</font>

1053
00:46:03,900 --> 00:46:05,880
<font color="#E5E5E5">from deep reinforcement learning</font><font color="#CCCCCC"> and</font>

1054
00:46:05,880 --> 00:46:08,220
again and<font color="#E5E5E5"> just kind of putting this up</font>

1055
00:46:08,220 --> 00:46:11,550
there to give you a sense<font color="#E5E5E5"> of what sorts</font>

1056
00:46:11,550 --> 00:46:13,950
of architectures we end up using<font color="#E5E5E5"> it in</font>

1057
00:46:13,950 --> 00:46:15,980
<font color="#CCCCCC">real-world problems and the sorts of</font>

1058
00:46:15,980 --> 00:46:19,440
somewhat arbitrary topologies<font color="#CCCCCC"> that we</font>

1059
00:46:19,440 --> 00:46:21,000
can have<font color="#E5E5E5"> depending on on what we need to</font>

1060
00:46:21,000 --> 00:46:24,300
do the details of this don't matter too

1061
00:46:24,300 --> 00:46:26,100
much but I I<font color="#E5E5E5"> think towards the end</font><font color="#CCCCCC"> of</font>

1062
00:46:26,100 --> 00:46:28,320
the<font color="#CCCCCC"> RL course Hado might cover some of</font>

1063
00:46:28,320 --> 00:46:41,490
this stuff<font color="#CCCCCC"> ok so the</font><font color="#E5E5E5"> the next section</font>

1064
00:46:41,490 --> 00:46:43,350
we're going to<font color="#E5E5E5"> cover learning and it's</font>

1065
00:46:43,350 --> 00:46:45,330
probably<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be one</font><font color="#CCCCCC"> of the more</font>

1066
00:46:45,330 --> 00:46:48,870
math heavy sections and I guess I'll

1067
00:46:48,870 --> 00:46:51,810
I'll cover<font color="#E5E5E5"> up the material but I usually</font>

1068
00:46:51,810 --> 00:46:53,490
<font color="#CCCCCC">find it's not super productive to be</font>

1069
00:46:53,490 --> 00:46:55,320
very detailed with mathematics in a

1070
00:46:55,320 --> 00:46:58,050
<font color="#E5E5E5">lecture but you can kind of refer to the</font>

1071
00:46:58,050 --> 00:47:00,480
slides for details afterwards<font color="#E5E5E5"> so what is</font>

1072
00:47:00,480 --> 00:47:02,370
what<font color="#CCCCCC"> is learning</font><font color="#E5E5E5"> as I said it's very</font>

1073
00:47:02,370 --> 00:47:05,400
simple<font color="#E5E5E5"> we have some</font><font color="#CCCCCC"> loss function</font>

1074
00:47:05,400 --> 00:47:08,100
defined with respect<font color="#E5E5E5"> to our data and</font>

1075
00:47:08,100 --> 00:47:11,400
model parameters and then learning is

1076
00:47:11,400 --> 00:47:14,190
<font color="#CCCCCC">just using optimization</font><font color="#E5E5E5"> methods to find</font>

1077
00:47:14,190 --> 00:47:16,020
a set of<font color="#E5E5E5"> model parameters</font><font color="#CCCCCC"> with minimize</font>

1078
00:47:16,020 --> 00:47:20,490
this loss and<font color="#E5E5E5"> typically</font><font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> use some</font>

1079
00:47:20,490 --> 00:47:22,230
form of gradient descent<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> this and</font>

1080
00:47:22,230 --> 00:47:23,760
there'll be a whole lecture<font color="#CCCCCC"> that kind</font><font color="#E5E5E5"> of</font>

1081
00:47:23,760 --> 00:47:26,490
covers various ways of the optimization

1082
00:47:26,490 --> 00:47:28,980
<font color="#CCCCCC">I guess something else that I'll add</font>

1083
00:47:28,980 --> 00:47:33,780
just<font color="#CCCCCC"> cuz</font><font color="#E5E5E5"> it's starting to become popular</font>

1084
00:47:33,780 --> 00:47:35,280
<font color="#CCCCCC">in source</font><font color="#E5E5E5"> is something that I'm working</font>

1085
00:47:35,280 --> 00:47:37,290
<font color="#E5E5E5">on in my research</font><font color="#CCCCCC"> of the moon so there</font>

1086
00:47:37,290 --> 00:47:39,120
are great<font color="#E5E5E5"> in free ways of doing</font>

1087
00:47:39,120 --> 00:47:42,180
optimization<font color="#E5E5E5"> so kind of 0th order</font>

1088
00:47:42,180 --> 00:47:43,650
approximations<font color="#E5E5E5"> to gradients or</font>

1089
00:47:43,650 --> 00:47:47,130
evolutionary<font color="#CCCCCC"> methods</font><font color="#E5E5E5"> and again I guess</font>

1090
00:47:47,130 --> 00:47:48,330
one of<font color="#E5E5E5"> those things</font><font color="#CCCCCC"> were you know</font><font color="#E5E5E5"> these</font>

1091
00:47:48,330 --> 00:47:50,670
<font color="#E5E5E5">things</font><font color="#CCCCCC"> coming waves</font><font color="#E5E5E5"> of fashion day they</font>

1092
00:47:50,670 --> 00:47:52,440
were kind<font color="#CCCCCC"> of popular in the early</font><font color="#E5E5E5"> 2000s</font>

1093
00:47:52,440 --> 00:47:54,090
they've fallen out of favor<font color="#E5E5E5"> they're</font>

1094
00:47:54,090 --> 00:47:57,450
actually appearing<font color="#E5E5E5"> again particularly in</font>

1095
00:47:57,450 --> 00:47:58,950
some reinforcement learning<font color="#CCCCCC"> contexts</font>

1096
00:47:58,950 --> 00:48:01,590
<font color="#E5E5E5">where you have the situation that sure</font>

1097
00:48:01,590 --> 00:48:03,360
we can kind<font color="#CCCCCC"> of deal with</font><font color="#E5E5E5"> great</font><font color="#CCCCCC"> in our</font>

1098
00:48:03,360 --> 00:48:07,110
models but depending<font color="#E5E5E5"> on the data that we</font>

1099
00:48:07,110 --> 00:48:08,620
have<font color="#E5E5E5"> available so in</font>

1100
00:48:08,620 --> 00:48:10,450
<font color="#CCCCCC">wasn't learning the data you trained</font><font color="#E5E5E5"> on</font>

1101
00:48:10,450 --> 00:48:11,650
depends on how well<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> exploring the</font>

1102
00:48:11,650 --> 00:48:13,000
<font color="#CCCCCC">environment it might</font><font color="#E5E5E5"> be that there</font><font color="#CCCCCC"> just</font>

1103
00:48:13,000 --> 00:48:14,560
isn't a<font color="#CCCCCC"> very good gradient signal there</font>

1104
00:48:14,560 --> 00:48:18,640
and so we won't cover it<font color="#CCCCCC"> today I don't</font>

1105
00:48:18,640 --> 00:48:20,200
<font color="#CCCCCC">know if James will touch on</font><font color="#E5E5E5"> a bit on his</font>

1106
00:48:20,200 --> 00:48:21,430
lecture<font color="#E5E5E5"> but it's just useful pretty</font>

1107
00:48:21,430 --> 00:48:23,020
aware of that there<font color="#CCCCCC"> are these</font><font color="#E5E5E5"> sort</font><font color="#CCCCCC"> of</font>

1108
00:48:23,020 --> 00:48:24,700
gradient free<font color="#CCCCCC"> optimization methods as</font>

1109
00:48:24,700 --> 00:48:26,950
<font color="#E5E5E5">well and depending</font><font color="#CCCCCC"> on your problem that</font>

1110
00:48:26,950 --> 00:48:28,270
might be something<font color="#CCCCCC"> useful to think about</font>

1111
00:48:28,270 --> 00:48:31,600
and at least<font color="#E5E5E5"> be aware of</font><font color="#CCCCCC"> so in this</font>

1112
00:48:31,600 --> 00:48:34,330
section<font color="#E5E5E5"> I'll start by doing a kind of a</font>

1113
00:48:34,330 --> 00:48:37,210
recap<font color="#E5E5E5"> of some calculus and linear</font>

1114
00:48:37,210 --> 00:48:40,510
algebra<font color="#CCCCCC"> will recap Green percent</font><font color="#E5E5E5"> and</font>

1115
00:48:40,510 --> 00:48:42,610
then we'll talk<font color="#E5E5E5"> about how to put these</font>

1116
00:48:42,610 --> 00:48:44,530
<font color="#E5E5E5">together</font><font color="#CCCCCC"> on the compute graphs we were</font>

1117
00:48:44,530 --> 00:48:46,300
just discussing<font color="#E5E5E5"> with automatic</font>

1118
00:48:46,300 --> 00:48:47,530
differentiation<font color="#E5E5E5"> is something called</font>

1119
00:48:47,530 --> 00:48:50,590
modular backprop<font color="#E5E5E5"> and what I'll do at the</font>

1120
00:48:50,590 --> 00:48:52,390
end<font color="#E5E5E5"> of the section is we can kind of go</font>

1121
00:48:52,390 --> 00:48:54,850
through<font color="#E5E5E5"> a more detailed derivation of</font>

1122
00:48:54,850 --> 00:48:57,070
how we do a set up if we wanted to say

1123
00:48:57,070 --> 00:48:59,590
do<font color="#E5E5E5"> classification of endless digits with</font>

1124
00:48:59,590 --> 00:49:01,720
a<font color="#E5E5E5"> network with</font><font color="#CCCCCC"> one hidden</font><font color="#E5E5E5"> layer so just</font>

1125
00:49:01,720 --> 00:49:03,430
a kind of<font color="#E5E5E5"> very</font><font color="#CCCCCC"> cruel example but once</font>

1126
00:49:03,430 --> 00:49:04,750
<font color="#CCCCCC">you've got that it kind of generalizes</font>

1127
00:49:04,750 --> 00:49:05,800
<font color="#CCCCCC">to all sorts of other things</font><font color="#E5E5E5"> that you'd</font>

1128
00:49:05,800 --> 00:49:14,140
<font color="#CCCCCC">want to do</font><font color="#E5E5E5"> so there's two concepts</font><font color="#CCCCCC"> that</font>

1129
00:49:14,140 --> 00:49:16,450
it's<font color="#E5E5E5"> useful to have</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> mind they're kind</font>

1130
00:49:16,450 --> 00:49:18,520
<font color="#E5E5E5">of objects</font><font color="#CCCCCC"> that allow us</font><font color="#E5E5E5"> to write some</font>

1131
00:49:18,520 --> 00:49:20,320
<font color="#CCCCCC">of the the equations more efficiently</font>

1132
00:49:20,320 --> 00:49:22,120
and to kind<font color="#CCCCCC"> of think about</font><font color="#E5E5E5"> these things</font>

1133
00:49:22,120 --> 00:49:25,030
in a slightly more<font color="#E5E5E5"> compact way</font><font color="#CCCCCC"> so one of</font>

1134
00:49:25,030 --> 00:49:27,330
them is this notion of a gradient<font color="#E5E5E5"> vector</font>

1135
00:49:27,330 --> 00:49:31,780
<font color="#E5E5E5">so if I have some scalar function f a</font>

1136
00:49:31,780 --> 00:49:35,860
vector<font color="#E5E5E5"> argument then the elements of the</font>

1137
00:49:35,860 --> 00:49:37,830
<font color="#E5E5E5">gradient vector which is denoted here</font>

1138
00:49:37,830 --> 00:49:41,470
with respect<font color="#CCCCCC"> to X are just the partial</font>

1139
00:49:41,470 --> 00:49:43,810
<font color="#E5E5E5">derivatives of the scale output with</font>

1140
00:49:43,810 --> 00:49:45,580
<font color="#CCCCCC">respect to the individual dimensions</font><font color="#E5E5E5"> of</font>

1141
00:49:45,580 --> 00:49:48,190
the vector the other concept that's

1142
00:49:48,190 --> 00:49:50,560
going to be<font color="#CCCCCC"> useful in terms</font><font color="#E5E5E5"> of writing</font>

1143
00:49:50,560 --> 00:49:52,860
<font color="#E5E5E5">some of these things down concisely</font>

1144
00:49:52,860 --> 00:49:57,070
is the Jacobian matrix<font color="#E5E5E5"> and so there if</font>

1145
00:49:57,070 --> 00:49:59,440
we have a vector<font color="#CCCCCC"> function of vector</font>

1146
00:49:59,440 --> 00:50:04,750
arguments then<font color="#E5E5E5"> the Jacobian matrix the</font>

1147
00:50:04,750 --> 00:50:07,690
NF element of that is<font color="#CCCCCC"> just</font><font color="#E5E5E5"> the partial</font>

1148
00:50:07,690 --> 00:50:10,210
derivative of the nth element of the<font color="#CCCCCC"> our</font>

1149
00:50:10,210 --> 00:50:12,670
<font color="#CCCCCC">vector with respect</font><font color="#E5E5E5"> to the</font><font color="#CCCCCC"> F element or</font>

1150
00:50:12,670 --> 00:50:15,450
the<font color="#E5E5E5"> input vector</font>

1151
00:50:17,090 --> 00:50:22,130
and in terms of gradient descent<font color="#CCCCCC"> what</font>

1152
00:50:22,130 --> 00:50:24,800
does that<font color="#E5E5E5"> mean well if we have some</font><font color="#CCCCCC"> lost</font>

1153
00:50:24,800 --> 00:50:26,660
function<font color="#CCCCCC"> that we want to minimize</font><font color="#E5E5E5"> then</font>

1154
00:50:26,660 --> 00:50:28,190
essentially we were just kind of

1155
00:50:28,190 --> 00:50:29,690
repeatedly<font color="#E5E5E5"> doing these updates where we</font>

1156
00:50:29,690 --> 00:50:31,940
take<font color="#CCCCCC"> our previous parameter value we</font>

1157
00:50:31,940 --> 00:50:33,560
compute the gradient<font color="#CCCCCC"> and we can do this</font>

1158
00:50:33,560 --> 00:50:37,850
<font color="#E5E5E5">either over our entire</font><font color="#CCCCCC"> data set or which</font>

1159
00:50:37,850 --> 00:50:39,980
would<font color="#E5E5E5"> be kind of batch or a kind of</font>

1160
00:50:39,980 --> 00:50:41,450
<font color="#E5E5E5">subset of the data which</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> mini batch</font>

1161
00:50:41,450 --> 00:50:43,400
or something that we end<font color="#E5E5E5"> up calling</font>

1162
00:50:43,400 --> 00:50:44,840
<font color="#E5E5E5">online gradient descent which is if we</font>

1163
00:50:44,840 --> 00:50:47,540
take one data<font color="#CCCCCC"> point at a time</font><font color="#E5E5E5"> we just</font>

1164
00:50:47,540 --> 00:50:48,980
compute the gradient of<font color="#E5E5E5"> our loss with</font>

1165
00:50:48,980 --> 00:50:51,380
<font color="#CCCCCC">respect to that data</font><font color="#E5E5E5"> and then take a</font>

1166
00:50:51,380 --> 00:50:53,570
<font color="#E5E5E5">small step</font><font color="#CCCCCC"> scale by this</font><font color="#E5E5E5"> learning rate</font>

1167
00:50:53,570 --> 00:50:55,700
<font color="#CCCCCC">eater in the direct descent direction</font>

1168
00:50:55,700 --> 00:50:59,090
and then<font color="#E5E5E5"> we end up</font><font color="#CCCCCC"> repeating this</font><font color="#E5E5E5"> in</font>

1169
00:50:59,090 --> 00:51:00,980
what I'm gonna<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about the cone</font>

1170
00:51:00,980 --> 00:51:03,230
slides I'm gonna operate<font color="#CCCCCC"> in the</font>

1171
00:51:03,230 --> 00:51:05,420
assumption that we're<font color="#CCCCCC"> doing it online</font><font color="#E5E5E5"> it</font>

1172
00:51:05,420 --> 00:51:07,700
doesn't change it<font color="#E5E5E5"> much if we do batch</font>

1173
00:51:07,700 --> 00:51:09,320
<font color="#E5E5E5">methods it's just easier to represent if</font>

1174
00:51:09,320 --> 00:51:11,660
we just<font color="#E5E5E5"> have one data case</font><font color="#CCCCCC"> I have to</font>

1175
00:51:11,660 --> 00:51:16,760
<font color="#E5E5E5">think about and I'll cover this a couple</font>

1176
00:51:16,760 --> 00:51:18,110
<font color="#E5E5E5">of times later as well but</font><font color="#CCCCCC"> it's just</font>

1177
00:51:18,110 --> 00:51:19,820
<font color="#CCCCCC">worth stressing</font><font color="#E5E5E5"> that the choice of</font>

1178
00:51:19,820 --> 00:51:21,470
learning rates<font color="#CCCCCC"> are</font><font color="#E5E5E5"> the step size</font>

1179
00:51:21,470 --> 00:51:23,120
parameter ends up making a<font color="#CCCCCC"> big</font>

1180
00:51:23,120 --> 00:51:26,750
<font color="#CCCCCC">difference</font><font color="#E5E5E5"> but how quickly you</font><font color="#CCCCCC"> can find</font>

1181
00:51:26,750 --> 00:51:30,200
solutions<font color="#E5E5E5"> and in fact the quality of</font>

1182
00:51:30,200 --> 00:51:32,510
<font color="#CCCCCC">solutions that</font><font color="#E5E5E5"> you end up finding and so</font>

1183
00:51:32,510 --> 00:51:33,710
that's something that<font color="#E5E5E5"> will touch on when</font>

1184
00:51:33,710 --> 00:51:35,000
we talk a<font color="#E5E5E5"> bit about hyper parameter</font>

1185
00:51:35,000 --> 00:51:38,510
optimization<font color="#E5E5E5"> and moving beyond simple</font>

1186
00:51:38,510 --> 00:51:39,740
gradient<font color="#E5E5E5"> descent there's a lot more</font>

1187
00:51:39,740 --> 00:51:41,630
<font color="#E5E5E5">sophisticated method so things like</font>

1188
00:51:41,630 --> 00:51:43,940
<font color="#E5E5E5">momentum where you kind of keep around</font>

1189
00:51:43,940 --> 00:51:45,950
gradient from previous<font color="#CCCCCC"> iterations and</font>

1190
00:51:45,950 --> 00:51:47,510
<font color="#E5E5E5">blend them wood grain from the current</font>

1191
00:51:47,510 --> 00:51:49,790
iteration<font color="#E5E5E5"> there's things like rmsprop</font><font color="#CCCCCC"> or</font>

1192
00:51:49,790 --> 00:51:54,110
atom which are adaptive ways of scaling

1193
00:51:54,110 --> 00:51:56,690
<font color="#E5E5E5">some of the step size as long different</font>

1194
00:51:56,690 --> 00:51:59,060
<font color="#E5E5E5">directions</font><font color="#CCCCCC"> and I think James is</font><font color="#E5E5E5"> going to</font>

1195
00:51:59,060 --> 00:52:00,410
<font color="#E5E5E5">go into a lot</font><font color="#CCCCCC"> more detail about that</font><font color="#E5E5E5"> in</font>

1196
00:52:00,410 --> 00:52:07,840
a<font color="#CCCCCC"> couple weeks time</font><font color="#E5E5E5"> okay</font>

1197
00:52:08,820 --> 00:52:11,140
so if you think<font color="#CCCCCC"> that too kind of high</font>

1198
00:52:11,140 --> 00:52:14,260
school<font color="#CCCCCC"> calculus and in</font><font color="#E5E5E5"> particular the</font>

1199
00:52:14,260 --> 00:52:19,890
chain rule so let's start off<font color="#E5E5E5"> with this</font>

1200
00:52:19,890 --> 00:52:25,480
<font color="#E5E5E5">nested function so Y is f of</font><font color="#CCCCCC"> G of X and</font>

1201
00:52:25,480 --> 00:52:30,790
<font color="#E5E5E5">so if we ask okay what's the derivative</font>

1202
00:52:30,790 --> 00:52:33,670
of Y with<font color="#CCCCCC"> respect</font><font color="#E5E5E5"> to X well we just plug</font>

1203
00:52:33,670 --> 00:52:36,220
in<font color="#CCCCCC"> the chain rule</font><font color="#E5E5E5"> so it's the</font><font color="#CCCCCC"> derivative</font>

1204
00:52:36,220 --> 00:52:39,040
of<font color="#E5E5E5"> F with</font><font color="#CCCCCC"> respect</font><font color="#E5E5E5"> to G considering</font>

1205
00:52:39,040 --> 00:52:40,930
g-tube<font color="#E5E5E5"> its argument and then the</font>

1206
00:52:40,930 --> 00:52:43,410
<font color="#CCCCCC">derivative of G with respect to X so a</font>

1207
00:52:43,410 --> 00:52:46,720
similar scalar case<font color="#E5E5E5"> scalar output scalar</font>

1208
00:52:46,720 --> 00:52:52,720
<font color="#E5E5E5">input</font><font color="#CCCCCC"> if we make this</font><font color="#E5E5E5"> multivariate so</font>

1209
00:52:52,720 --> 00:52:55,720
now let's imagine<font color="#CCCCCC"> that our</font><font color="#E5E5E5"> function f is</font>

1210
00:52:55,720 --> 00:52:57,460
a function<font color="#CCCCCC"> of multiple arguments each of</font>

1211
00:52:57,460 --> 00:52:59,350
<font color="#E5E5E5">which is a different function G</font><font color="#CCCCCC"> 1</font>

1212
00:52:59,350 --> 00:53:02,830
through m of<font color="#CCCCCC"> X and again were</font><font color="#E5E5E5"> interested</font>

1213
00:53:02,830 --> 00:53:06,250
<font color="#CCCCCC">in the</font><font color="#E5E5E5"> same question what's the the</font>

1214
00:53:06,250 --> 00:53:08,760
<font color="#E5E5E5">derivative of Y</font><font color="#CCCCCC"> with respect</font><font color="#E5E5E5"> to X well</font>

1215
00:53:08,760 --> 00:53:13,180
we sum<font color="#CCCCCC"> over all these individual</font>

1216
00:53:13,180 --> 00:53:15,870
functions and then for any one of them

1217
00:53:15,870 --> 00:53:17,980
it's again<font color="#CCCCCC"> just the chain rule</font><font color="#E5E5E5"> from</font>

1218
00:53:17,980 --> 00:53:20,020
<font color="#E5E5E5">above</font><font color="#CCCCCC"> so the partial of</font><font color="#E5E5E5"> F with</font><font color="#CCCCCC"> respect</font>

1219
00:53:20,020 --> 00:53:22,600
to G I and then the partial<font color="#CCCCCC"> of G</font><font color="#E5E5E5"> IR with</font>

1220
00:53:22,600 --> 00:53:28,200
<font color="#E5E5E5">respect to X so we</font><font color="#CCCCCC"> basically</font><font color="#E5E5E5"> for each</font>

1221
00:53:28,200 --> 00:53:31,780
half<font color="#E5E5E5"> of nesting we take a product along</font>

1222
00:53:31,780 --> 00:53:34,330
a single<font color="#CCCCCC"> path</font><font color="#E5E5E5"> and then we sum over</font><font color="#CCCCCC"> all</font>

1223
00:53:34,330 --> 00:53:36,390
possible paths to get the total

1224
00:53:36,390 --> 00:53:39,910
derivative<font color="#E5E5E5"> and well basically just</font><font color="#CCCCCC"> gonna</font>

1225
00:53:39,910 --> 00:53:44,140
take these concepts and scale them<font color="#CCCCCC"> up</font><font color="#E5E5E5"> so</font>

1226
00:53:44,140 --> 00:53:46,600
<font color="#CCCCCC">that we can</font><font color="#E5E5E5"> apply them</font><font color="#CCCCCC"> to these compute</font>

1227
00:53:46,600 --> 00:53:50,140
graphs<font color="#E5E5E5"> and the only thing to be</font><font color="#CCCCCC"> aware of</font>

1228
00:53:50,140 --> 00:53:51,790
<font color="#E5E5E5">an hour I'll have mentioned this again</font>

1229
00:53:51,790 --> 00:53:53,170
in a second<font color="#E5E5E5"> there's a couple</font><font color="#CCCCCC"> of</font>

1230
00:53:53,170 --> 00:53:54,760
efficiency tricks that we should be

1231
00:53:54,760 --> 00:53:57,580
<font color="#E5E5E5">aware of so if there are junctions as we</font>

1232
00:53:57,580 --> 00:53:59,470
<font color="#CCCCCC">traverse there's opportunities to</font>

1233
00:53:59,470 --> 00:54:01,360
factorize these expressions and that

1234
00:54:01,360 --> 00:54:02,890
becomes particularly important if you

1235
00:54:02,890 --> 00:54:07,300
have<font color="#E5E5E5"> a graph</font><font color="#CCCCCC"> with a lot of branching in</font>

1236
00:54:07,300 --> 00:54:13,330
its topology<font color="#E5E5E5"> so let's let's take</font><font color="#CCCCCC"> a some</font>

1237
00:54:13,330 --> 00:54:15,040
arbitrary if you graph as an example

1238
00:54:15,040 --> 00:54:16,390
<font color="#E5E5E5">again so</font>

1239
00:54:16,390 --> 00:54:18,789
it's a little<font color="#CCCCCC"> dense when I write it</font><font color="#E5E5E5"> out</font>

1240
00:54:18,789 --> 00:54:20,529
but<font color="#E5E5E5"> hopefully</font><font color="#CCCCCC"> this will kind of</font><font color="#E5E5E5"> like</font>

1241
00:54:20,529 --> 00:54:22,150
carry<font color="#E5E5E5"> over</font><font color="#CCCCCC"> the point so so</font><font color="#E5E5E5"> imagine we</font>

1242
00:54:22,150 --> 00:54:24,339
have<font color="#CCCCCC"> some function</font><font color="#E5E5E5"> mapping from X to Y</font>

1243
00:54:24,339 --> 00:54:27,609
<font color="#E5E5E5">and the way this is going to be composed</font>

1244
00:54:27,609 --> 00:54:31,660
<font color="#E5E5E5">it's gonna be some G</font><font color="#CCCCCC"> of F F is</font><font color="#E5E5E5"> going to</font>

1245
00:54:31,660 --> 00:54:34,930
<font color="#E5E5E5">be</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> function of its two inputs</font><font color="#CCCCCC"> E and J</font>

1246
00:54:34,930 --> 00:54:38,890
and then<font color="#CCCCCC"> E</font><font color="#E5E5E5"> is this kind of nested</font>

1247
00:54:38,890 --> 00:54:41,019
sequence of functions or operations all

1248
00:54:41,019 --> 00:54:45,720
the way to X and similarly J so if I

1249
00:54:45,720 --> 00:54:48,010
take what I<font color="#E5E5E5"> just</font><font color="#CCCCCC"> set up here and ask</font>

1250
00:54:48,010 --> 00:54:51,010
okay what's the derivative<font color="#CCCCCC"> of Y with</font>

1251
00:54:51,010 --> 00:54:54,670
respect<font color="#E5E5E5"> to X then we take the product</font>

1252
00:54:54,670 --> 00:54:56,799
<font color="#E5E5E5">along these two paths as I say so a</font>

1253
00:54:56,799 --> 00:54:58,690
through G and then there's also this

1254
00:54:58,690 --> 00:55:01,420
<font color="#E5E5E5">path through here and so we get these</font>

1255
00:55:01,420 --> 00:55:05,019
<font color="#E5E5E5">two</font><font color="#CCCCCC"> expressions</font><font color="#E5E5E5"> down here</font><font color="#CCCCCC"> what I was</font>

1256
00:55:05,019 --> 00:55:06,549
<font color="#CCCCCC">saying about kind of</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> of the</font>

1257
00:55:06,549 --> 00:55:07,990
<font color="#E5E5E5">efficiency tricks is you'll notice</font>

1258
00:55:07,990 --> 00:55:10,240
<font color="#CCCCCC">there's some common terms towards the</font>

1259
00:55:10,240 --> 00:55:12,010
end of<font color="#E5E5E5"> this expression</font><font color="#CCCCCC"> and this</font>

1260
00:55:12,010 --> 00:55:13,660
expression<font color="#E5E5E5"> and so we could actually</font>

1261
00:55:13,660 --> 00:55:17,529
group these together<font color="#CCCCCC"> factor those out of</font>

1262
00:55:17,529 --> 00:55:20,049
<font color="#CCCCCC">that</font><font color="#E5E5E5"> sum in the scalar case it doesn't</font>

1263
00:55:20,049 --> 00:55:21,819
<font color="#E5E5E5">matter too much but</font><font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> move</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

1264
00:55:21,819 --> 00:55:23,859
<font color="#E5E5E5">the vector case and more elaborate</font>

1265
00:55:23,859 --> 00:55:25,299
graphs you'll see why<font color="#E5E5E5"> it's important</font>

1266
00:55:25,299 --> 00:55:26,650
essentially if there's a lot of

1267
00:55:26,650 --> 00:55:28,779
<font color="#E5E5E5">branching and joining then we have to do</font>

1268
00:55:28,779 --> 00:55:30,160
these sums<font color="#E5E5E5"> over there kind</font><font color="#CCCCCC"> of</font>

1269
00:55:30,160 --> 00:55:32,380
combinatorially many paths through<font color="#CCCCCC"> the</font>

1270
00:55:32,380 --> 00:55:34,089
graph for the mapping<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we're</font>

1271
00:55:34,089 --> 00:55:43,450
interested<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the other point</font><font color="#CCCCCC"> that is is</font>

1272
00:55:43,450 --> 00:55:44,950
worth mentioning<font color="#CCCCCC"> is so if you look at</font>

1273
00:55:44,950 --> 00:55:46,569
the literature on automatic

1274
00:55:46,569 --> 00:55:48,759
differentiation<font color="#E5E5E5"> you might hear</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> couple</font>

1275
00:55:48,759 --> 00:55:50,769
<font color="#E5E5E5">of different terms so there's something</font>

1276
00:55:50,769 --> 00:55:53,200
<font color="#E5E5E5">called forwards mode automatic</font>

1277
00:55:53,200 --> 00:55:55,539
differentiation<font color="#E5E5E5"> and something called</font>

1278
00:55:55,539 --> 00:55:56,950
reverse mode automatic differentiation

1279
00:55:56,950 --> 00:56:01,769
<font color="#CCCCCC">and that just that's really referring</font><font color="#E5E5E5"> to</font>

1280
00:56:01,769 --> 00:56:05,769
when were computing<font color="#E5E5E5"> these expressions do</font>

1281
00:56:05,769 --> 00:56:08,440
we compute the product<font color="#E5E5E5"> starting from the</font>

1282
00:56:08,440 --> 00:56:10,420
input working towards the output or do

1283
00:56:10,420 --> 00:56:14,039
we work in<font color="#CCCCCC"> Reverse</font><font color="#E5E5E5"> and the difference</font>

1284
00:56:14,039 --> 00:56:18,549
between<font color="#CCCCCC"> the two is to do</font><font color="#E5E5E5"> with what sorts</font>

1285
00:56:18,549 --> 00:56:20,380
of intermediate properties<font color="#E5E5E5"> that we end</font>

1286
00:56:20,380 --> 00:56:25,059
up<font color="#E5E5E5"> with so if I work from the input</font>

1287
00:56:25,059 --> 00:56:29,829
towards the output so if<font color="#E5E5E5"> I can</font>

1288
00:56:29,829 --> 00:56:32,259
<font color="#CCCCCC">this</font><font color="#E5E5E5"> product see from the inputs to the</font>

1289
00:56:32,259 --> 00:56:33,849
outputs then my intermediate<font color="#E5E5E5"> terms are</font>

1290
00:56:33,849 --> 00:56:38,049
things like<font color="#CCCCCC"> da/dx if</font><font color="#E5E5E5"> I then compute this</font>

1291
00:56:38,049 --> 00:56:42,940
then<font color="#E5E5E5"> I basically would end up with</font><font color="#CCCCCC"> DB</font><font color="#E5E5E5"> DX</font>

1292
00:56:42,940 --> 00:56:46,420
DZ DX so in forwards mode we get the

1293
00:56:46,420 --> 00:56:48,999
partial<font color="#E5E5E5"> derivatives of the internal</font>

1294
00:56:48,999 --> 00:56:52,299
nodes<font color="#E5E5E5"> with respect to the inputs</font><font color="#CCCCCC"> which</font>

1295
00:56:52,299 --> 00:56:53,950
is<font color="#E5E5E5"> actually not super</font><font color="#CCCCCC"> useful for</font><font color="#E5E5E5"> what we</font>

1296
00:56:53,950 --> 00:56:55,239
want to do it it's great<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> want to</font>

1297
00:56:55,239 --> 00:56:57,609
say do sensitivity<font color="#E5E5E5"> analysis so if I want</font>

1298
00:56:57,609 --> 00:56:59,739
to know how much changing a<font color="#CCCCCC"> little bit</font>

1299
00:56:59,739 --> 00:57:00,910
of the input<font color="#CCCCCC"> would affect the output</font>

1300
00:57:00,910 --> 00:57:03,450
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is exactly what we want to do and</font>

1301
00:57:03,450 --> 00:57:05,859
<font color="#E5E5E5">that can be</font><font color="#CCCCCC"> useful in deep learning if</font>

1302
00:57:05,859 --> 00:57:08,440
<font color="#E5E5E5">you want to get a sense of how models</font>

1303
00:57:08,440 --> 00:57:11,319
are representing functions or which bits

1304
00:57:11,319 --> 00:57:13,029
the input are important but<font color="#E5E5E5"> it is not</font>

1305
00:57:13,029 --> 00:57:15,299
<font color="#E5E5E5">useful for learning however if we</font>

1306
00:57:15,299 --> 00:57:18,009
<font color="#CCCCCC">Traverse this in the opposite direction</font>

1307
00:57:18,009 --> 00:57:21,160
so from<font color="#E5E5E5"> outputs towards inputs then we</font>

1308
00:57:21,160 --> 00:57:25,900
end up<font color="#E5E5E5"> with two terms that are</font>

1309
00:57:25,900 --> 00:57:27,729
derivatives of<font color="#E5E5E5"> the output with respect</font>

1310
00:57:27,729 --> 00:57:29,650
<font color="#E5E5E5">to the internal</font><font color="#CCCCCC"> nodes</font><font color="#E5E5E5"> and it turns out</font>

1311
00:57:29,650 --> 00:57:32,890
<font color="#E5E5E5">that that's</font><font color="#CCCCCC"> exactly what we need</font><font color="#E5E5E5"> for for</font>

1312
00:57:32,890 --> 00:57:38,579
learning<font color="#E5E5E5"> so so it's interesting kind of</font>

1313
00:57:38,579 --> 00:57:41,529
explaining<font color="#CCCCCC"> this stuff because on the one</font>

1314
00:57:41,529 --> 00:57:43,269
<font color="#E5E5E5">hand</font><font color="#CCCCCC"> it's all kind of trivial it's you</font>

1315
00:57:43,269 --> 00:57:44,890
know it's basically the chain<font color="#E5E5E5"> rule you</font>

1316
00:57:44,890 --> 00:57:47,559
<font color="#CCCCCC">know</font><font color="#E5E5E5"> you'll have</font><font color="#CCCCCC"> seen this in high</font>

1317
00:57:47,559 --> 00:57:49,479
<font color="#CCCCCC">school so it's kind of one of these</font>

1318
00:57:49,479 --> 00:57:53,049
<font color="#E5E5E5">simple ideas</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> actually had quite</font><font color="#CCCCCC"> a</font>

1319
00:57:53,049 --> 00:57:55,479
big<font color="#CCCCCC"> impact so even though it's kind of</font>

1320
00:57:55,479 --> 00:57:58,209
obvious when you<font color="#CCCCCC"> look at it like this in</font>

1321
00:57:58,209 --> 00:58:00,910
terms of the impact<font color="#CCCCCC"> on efficiency</font><font color="#E5E5E5"> when</font>

1322
00:58:00,910 --> 00:58:02,469
you're computing<font color="#E5E5E5"> gradient updates for</font>

1323
00:58:02,469 --> 00:58:04,239
neural networks<font color="#CCCCCC"> it makes a big</font>

1324
00:58:04,239 --> 00:58:06,969
<font color="#CCCCCC">difference</font><font color="#E5E5E5"> organizing the computation in</font>

1325
00:58:06,969 --> 00:58:08,499
this efficient way and<font color="#E5E5E5"> I think that's</font>

1326
00:58:08,499 --> 00:58:11,019
<font color="#CCCCCC">one of the reasons why when</font><font color="#E5E5E5"> backprop was</font>

1327
00:58:11,019 --> 00:58:13,059
introduced it had such a big impact<font color="#CCCCCC"> even</font>

1328
00:58:13,059 --> 00:58:14,920
though<font color="#CCCCCC"> at</font><font color="#E5E5E5"> hardest</font><font color="#CCCCCC"> a kind of</font>

1329
00:58:14,920 --> 00:58:17,440
fundamentally simple method and<font color="#E5E5E5"> also</font>

1330
00:58:17,440 --> 00:58:19,089
<font color="#E5E5E5">what we'll see as</font><font color="#CCCCCC"> we move</font><font color="#E5E5E5"> on to kind of</font>

1331
00:58:19,089 --> 00:58:20,979
the more vector calculus how<font color="#CCCCCC"> to things</font>

1332
00:58:20,979 --> 00:58:22,839
it all looks pretty trivial if we're

1333
00:58:22,839 --> 00:58:25,690
<font color="#E5E5E5">dealing with scalars but once we move</font>

1334
00:58:25,690 --> 00:58:31,119
into large models then<font color="#CCCCCC"> B again we'll see</font>

1335
00:58:31,119 --> 00:58:35,670
why the ordering makes difference so

1336
00:58:35,670 --> 00:58:38,380
<font color="#E5E5E5">yeah essentially reverse mode or my</font>

1337
00:58:38,380 --> 00:58:40,180
differentiation a clever application<font color="#CCCCCC"> of</font>

1338
00:58:40,180 --> 00:58:42,190
the<font color="#CCCCCC"> chain rule</font><font color="#E5E5E5"> back prop</font><font color="#CCCCCC"> that all the</font>

1339
00:58:42,190 --> 00:58:43,119
<font color="#E5E5E5">same thing</font>

1340
00:58:43,119 --> 00:58:46,660
so basically in the<font color="#CCCCCC"> backwoods pass</font>

1341
00:58:46,660 --> 00:58:47,890
through the network<font color="#E5E5E5"> what we're going to</font>

1342
00:58:47,890 --> 00:58:51,279
<font color="#E5E5E5">want to do is compute</font><font color="#CCCCCC"> the derivative of</font>

1343
00:58:51,279 --> 00:58:53,440
the loss with<font color="#CCCCCC"> respect to the inputs of</font>

1344
00:58:53,440 --> 00:58:57,489
each<font color="#E5E5E5"> module</font><font color="#CCCCCC"> and if we have</font><font color="#E5E5E5"> that then</font>

1345
00:58:57,489 --> 00:58:59,559
<font color="#E5E5E5">that kind of goes into part of this</font>

1346
00:58:59,559 --> 00:59:01,329
minimal API that I was describing those

1347
00:59:01,329 --> 00:59:03,700
three<font color="#E5E5E5"> methods that if our modules</font>

1348
00:59:03,700 --> 00:59:05,680
implement those then we can just plug

1349
00:59:05,680 --> 00:59:08,140
them together<font color="#E5E5E5"> however we like and go</font>

1350
00:59:08,140 --> 00:59:10,259
ahead<font color="#E5E5E5"> and train the other thing</font><font color="#CCCCCC"> that's</font>

1351
00:59:10,259 --> 00:59:12,489
<font color="#CCCCCC">worth mentioning</font><font color="#E5E5E5"> is interesting is that</font>

1352
00:59:12,489 --> 00:59:17,979
this<font color="#E5E5E5"> idea doesn't just apply to things</font>

1353
00:59:17,979 --> 00:59:18,999
<font color="#CCCCCC">that you</font><font color="#E5E5E5"> might consider to</font><font color="#CCCCCC"> be simple</font>

1354
00:59:18,999 --> 00:59:20,589
mathematical operations<font color="#E5E5E5"> you can actually</font>

1355
00:59:20,589 --> 00:59:23,049
<font color="#E5E5E5">apply this to the</font><font color="#CCCCCC"> entire compute graph</font>

1356
00:59:23,049 --> 00:59:25,450
including constructs like<font color="#E5E5E5"> for loops or</font>

1357
00:59:25,450 --> 00:59:28,569
conditionals and<font color="#E5E5E5"> so on</font><font color="#CCCCCC"> essentially we</font>

1358
00:59:28,569 --> 00:59:31,150
just<font color="#E5E5E5"> backtrack through the forward</font>

1359
00:59:31,150 --> 00:59:33,759
execution<font color="#E5E5E5"> path so if something has a</font>

1360
00:59:33,759 --> 00:59:35,979
<font color="#CCCCCC">derivative we take it but if in</font><font color="#E5E5E5"> the case</font>

1361
00:59:35,979 --> 00:59:38,289
of an if<font color="#CCCCCC"> Clause then we essentially</font>

1362
00:59:38,289 --> 00:59:40,299
there's multiple execution branches that

1363
00:59:40,299 --> 00:59:42,190
we could have ended<font color="#E5E5E5"> up following when we</font>

1364
00:59:42,190 --> 00:59:44,289
work<font color="#E5E5E5"> backwards</font><font color="#CCCCCC"> we just need to remember</font>

1365
00:59:44,289 --> 00:59:45,969
which branch we<font color="#CCCCCC"> followed going forward</font>

1366
00:59:45,969 --> 00:59:50,049
and<font color="#E5E5E5"> that's the one that we we use when</font>

1367
00:59:50,049 --> 00:59:52,619
we're going<font color="#E5E5E5"> in the reverse</font><font color="#CCCCCC"> direction so</font>

1368
00:59:52,619 --> 00:59:54,579
essentially we<font color="#E5E5E5"> can take an entire</font>

1369
00:59:54,579 --> 00:59:56,529
<font color="#E5E5E5">computer program more or less and</font>

1370
00:59:56,529 --> 00:59:58,509
everything we can<font color="#E5E5E5"> apply</font><font color="#CCCCCC"> this automatic</font>

1371
00:59:58,509 --> 01:00:00,609
differentiation<font color="#E5E5E5"> to and that's one of</font><font color="#CCCCCC"> the</font>

1372
01:00:00,609 --> 01:00:01,989
<font color="#E5E5E5">powerful things that tends to float does</font>

1373
01:00:01,989 --> 01:00:03,190
for you it allows you<font color="#CCCCCC"> to write these</font>

1374
01:00:03,190 --> 01:00:05,440
<font color="#E5E5E5">I'll retreat in</font><font color="#CCCCCC"> few graphs</font><font color="#E5E5E5"> and then when</font>

1375
01:00:05,440 --> 01:00:07,599
it comes<font color="#E5E5E5"> time</font><font color="#CCCCCC"> to learn it does the hard</font>

1376
01:00:07,599 --> 01:00:09,849
work of doing all this backtracking for

1377
01:00:09,849 --> 01:00:11,650
you and<font color="#E5E5E5"> kind of</font><font color="#CCCCCC"> okie canoeing in terms</font>

1378
01:00:11,650 --> 01:00:15,339
of how the gradients flow<font color="#CCCCCC"> there's a</font>

1379
01:00:15,339 --> 01:00:18,640
couple<font color="#E5E5E5"> of things that you need</font><font color="#CCCCCC"> to be</font>

1380
01:00:18,640 --> 01:00:21,759
aware of so in<font color="#E5E5E5"> most implementations of</font>

1381
01:00:21,759 --> 01:00:24,190
this<font color="#CCCCCC"> you need to store the variables</font>

1382
01:00:24,190 --> 01:00:27,700
during the forward pass so in very big

1383
01:00:27,700 --> 01:00:29,859
models or sequence<font color="#CCCCCC"> models over very long</font>

1384
01:00:29,859 --> 01:00:33,219
sequence lengths<font color="#E5E5E5"> this can lead to us</font>

1385
01:00:33,219 --> 01:00:35,469
requiring a lot<font color="#E5E5E5"> of memory but there are</font>

1386
01:00:35,469 --> 01:00:38,339
also clever tricks to get around that so

1387
01:00:38,339 --> 01:00:40,569
there's a nice<font color="#E5E5E5"> paper</font><font color="#CCCCCC"> that I linked</font><font color="#E5E5E5"> to</font>

1388
01:00:40,569 --> 01:00:43,599
<font color="#CCCCCC">here which</font><font color="#E5E5E5"> is one way</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> being memory</font>

1389
01:00:43,599 --> 01:00:45,279
efficient and it's essentially boils

1390
01:00:45,279 --> 01:00:49,839
down to being<font color="#E5E5E5"> smart about caching</font><font color="#CCCCCC"> States</font>

1391
01:00:49,839 --> 01:00:52,299
in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> schema</font><font color="#CCCCCC"> in the forward execution</font>

1392
01:00:52,299 --> 01:00:55,749
so rather<font color="#E5E5E5"> than remembering everything</font>

1393
01:00:55,749 --> 01:00:56,440
you can think

1394
01:00:56,440 --> 01:00:58,510
it's like every few layers say we

1395
01:00:58,510 --> 01:01:00,810
<font color="#E5E5E5">checkpoint</font><font color="#CCCCCC"> then in the back Pro</font><font color="#E5E5E5"> pass</font>

1396
01:01:00,810 --> 01:01:03,310
<font color="#E5E5E5">rather than having to remember</font>

1397
01:01:03,310 --> 01:01:05,230
<font color="#E5E5E5">everything or the other thing would be</font>

1398
01:01:05,230 --> 01:01:06,310
<font color="#E5E5E5">to kind of compute everything</font><font color="#CCCCCC"> for</font>

1399
01:01:06,310 --> 01:01:10,569
<font color="#E5E5E5">scrapped we can find the most recent</font><font color="#CCCCCC"> or</font>

1400
01:01:10,569 --> 01:01:12,609
the the closest<font color="#CCCCCC"> cache state and then</font>

1401
01:01:12,609 --> 01:01:14,829
just do a<font color="#CCCCCC"> little forward</font><font color="#E5E5E5"> computation</font>

1402
01:01:14,829 --> 01:01:16,630
from<font color="#E5E5E5"> that to get the states we need to</font>

1403
01:01:16,630 --> 01:01:21,520
evaluate the<font color="#CCCCCC"> gradients and yeah that</font>

1404
01:01:21,520 --> 01:01:23,319
most of this is<font color="#E5E5E5"> taken care</font><font color="#CCCCCC"> of</font>

1405
01:01:23,319 --> 01:01:26,200
automatically by things like<font color="#CCCCCC"> tensor</font><font color="#E5E5E5"> flow</font>

1406
01:01:26,200 --> 01:01:28,329
<font color="#E5E5E5">and even I think this memory fish and</font>

1407
01:01:28,329 --> 01:01:30,040
<font color="#E5E5E5">stuff is probably going</font><font color="#CCCCCC"> to find its way</font>

1408
01:01:30,040 --> 01:01:32,050
into the<font color="#CCCCCC"> core tensor flow code</font><font color="#E5E5E5"> probably</font>

1409
01:01:32,050 --> 01:01:34,750
<font color="#CCCCCC">the next release or two so a lot of</font>

1410
01:01:34,750 --> 01:01:36,970
<font color="#CCCCCC">these things</font><font color="#E5E5E5"> you on a day to day basis</font>

1411
01:01:36,970 --> 01:01:38,170
you<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> need to worry</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> again</font>

1412
01:01:38,170 --> 01:01:40,000
I think<font color="#E5E5E5"> it's always useful to kind</font><font color="#CCCCCC"> of</font>

1413
01:01:40,000 --> 01:01:42,280
know what's going<font color="#E5E5E5"> on under the hood in</font>

1414
01:01:42,280 --> 01:01:43,750
case you<font color="#E5E5E5"> are doing something unusual or</font>

1415
01:01:43,750 --> 01:01:45,400
if you are running<font color="#E5E5E5"> into some of these</font>

1416
01:01:45,400 --> 01:01:56,800
problems<font color="#CCCCCC"> okay so in</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> cartoon here</font>

1417
01:01:56,800 --> 01:02:01,359
what I'm showing is how<font color="#E5E5E5"> those different</font>

1418
01:02:01,359 --> 01:02:03,819
pieces fit together<font color="#E5E5E5"> and the sorts of</font>

1419
01:02:03,819 --> 01:02:05,380
<font color="#E5E5E5">things that looks like once we're in a</font>

1420
01:02:05,380 --> 01:02:08,470
more<font color="#E5E5E5"> realistic setting so we</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> vector</font>

1421
01:02:08,470 --> 01:02:11,770
input<font color="#CCCCCC"> SPECT</font><font color="#E5E5E5"> outputs and as I said</font>

1422
01:02:11,770 --> 01:02:16,540
there's these three API methods<font color="#E5E5E5"> that as</font>

1423
01:02:16,540 --> 01:02:17,619
long as<font color="#E5E5E5"> we have some sort</font><font color="#CCCCCC"> of</font>

1424
01:02:17,619 --> 01:02:20,319
implementation<font color="#E5E5E5"> of these then we</font><font color="#CCCCCC"> can plug</font>

1425
01:02:20,319 --> 01:02:21,760
<font color="#CCCCCC">together these arbitrary graphs of</font>

1426
01:02:21,760 --> 01:02:26,290
modules<font color="#E5E5E5"> and figure out the outputs given</font>

1427
01:02:26,290 --> 01:02:28,089
<font color="#E5E5E5">inputs figure out the derivatives we</font>

1428
01:02:28,089 --> 01:02:29,109
need to figure out<font color="#E5E5E5"> the parameter update</font>

1429
01:02:29,109 --> 01:02:33,640
<font color="#E5E5E5">so what are they the first one is</font><font color="#CCCCCC"> what</font>

1430
01:02:33,640 --> 01:02:35,140
<font color="#CCCCCC">I'm calling the forward</font><font color="#E5E5E5"> pass so this is</font>

1431
01:02:35,140 --> 01:02:39,119
just what's<font color="#E5E5E5"> the</font><font color="#CCCCCC"> output given the input</font>

1432
01:02:39,329 --> 01:02:44,010
<font color="#E5E5E5">so through here and then there's two</font>

1433
01:02:44,010 --> 01:02:45,970
<font color="#E5E5E5">methods that involve gradient so one</font>

1434
01:02:45,970 --> 01:02:49,750
which I call the<font color="#E5E5E5"> backward</font><font color="#CCCCCC"> pass is we'd</font>

1435
01:02:49,750 --> 01:02:52,720
<font color="#CCCCCC">like to know the gradient of the loss</font>

1436
01:02:52,720 --> 01:02:56,050
with<font color="#CCCCCC"> respect to the inputs given</font><font color="#E5E5E5"> the</font>

1437
01:02:56,050 --> 01:02:57,490
gradient of<font color="#E5E5E5"> the loss with respect</font><font color="#CCCCCC"> to the</font>

1438
01:02:57,490 --> 01:03:02,290
<font color="#E5E5E5">output and so it turns out</font><font color="#CCCCCC"> that what</font>

1439
01:03:02,290 --> 01:03:04,180
does that<font color="#E5E5E5"> look</font><font color="#CCCCCC"> like well thinking back</font>

1440
01:03:04,180 --> 01:03:06,940
<font color="#CCCCCC">to the chain rule slides from</font><font color="#E5E5E5"> slides ago</font>

1441
01:03:06,940 --> 01:03:09,250
if I want to<font color="#E5E5E5"> think</font><font color="#CCCCCC"> about this</font><font color="#E5E5E5"> element</font>

1442
01:03:09,250 --> 01:03:10,330
wise then

1443
01:03:10,330 --> 01:03:12,250
<font color="#E5E5E5">the gradient the</font><font color="#CCCCCC"> lost with</font><font color="#E5E5E5"> respect to</font>

1444
01:03:12,250 --> 01:03:15,550
the I input is just<font color="#E5E5E5"> the sum over</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> the</font>

1445
01:03:15,550 --> 01:03:17,740
outputs<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the gradient of the</font><font color="#CCCCCC"> lost with</font>

1446
01:03:17,740 --> 01:03:19,120
<font color="#CCCCCC">respect to each</font><font color="#E5E5E5"> of those outputs</font><font color="#CCCCCC"> and</font>

1447
01:03:19,120 --> 01:03:20,860
then the gradient<font color="#CCCCCC"> of those outputs</font><font color="#E5E5E5"> with</font>

1448
01:03:20,860 --> 01:03:23,740
respect to the input<font color="#CCCCCC"> and</font><font color="#E5E5E5"> if we want to</font>

1449
01:03:23,740 --> 01:03:28,360
use<font color="#E5E5E5"> our vector matrix notation then it's</font>

1450
01:03:28,360 --> 01:03:30,940
the product<font color="#E5E5E5"> of this gradient vector with</font>

1451
01:03:30,940 --> 01:03:34,480
respect<font color="#E5E5E5"> to the Jacobian</font><font color="#CCCCCC"> of Y so this is</font>

1452
01:03:34,480 --> 01:03:37,210
<font color="#E5E5E5">just a kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> compact way of</font>

1453
01:03:37,210 --> 01:03:42,070
<font color="#E5E5E5">representing things similarly to get</font>

1454
01:03:42,070 --> 01:03:43,840
parameter gradients<font color="#CCCCCC"> or that's just</font><font color="#E5E5E5"> the</font>

1455
01:03:43,840 --> 01:03:45,370
derivative<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the loss with respect</font><font color="#CCCCCC"> to</font>

1456
01:03:45,370 --> 01:03:50,080
the parameters<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> then the sum of</font>

1457
01:03:50,080 --> 01:03:52,480
all the outputs<font color="#CCCCCC"> maduro to the loss with</font>

1458
01:03:52,480 --> 01:03:54,880
respect<font color="#E5E5E5"> those outputs the derivative</font>

1459
01:03:54,880 --> 01:03:56,380
those<font color="#CCCCCC"> outputs with recta parameters and</font>

1460
01:03:56,380 --> 01:04:00,000
then these<font color="#E5E5E5"> are obviously evaluated at</font>

1461
01:04:00,000 --> 01:04:02,290
the state<font color="#E5E5E5"> that it was</font><font color="#CCCCCC"> 1 we're doing the</font>

1462
01:04:02,290 --> 01:04:03,550
forward pass and<font color="#E5E5E5"> that that's why I was</font>

1463
01:04:03,550 --> 01:04:05,290
saying<font color="#E5E5E5"> before that we need</font><font color="#CCCCCC"> to keep</font><font color="#E5E5E5"> these</font>

1464
01:04:05,290 --> 01:04:09,010
<font color="#E5E5E5">states around because typically these</font>

1465
01:04:09,010 --> 01:04:11,230
derivative terms will involve an

1466
01:04:11,230 --> 01:04:12,370
expression that involves<font color="#E5E5E5"> what the</font>

1467
01:04:12,370 --> 01:04:16,720
current state is so yeah<font color="#CCCCCC"> these are kind</font>

1468
01:04:16,720 --> 01:04:18,220
<font color="#E5E5E5">of compact ways of representing this in</font>

1469
01:04:18,220 --> 01:04:21,700
practice<font color="#E5E5E5"> we we</font><font color="#CCCCCC"> actually don't if you</font>

1470
01:04:21,700 --> 01:04:23,590
were<font color="#CCCCCC"> to</font><font color="#E5E5E5"> write these models yourself you</font>

1471
01:04:23,590 --> 01:04:25,210
probably<font color="#E5E5E5"> wouldn't</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to form the full</font>

1472
01:04:25,210 --> 01:04:28,480
Jacobian in these cases just because the

1473
01:04:28,480 --> 01:04:30,640
jacobians tend to be very sparse so if

1474
01:04:30,640 --> 01:04:34,780
there's there are<font color="#CCCCCC"> many inputs</font><font color="#E5E5E5"> that might</font>

1475
01:04:34,780 --> 01:04:37,330
not have an influence on<font color="#E5E5E5"> an output and</font>

1476
01:04:37,330 --> 01:04:39,010
<font color="#E5E5E5">so many</font><font color="#CCCCCC"> elements of the Jacobian are</font>

1477
01:04:39,010 --> 01:04:42,880
often<font color="#CCCCCC"> 0</font><font color="#E5E5E5"> but it's useful notationally</font>

1478
01:04:42,880 --> 01:04:44,590
particularly if you kind of go<font color="#CCCCCC"> back and</font>

1479
01:04:44,590 --> 01:04:45,970
<font color="#CCCCCC">forth between this and the subscript</font>

1480
01:04:45,970 --> 01:04:48,040
<font color="#E5E5E5">notation if you ever need to kind of</font>

1481
01:04:48,040 --> 01:04:50,890
derive how to implement an<font color="#E5E5E5"> R between</font><font color="#CCCCCC"> new</font>

1482
01:04:50,890 --> 01:04:52,300
module for yourself say if you have some

1483
01:04:52,300 --> 01:04:53,770
<font color="#CCCCCC">wid function there's and supported by</font>

1484
01:04:53,770 --> 01:05:01,420
<font color="#CCCCCC">tons</font><font color="#E5E5E5"> flow so yeah but that's more or</font>

1485
01:05:01,420 --> 01:05:03,870
less what<font color="#E5E5E5"> I just said so we have these</font>

1486
01:05:03,870 --> 01:05:06,850
<font color="#CCCCCC">these methods</font><font color="#E5E5E5"> that we we need</font><font color="#CCCCCC"> to</font>

1487
01:05:06,850 --> 01:05:10,750
<font color="#CCCCCC">implement and we chained the forward</font>

1488
01:05:10,750 --> 01:05:13,570
passes together so how would we operate

1489
01:05:13,570 --> 01:05:16,150
this<font color="#E5E5E5"> we'd we'd call the forward method</font>

1490
01:05:16,150 --> 01:05:17,860
<font color="#E5E5E5">for the linear unit given the parameter</font>

1491
01:05:17,860 --> 01:05:19,780
<font color="#CCCCCC">an</font><font color="#E5E5E5"> input</font><font color="#CCCCCC"> that would</font><font color="#E5E5E5"> give us some output</font>

1492
01:05:19,780 --> 01:05:21,460
<font color="#E5E5E5">the forward method</font><font color="#CCCCCC"> of the relu the</font>

1493
01:05:21,460 --> 01:05:23,060
forward method<font color="#CCCCCC"> linear</font>

1494
01:05:23,060 --> 01:05:26,720
method of the softmax<font color="#E5E5E5"> and then we'd get</font>

1495
01:05:26,720 --> 01:05:28,280
<font color="#CCCCCC">a loss and</font><font color="#E5E5E5"> then we just call be</font>

1496
01:05:28,280 --> 01:05:31,850
backwards method zombies to get our

1497
01:05:31,850 --> 01:05:36,620
derivatives of outputs with respect to

1498
01:05:36,620 --> 01:05:38,390
inputs and derivatives with respect<font color="#E5E5E5"> to</font>

1499
01:05:38,390 --> 01:05:41,720
parameters<font color="#E5E5E5"> we</font><font color="#CCCCCC"> apply</font><font color="#E5E5E5"> the gradient</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font>

1500
01:05:41,720 --> 01:05:44,300
get from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> parameters to take a small</font>

1501
01:05:44,300 --> 01:05:45,800
descent step and then<font color="#E5E5E5"> we just</font><font color="#CCCCCC"> iterate</font>

1502
01:05:45,800 --> 01:05:49,970
that so what I'm going<font color="#CCCCCC"> to do in the next</font>

1503
01:05:49,970 --> 01:05:52,040
couple<font color="#E5E5E5"> of slides is go through what some</font>

1504
01:05:52,040 --> 01:05:53,390
of those operations look like for these

1505
01:05:53,390 --> 01:05:55,520
building blocks<font color="#E5E5E5"> and by the end</font><font color="#CCCCCC"> of it</font>

1506
01:05:55,520 --> 01:05:58,280
we'll have<font color="#E5E5E5"> everything we</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> to do to</font>

1507
01:05:58,280 --> 01:06:01,760
put<font color="#CCCCCC"> together something like endless</font>

1508
01:06:01,760 --> 01:06:03,320
<font color="#E5E5E5">classification with cross-entropy loss</font>

1509
01:06:03,320 --> 01:06:13,910
and a<font color="#E5E5E5"> single</font><font color="#CCCCCC"> table later okay so the</font>

1510
01:06:13,910 --> 01:06:16,520
forward<font color="#E5E5E5"> pass for a linear module we're</font>

1511
01:06:16,520 --> 01:06:18,350
calling for<font color="#CCCCCC"> the Binnington class is just</font>

1512
01:06:18,350 --> 01:06:20,420
<font color="#CCCCCC">given</font><font color="#E5E5E5"> by this expression here</font><font color="#CCCCCC"> so the</font>

1513
01:06:20,420 --> 01:06:23,150
vector output<font color="#E5E5E5"> is a matrix vector</font>

1514
01:06:23,150 --> 01:06:26,840
operation plus<font color="#E5E5E5"> a bias</font><font color="#CCCCCC"> again</font><font color="#E5E5E5"> I say in</font>

1515
01:06:26,840 --> 01:06:28,400
these derivations is often useful<font color="#CCCCCC"> to</font>

1516
01:06:28,400 --> 01:06:31,210
kind<font color="#E5E5E5"> of flip back and</font><font color="#CCCCCC"> forth</font><font color="#E5E5E5"> between</font>

1517
01:06:31,210 --> 01:06:33,800
matrix<font color="#CCCCCC"> vector notation</font><font color="#E5E5E5"> and subscript</font>

1518
01:06:33,800 --> 01:06:37,100
notation<font color="#E5E5E5"> so this is just kind</font><font color="#CCCCCC"> of</font>

1519
01:06:37,100 --> 01:06:39,440
unpacking what the nth element of<font color="#E5E5E5"> this</font>

1520
01:06:39,440 --> 01:06:44,240
output<font color="#E5E5E5"> vector is so we can compose the</font>

1521
01:06:44,240 --> 01:06:46,070
relevant bits of the Jacobian that we

1522
01:06:46,070 --> 01:06:49,250
need so what<font color="#E5E5E5"> do we need we want the the</font>

1523
01:06:49,250 --> 01:06:51,430
partial<font color="#E5E5E5"> of Y</font><font color="#CCCCCC"> with the Spectras inputs</font>

1524
01:06:51,430 --> 01:06:53,660
the partial<font color="#E5E5E5"> of Y</font><font color="#CCCCCC"> with respect</font><font color="#E5E5E5"> to the</font>

1525
01:06:53,660 --> 01:06:55,790
bias and the<font color="#E5E5E5"> partial</font><font color="#CCCCCC"> of Y with respect</font>

1526
01:06:55,790 --> 01:07:01,310
<font color="#E5E5E5">to the weights and we get these</font>

1527
01:07:01,310 --> 01:07:02,990
<font color="#E5E5E5">expressions</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is what I was saying</font>

1528
01:07:02,990 --> 01:07:07,340
before so this<font color="#E5E5E5"> Kronecker Delta here</font><font color="#CCCCCC"> most</font>

1529
01:07:07,340 --> 01:07:09,680
of<font color="#E5E5E5"> the elements</font><font color="#CCCCCC"> of this Jacobian</font><font color="#E5E5E5"> are</font>

1530
01:07:09,680 --> 01:07:11,750
<font color="#CCCCCC">zero because if there isn't oh if</font>

1531
01:07:11,750 --> 01:07:16,490
there's not a weight involved in<font color="#E5E5E5"> this in</font>

1532
01:07:16,490 --> 01:07:18,230
<font color="#E5E5E5">this</font><font color="#CCCCCC"> particular but if a particular</font>

1533
01:07:18,230 --> 01:07:20,630
weight<font color="#E5E5E5"> isn't involved in producing</font><font color="#CCCCCC"> a</font>

1534
01:07:20,630 --> 01:07:22,070
<font color="#CCCCCC">particular output then</font><font color="#E5E5E5"> there's</font>

1535
01:07:22,070 --> 01:07:24,670
<font color="#E5E5E5">absolutely zero and so it's quite sparse</font>

1536
01:07:24,670 --> 01:07:28,460
so armed<font color="#CCCCCC"> with this we can come together</font>

1537
01:07:28,460 --> 01:07:31,100
and get<font color="#E5E5E5"> our backwards pass so what is</font>

1538
01:07:31,100 --> 01:07:33,830
<font color="#E5E5E5">that it's just given by this expression</font>

1539
01:07:33,830 --> 01:07:37,530
so we<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of plug in</font>

1540
01:07:37,530 --> 01:07:39,490
these things<font color="#CCCCCC"> that we've already derived</font>

1541
01:07:39,490 --> 01:07:43,990
so if we have the as I<font color="#E5E5E5"> said in the back</font>

1542
01:07:43,990 --> 01:07:45,960
was possibly<font color="#E5E5E5"> assume that were given the</font>

1543
01:07:45,960 --> 01:07:48,369
gradient of the output<font color="#E5E5E5"> with this</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

1544
01:07:48,369 --> 01:07:49,270
grading of<font color="#E5E5E5"> the loss with respect the</font>

1545
01:07:49,270 --> 01:07:51,910
output and so we just have this matrix

1546
01:07:51,910 --> 01:07:56,560
<font color="#CCCCCC">vector expression here similarly</font><font color="#E5E5E5"> for the</font>

1547
01:07:56,560 --> 01:07:58,300
parameter gradient<font color="#E5E5E5"> if we kind of</font><font color="#CCCCCC"> churn</font>

1548
01:07:58,300 --> 01:08:00,400
through<font color="#CCCCCC"> this this math then we we</font><font color="#E5E5E5"> get</font>

1549
01:08:00,400 --> 01:08:02,590
this<font color="#CCCCCC"> outer product</font><font color="#E5E5E5"> of the gradient</font>

1550
01:08:02,590 --> 01:08:05,050
<font color="#CCCCCC">vector with the inputs and there's a</font>

1551
01:08:05,050 --> 01:08:08,280
similarly simple thing<font color="#E5E5E5"> for the biases so</font>

1552
01:08:08,280 --> 01:08:10,480
<font color="#E5E5E5">armed with that</font><font color="#CCCCCC"> we have everything we</font>

1553
01:08:10,480 --> 01:08:12,820
need<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do forward propagation backward</font>

1554
01:08:12,820 --> 01:08:14,590
propagation and parameter updates for

1555
01:08:14,590 --> 01:08:19,240
the<font color="#CCCCCC"> linear</font><font color="#E5E5E5"> module the</font><font color="#CCCCCC"> rally module is is</font>

1556
01:08:19,240 --> 01:08:22,270
super<font color="#CCCCCC"> simple</font><font color="#E5E5E5"> so there's no parameters so</font>

1557
01:08:22,270 --> 01:08:25,839
<font color="#E5E5E5">that the forward pass is</font><font color="#CCCCCC"> just this max</font>

1558
01:08:25,839 --> 01:08:27,640
of 0 and the input so<font color="#E5E5E5"> it's our kind</font><font color="#CCCCCC"> of</font>

1559
01:08:27,640 --> 01:08:31,270
floor at zero and then the<font color="#E5E5E5"> backward</font><font color="#CCCCCC"> pass</font>

1560
01:08:31,270 --> 01:08:34,000
is also simple<font color="#CCCCCC"> is</font><font color="#E5E5E5"> this kind of element</font>

1561
01:08:34,000 --> 01:08:37,899
<font color="#CCCCCC">wise comparison so if the output was</font>

1562
01:08:37,899 --> 01:08:40,089
above<font color="#E5E5E5"> zero then the gradient with</font>

1563
01:08:40,089 --> 01:08:41,830
respect to inputs is just<font color="#CCCCCC"> 1 were</font><font color="#E5E5E5"> in that</font>

1564
01:08:41,830 --> 01:08:43,990
<font color="#E5E5E5">the linear pass through if the output</font>

1565
01:08:43,990 --> 01:08:45,520
was below zero<font color="#E5E5E5"> then there are no</font>

1566
01:08:45,520 --> 01:08:54,779
<font color="#E5E5E5">gradients the softmax module is a little</font>

1567
01:08:54,779 --> 01:08:56,830
trickier<font color="#CCCCCC"> to derive from the omits for</font>

1568
01:08:56,830 --> 01:08:59,589
but<font color="#E5E5E5"> it's basically still simple calculus</font>

1569
01:08:59,589 --> 01:09:02,979
<font color="#E5E5E5">so if we recall one that was the the</font>

1570
01:09:02,979 --> 01:09:06,540
<font color="#CCCCCC">enth output is just</font><font color="#E5E5E5"> this exponent</font><font color="#CCCCCC"> of the</font>

1571
01:09:06,540 --> 01:09:09,970
sum total and input normalized by that

1572
01:09:09,970 --> 01:09:14,020
same expression<font color="#E5E5E5"> over all units we can</font>

1573
01:09:14,020 --> 01:09:17,710
<font color="#E5E5E5">plug these in derive our Jacobian</font>

1574
01:09:17,710 --> 01:09:20,979
element<font color="#E5E5E5"> and then similarly we can plug</font>

1575
01:09:20,979 --> 01:09:21,850
them<font color="#E5E5E5"> in the backwards pass I've actually</font>

1576
01:09:21,850 --> 01:09:24,279
<font color="#CCCCCC">skipped the derivation for this</font><font color="#E5E5E5"> and I</font>

1577
01:09:24,279 --> 01:09:25,660
think<font color="#E5E5E5"> for the next one in the slides</font>

1578
01:09:25,660 --> 01:09:26,680
<font color="#E5E5E5">just</font><font color="#CCCCCC"> collecting</font><font color="#E5E5E5"> that's going to come up</font>

1579
01:09:26,680 --> 01:09:30,009
as something<font color="#CCCCCC"> on your assignments but in</font>

1580
01:09:30,009 --> 01:09:31,180
a later<font color="#CCCCCC"> version of</font><font color="#E5E5E5"> the slides I'll</font>

1581
01:09:31,180 --> 01:09:33,220
<font color="#E5E5E5">update it with that the solution in</font>

1582
01:09:33,220 --> 01:09:36,060
there<font color="#CCCCCC"> okay</font>

1583
01:09:47,020 --> 01:10:26,060
<font color="#CCCCCC">so</font><font color="#E5E5E5"> second</font><font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> think so</font><font color="#CCCCCC"> so yeah good</font>

1584
01:10:26,060 --> 01:10:30,800
<font color="#CCCCCC">question</font><font color="#E5E5E5"> um I think I usually I usually</font>

1585
01:10:30,800 --> 01:10:32,600
do a greater than<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> so if it's equal</font>

1586
01:10:32,600 --> 01:10:34,220
<font color="#CCCCCC">to zero then I treat the brain</font><font color="#E5E5E5"> at zero</font>

1587
01:10:34,220 --> 01:10:37,430
<font color="#E5E5E5">it's not it's not</font><font color="#CCCCCC"> well-defined in</font>

1588
01:10:37,430 --> 01:10:38,780
practice you can kind of assume it it

1589
01:10:38,780 --> 01:10:43,460
doesn't<font color="#E5E5E5"> happen much but I would just set</font>

1590
01:10:43,460 --> 01:10:45,650
the define the gradient<font color="#E5E5E5"> at zero to be</font>

1591
01:10:45,650 --> 01:10:47,720
zero but it actually<font color="#E5E5E5"> doesn't matter too</font>

1592
01:10:47,720 --> 01:10:50,540
<font color="#CCCCCC">much just because numerically or</font>

1593
01:10:50,540 --> 01:10:52,070
extremely unlikely to hit<font color="#E5E5E5"> something</font>

1594
01:10:52,070 --> 01:11:04,220
that's exactly zero<font color="#CCCCCC"> yeah so</font><font color="#E5E5E5"> the final</font>

1595
01:11:04,220 --> 01:11:06,170
<font color="#E5E5E5">part of this was the the loss the loss</font>

1596
01:11:06,170 --> 01:11:12,890
itself<font color="#E5E5E5"> and so again there's there's no</font>

1597
01:11:12,890 --> 01:11:15,010
parameters in the forward pass we just

1598
01:11:15,010 --> 01:11:18,380
this is our<font color="#CCCCCC"> definition of the loss</font><font color="#E5E5E5"> when</font>

1599
01:11:18,380 --> 01:11:19,940
we<font color="#E5E5E5"> take derivatives we end up with this</font>

1600
01:11:19,940 --> 01:11:22,070
expression<font color="#CCCCCC"> and you might look at this</font>

1601
01:11:22,070 --> 01:11:25,520
<font color="#CCCCCC">and be</font><font color="#E5E5E5"> a little bit worried</font><font color="#CCCCCC"> particularly</font>

1602
01:11:25,520 --> 01:11:27,590
that with with<font color="#E5E5E5"> this kind of expression</font>

1603
01:11:27,590 --> 01:11:30,620
<font color="#E5E5E5">and X can</font><font color="#CCCCCC"> vary a lot</font><font color="#E5E5E5"> then you might</font>

1604
01:11:30,620 --> 01:11:32,660
worry<font color="#CCCCCC"> that if X is</font><font color="#E5E5E5"> very</font><font color="#CCCCCC"> small</font><font color="#E5E5E5"> we might</font>

1605
01:11:32,660 --> 01:11:34,580
run into numerical<font color="#CCCCCC"> precision issues and</font>

1606
01:11:34,580 --> 01:11:36,890
in fact<font color="#E5E5E5"> actually that is a real concern</font>

1607
01:11:36,890 --> 01:11:43,130
<font color="#CCCCCC">so what people typically do is use this</font>

1608
01:11:43,130 --> 01:11:46,190
kind<font color="#E5E5E5"> of compound module so it's softmax</font>

1609
01:11:46,190 --> 01:11:48,320
<font color="#CCCCCC">plus cross-entropy and you'll see that</font>

1610
01:11:48,320 --> 01:11:49,780
in<font color="#CCCCCC"> terms of flow I think this</font>

1611
01:11:49,780 --> 01:11:52,310
<font color="#E5E5E5">implementations for both but</font>

1612
01:11:52,310 --> 01:11:54,090
you know unless<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> your own</font>

1613
01:11:54,090 --> 01:11:55,320
<font color="#CCCCCC">special reasons you probably should</font><font color="#E5E5E5"> use</font>

1614
01:11:55,320 --> 01:11:59,850
that<font color="#E5E5E5"> the softmax</font><font color="#CCCCCC"> plus</font><font color="#E5E5E5"> cross-entropy so</font>

1615
01:11:59,850 --> 01:12:02,700
it basically combines both the<font color="#CCCCCC"> the</font>

1616
01:12:02,700 --> 01:12:04,590
softmax<font color="#E5E5E5"> operation and the cross</font><font color="#CCCCCC"> and</font>

1617
01:12:04,590 --> 01:12:08,040
<font color="#CCCCCC">pre-loss</font><font color="#E5E5E5"> into a single operation</font><font color="#CCCCCC"> and the</font>

1618
01:12:08,040 --> 01:12:09,480
reason<font color="#E5E5E5"> for that is if we do that</font><font color="#CCCCCC"> and</font>

1619
01:12:09,480 --> 01:12:11,040
look<font color="#E5E5E5"> at the the grades that we get out</font>

1620
01:12:11,040 --> 01:12:13,050
then it's<font color="#E5E5E5"> this much more</font><font color="#CCCCCC"> stable form</font>

1621
01:12:13,050 --> 01:12:18,360
here<font color="#E5E5E5"> so if we kind of go back what are</font>

1622
01:12:18,360 --> 01:12:20,490
<font color="#CCCCCC">we done</font><font color="#E5E5E5"> we had this graph</font><font color="#CCCCCC"> that we wanted</font>

1623
01:12:20,490 --> 01:12:23,340
<font color="#E5E5E5">to do learning in safer does it</font>

1624
01:12:23,340 --> 01:12:25,380
classification<font color="#E5E5E5"> we've gone through and</font>

1625
01:12:25,380 --> 01:12:28,890
for each<font color="#CCCCCC"> of these</font><font color="#E5E5E5"> module types we</font>

1626
01:12:28,890 --> 01:12:30,930
figured out what we need<font color="#E5E5E5"> to do to kind</font>

1627
01:12:30,930 --> 01:12:33,060
of propagate forwards<font color="#E5E5E5"> what we need to do</font>

1628
01:12:33,060 --> 01:12:34,500
to propagate backwards and what we need

1629
01:12:34,500 --> 01:12:37,050
<font color="#E5E5E5">to do to come up</font><font color="#CCCCCC"> with the parameter</font>

1630
01:12:37,050 --> 01:12:40,080
derivatives and armed with<font color="#E5E5E5"> that we're</font>

1631
01:12:40,080 --> 01:12:41,490
ready<font color="#CCCCCC"> to go and we</font><font color="#E5E5E5"> can plug together</font>

1632
01:12:41,490 --> 01:12:47,640
<font color="#CCCCCC">things in whatever order we</font><font color="#E5E5E5"> like so in</font>

1633
01:12:47,640 --> 01:12:48,990
terms of learning<font color="#E5E5E5"> we just kind of</font>

1634
01:12:48,990 --> 01:12:51,480
iterate through getting<font color="#E5E5E5"> an input and a</font>

1635
01:12:51,480 --> 01:12:54,050
label<font color="#E5E5E5"> running forward propagation</font>

1636
01:12:54,050 --> 01:12:56,820
running<font color="#CCCCCC"> backwards propagation getting</font>

1637
01:12:56,820 --> 01:12:58,830
<font color="#E5E5E5">parameter updates applying the parameter</font>

1638
01:12:58,830 --> 01:13:00,720
updates and cycling<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> nice thing</font>

1639
01:13:00,720 --> 01:13:02,520
<font color="#CCCCCC">is if we'd you know</font><font color="#E5E5E5"> written this from</font>

1640
01:13:02,520 --> 01:13:04,050
scratch ourselves<font color="#CCCCCC"> and we</font><font color="#E5E5E5"> wanted</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> try</font>

1641
01:13:04,050 --> 01:13:07,770
adding in you know an extra hidden<font color="#E5E5E5"> layer</font>

1642
01:13:07,770 --> 01:13:10,440
<font color="#E5E5E5">then it'd be</font><font color="#CCCCCC"> very simple we we we just</font>

1643
01:13:10,440 --> 01:13:12,600
kind of put another one of these mod

1644
01:13:12,600 --> 01:13:15,750
modules here<font color="#E5E5E5"> change the call sequence</font>

1645
01:13:15,750 --> 01:13:18,990
<font color="#E5E5E5">and and we're good to go so once we have</font>

1646
01:13:18,990 --> 01:13:20,580
those<font color="#CCCCCC"> in place it's then very</font><font color="#E5E5E5"> easy to</font>

1647
01:13:20,580 --> 01:13:22,260
<font color="#E5E5E5">explore different topologies if I wanted</font>

1648
01:13:22,260 --> 01:13:24,690
<font color="#E5E5E5">to California come up with some crazy</font>

1649
01:13:24,690 --> 01:13:26,190
non-linearity instead of the rail ooh

1650
01:13:26,190 --> 01:13:28,340
then I am free<font color="#CCCCCC"> to do so I</font><font color="#E5E5E5"> would just</font>

1651
01:13:28,340 --> 01:13:31,920
implement a module<font color="#E5E5E5"> that has those three</font>

1652
01:13:31,920 --> 01:13:34,170
API methods and and everything should

1653
01:13:34,170 --> 01:13:36,870
<font color="#CCCCCC">just work in</font><font color="#E5E5E5"> this next</font><font color="#CCCCCC"> section I'm</font><font color="#E5E5E5"> going</font>

1654
01:13:36,870 --> 01:13:38,910
<font color="#CCCCCC">to kind of do a</font><font color="#E5E5E5"> quick tour</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> what I'm</font>

1655
01:13:38,910 --> 01:13:42,320
<font color="#E5E5E5">calling a module</font><font color="#CCCCCC"> Zoo so we've seen some</font>

1656
01:13:42,320 --> 01:13:45,170
<font color="#E5E5E5">basic module types that are useful so</font>

1657
01:13:45,170 --> 01:13:50,880
linear<font color="#E5E5E5"> sigmoid relu softmax just</font><font color="#CCCCCC"> gonna</font>

1658
01:13:50,880 --> 01:13:53,120
go<font color="#CCCCCC"> through some of the other operations</font>

1659
01:13:53,120 --> 01:13:56,790
<font color="#CCCCCC">that you might see so there's actually</font>

1660
01:13:56,790 --> 01:13:58,860
two main types<font color="#E5E5E5"> of linear model the first</font>

1661
01:13:58,860 --> 01:14:01,650
<font color="#E5E5E5">is the kind of simple matrix</font>

1662
01:14:01,650 --> 01:14:02,960
<font color="#E5E5E5">multiplication that we've seen already</font>

1663
01:14:02,960 --> 01:14:05,040
<font color="#CCCCCC">convolution and deconvolution all</font>

1664
01:14:05,040 --> 01:14:08,250
<font color="#E5E5E5">laser also linear</font><font color="#CCCCCC"> I'm not</font><font color="#E5E5E5"> gonna</font><font color="#CCCCCC"> talk</font>

1665
01:14:08,250 --> 01:14:10,290
<font color="#E5E5E5">about those but Karen's going to cover</font>

1666
01:14:10,290 --> 01:14:12,560
those in the<font color="#E5E5E5"> next lecture on commnets</font>

1667
01:14:12,560 --> 01:14:15,720
there's a<font color="#E5E5E5"> couple of basic sort</font><font color="#CCCCCC"> like</font>

1668
01:14:15,720 --> 01:14:18,510
<font color="#E5E5E5">element</font><font color="#CCCCCC"> wise operations so addition and</font>

1669
01:14:18,510 --> 01:14:20,490
<font color="#CCCCCC">putting wise multiplication</font><font color="#E5E5E5"> some group</font>

1670
01:14:20,490 --> 01:14:22,880
operations<font color="#E5E5E5"> and then a couple of other</font>

1671
01:14:22,880 --> 01:14:24,540
nonlinearities that<font color="#E5E5E5"> are worth knowing</font>

1672
01:14:24,540 --> 01:14:30,000
about<font color="#CCCCCC"> also in the slides</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> like how this</font>

1673
01:14:30,000 --> 01:14:32,250
<font color="#E5E5E5">is sort</font><font color="#CCCCCC"> of fairly</font><font color="#E5E5E5"> inexhaustible writing</font>

1674
01:14:32,250 --> 01:14:34,170
<font color="#CCCCCC">your possible activation functions you'd</font>

1675
01:14:34,170 --> 01:14:38,010
<font color="#CCCCCC">wanna use typically the ones that we're</font>

1676
01:14:38,010 --> 01:14:40,200
<font color="#E5E5E5">gonna cover</font><font color="#CCCCCC"> today will will be in the</font>

1677
01:14:40,200 --> 01:14:41,520
vast majority<font color="#E5E5E5"> of thing you see but it's</font>

1678
01:14:41,520 --> 01:14:43,560
<font color="#E5E5E5">also worth remembering</font><font color="#CCCCCC"> but if you know</font>

1679
01:14:43,560 --> 01:14:45,180
if you have a particular<font color="#CCCCCC"> problem or</font><font color="#E5E5E5"> if</font>

1680
01:14:45,180 --> 01:14:46,380
you feel<font color="#E5E5E5"> like you need</font><font color="#CCCCCC"> to think</font>

1681
01:14:46,380 --> 01:14:47,880
<font color="#CCCCCC">creatively about it your you</font><font color="#E5E5E5"> have</font>

1682
01:14:47,880 --> 01:14:49,320
license to kind of<font color="#E5E5E5"> but pretty much</font>

1683
01:14:49,320 --> 01:14:50,910
anything<font color="#CCCCCC"> you want in these models as</font>

1684
01:14:50,910 --> 01:14:52,740
long as they're differentiable<font color="#E5E5E5"> you're</font>

1685
01:14:52,740 --> 01:14:54,660
<font color="#E5E5E5">absolutely fine and even if they're not</font>

1686
01:14:54,660 --> 01:14:56,940
<font color="#E5E5E5">perfectly differentiable you might still</font>

1687
01:14:56,940 --> 01:14:58,110
<font color="#E5E5E5">be able to kind of come</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> with</font>

1688
01:14:58,110 --> 01:15:03,060
<font color="#E5E5E5">something that's usable</font><font color="#CCCCCC"> so yeah</font><font color="#E5E5E5"> I'll go</font>

1689
01:15:03,060 --> 01:15:06,960
through these<font color="#E5E5E5"> relatively quickly</font><font color="#CCCCCC"> so if</font>

1690
01:15:06,960 --> 01:15:09,300
we want to<font color="#E5E5E5"> do addition then the forward</font>

1691
01:15:09,300 --> 01:15:11,970
pop method just<font color="#E5E5E5"> obviously simple vector</font>

1692
01:15:11,970 --> 01:15:15,900
addition the back pop method also

1693
01:15:15,900 --> 01:15:19,230
<font color="#E5E5E5">relatively straightforward</font><font color="#CCCCCC"> there's no</font>

1694
01:15:19,230 --> 01:15:20,220
parameters<font color="#CCCCCC"> that</font><font color="#E5E5E5"> there's no gradient</font>

1695
01:15:20,220 --> 01:15:20,700
update

1696
01:15:20,700 --> 01:15:24,360
similarly for multiplication so element

1697
01:15:24,360 --> 01:15:26,910
wise multiplication<font color="#CCCCCC"> this kind of</font><font color="#E5E5E5"> thing</font>

1698
01:15:26,910 --> 01:15:30,090
is kind of useful<font color="#E5E5E5"> in as I saying into</font>

1699
01:15:30,090 --> 01:15:32,280
like gating situations where depending

1700
01:15:32,280 --> 01:15:36,000
<font color="#E5E5E5">on some context say you might want to</font>

1701
01:15:36,000 --> 01:15:37,980
propagate some parts<font color="#E5E5E5"> of the state and</font>

1702
01:15:37,980 --> 01:15:42,540
<font color="#E5E5E5">not others also comes up in modulation</font>

1703
01:15:42,540 --> 01:15:45,390
or things like<font color="#CCCCCC"> attention so if I want to</font>

1704
01:15:45,390 --> 01:15:46,650
emphasize some parts of<font color="#E5E5E5"> my</font>

1705
01:15:46,650 --> 01:15:47,970
representation<font color="#E5E5E5"> and relative to others</font>

1706
01:15:47,970 --> 01:15:50,070
that's<font color="#CCCCCC"> are elsewhere</font><font color="#E5E5E5"> you'd see this kind</font>

1707
01:15:50,070 --> 01:15:54,360
of operation<font color="#CCCCCC"> there's a couple</font><font color="#E5E5E5"> of kind of</font>

1708
01:15:54,360 --> 01:15:58,380
<font color="#CCCCCC">group wise operations so summing for</font>

1709
01:15:58,380 --> 01:16:02,220
instance<font color="#E5E5E5"> so if we have a sum then the</font>

1710
01:16:02,220 --> 01:16:05,880
gradient<font color="#CCCCCC"> is kind</font><font color="#E5E5E5"> of gets distributed the</font>

1711
01:16:05,880 --> 01:16:07,320
back for grading gets distributed across

1712
01:16:07,320 --> 01:16:10,350
all the elements<font color="#E5E5E5"> if we have a Mac so you</font>

1713
01:16:10,350 --> 01:16:12,360
might see this in max pooling<font color="#E5E5E5"> in</font>

1714
01:16:12,360 --> 01:16:15,930
<font color="#CCCCCC">commerce</font><font color="#E5E5E5"> for instance then basically</font>

1715
01:16:15,930 --> 01:16:19,110
the for the back prop if the<font color="#E5E5E5"> element was</font>

1716
01:16:19,110 --> 01:16:21,420
not<font color="#E5E5E5"> small then the gradient</font><font color="#CCCCCC"> just passes</font>

1717
01:16:21,420 --> 01:16:25,350
through<font color="#E5E5E5"> otherwise there's no</font><font color="#CCCCCC"> gradient if</font>

1718
01:16:25,350 --> 01:16:28,680
we have a switch or a conditional<font color="#CCCCCC"> one</font>

1719
01:16:28,680 --> 01:16:30,540
way<font color="#E5E5E5"> of representing it as I was saying</font>

1720
01:16:30,540 --> 01:16:32,010
is with<font color="#E5E5E5"> this kind of element-wise</font>

1721
01:16:32,010 --> 01:16:33,930
multiplication and we basically just

1722
01:16:33,930 --> 01:16:36,450
<font color="#E5E5E5">need to remember which brand</font><font color="#CCCCCC"> to which</font>

1723
01:16:36,450 --> 01:16:39,300
switch was active<font color="#E5E5E5"> that gets back propped</font>

1724
01:16:39,300 --> 01:16:45,360
everything else gets set to<font color="#CCCCCC"> zero here's</font>

1725
01:16:45,360 --> 01:16:47,970
a<font color="#E5E5E5"> couple of slight variance on</font>

1726
01:16:47,970 --> 01:16:50,180
activation function<font color="#E5E5E5"> we've seen already</font>

1727
01:16:50,180 --> 01:16:54,630
<font color="#E5E5E5">so the tan H is basically just a kind of</font>

1728
01:16:54,630 --> 01:16:56,160
scaled and shifted version of<font color="#CCCCCC"> the</font>

1729
01:16:56,160 --> 01:17:00,750
<font color="#E5E5E5">sigmoid so it's at 0 its 0 and it</font>

1730
01:17:00,750 --> 01:17:05,250
saturates at 1 and minus 1<font color="#CCCCCC"> if you were</font>

1731
01:17:05,250 --> 01:17:07,410
to build a feed-forward<font color="#E5E5E5"> Network there's</font>

1732
01:17:07,410 --> 01:17:09,750
<font color="#E5E5E5">some in potential in some cases there's</font>

1733
01:17:09,750 --> 01:17:13,050
<font color="#E5E5E5">advantages to using 1080 over sigmoid in</font>

1734
01:17:13,050 --> 01:17:17,190
that if you initialize with small

1735
01:17:17,190 --> 01:17:18,510
weights<font color="#E5E5E5"> and small biases then you</font>

1736
01:17:18,510 --> 01:17:20,010
basically<font color="#E5E5E5"> get to initialize in this</font>

1737
01:17:20,010 --> 01:17:24,210
linear region here<font color="#CCCCCC"> and in practice it's</font>

1738
01:17:24,210 --> 01:17:27,120
often nice if you can initialize your

1739
01:17:27,120 --> 01:17:28,860
<font color="#E5E5E5">network so that it</font><font color="#CCCCCC"> it does a kind of</font>

1740
01:17:28,860 --> 01:17:30,270
simple straightforward function rather

1741
01:17:30,270 --> 01:17:31,950
than<font color="#E5E5E5"> kind of risking being in some of</font>

1742
01:17:31,950 --> 01:17:33,300
these saturated regions where<font color="#E5E5E5"> the</font>

1743
01:17:33,300 --> 01:17:36,390
gradients<font color="#E5E5E5"> are going to flow for similar</font>

1744
01:17:36,390 --> 01:17:39,060
kind of<font color="#CCCCCC"> gradient flow reasons</font><font color="#E5E5E5"> rather</font>

1745
01:17:39,060 --> 01:17:41,640
than using<font color="#E5E5E5"> the rail ooh this would</font><font color="#CCCCCC"> be</font>

1746
01:17:41,640 --> 01:17:43,740
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> zero here another thing that</font>

1747
01:17:43,740 --> 01:17:45,660
people<font color="#E5E5E5"> sometimes use is to have a very</font>

1748
01:17:45,660 --> 01:17:48,330
<font color="#CCCCCC">small but nonzero slope in</font><font color="#E5E5E5"> this negative</font>

1749
01:17:48,330 --> 01:17:50,250
<font color="#E5E5E5">region and again it</font><font color="#CCCCCC"> just kind of helps</font>

1750
01:17:50,250 --> 01:17:53,790
with<font color="#E5E5E5"> gradient propagation in the you no</font>

1751
01:17:53,790 --> 01:17:55,920
longer lose all<font color="#E5E5E5"> gradient if you're below</font>

1752
01:17:55,920 --> 01:17:58,670
zero<font color="#E5E5E5"> and that could</font><font color="#CCCCCC"> also can be useful</font>

1753
01:17:58,670 --> 01:18:00,720
<font color="#CCCCCC">I'd say that this actually on those</font>

1754
01:18:00,720 --> 01:18:05,190
things were probably<font color="#E5E5E5"> if you it's not</font><font color="#CCCCCC"> a</font>

1755
01:18:05,190 --> 01:18:08,370
default choice but maybe it<font color="#CCCCCC"> should be</font><font color="#E5E5E5"> in</font>

1756
01:18:08,370 --> 01:18:10,920
that<font color="#E5E5E5"> in my experience is often</font><font color="#CCCCCC"> better to</font>

1757
01:18:10,920 --> 01:18:13,800
<font color="#E5E5E5">use this than it is to use a rail ooh</font>

1758
01:18:13,800 --> 01:18:16,260
<font color="#E5E5E5">that said I often don't</font><font color="#CCCCCC"> use it just to</font>

1759
01:18:16,260 --> 01:18:17,970
<font color="#E5E5E5">kind of keep as few moving parts as</font>

1760
01:18:17,970 --> 01:18:19,140
possible<font color="#E5E5E5"> because you know there are</font>

1761
01:18:19,140 --> 01:18:20,640
design choices<font color="#E5E5E5"> that you'd want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make</font>

1762
01:18:20,640 --> 01:18:23,460
here<font color="#E5E5E5"> so I if there was something that I</font>

1763
01:18:23,460 --> 01:18:25,140
really really<font color="#E5E5E5"> heard about getting the</font>

1764
01:18:25,140 --> 01:18:27,000
<font color="#E5E5E5">best performance</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> of I probably start</font>

1765
01:18:27,000 --> 01:18:28,900
to explore some of these variants but

1766
01:18:28,900 --> 01:18:30,699
<font color="#E5E5E5">day</font><font color="#CCCCCC"> to day</font><font color="#E5E5E5"> I tend to kind of stick</font><font color="#CCCCCC"> with</font>

1767
01:18:30,699 --> 01:18:31,719
the simple<font color="#CCCCCC"> choices just because then</font>

1768
01:18:31,719 --> 01:18:33,699
there's fewer<font color="#E5E5E5"> few things to keep</font><font color="#CCCCCC"> track</font>

1769
01:18:33,699 --> 01:18:39,100
<font color="#CCCCCC">of in terms of mental overhead we've</font>

1770
01:18:39,100 --> 01:18:41,920
already seen<font color="#CCCCCC"> content to be lost and</font><font color="#E5E5E5"> so</font>

1771
01:18:41,920 --> 01:18:43,570
<font color="#E5E5E5">there's just another simple one so if</font>

1772
01:18:43,570 --> 01:18:45,100
we're doing say regression problems then

1773
01:18:45,100 --> 01:18:50,620
squared error<font color="#E5E5E5"> is a common choice</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> I</font>

1774
01:18:50,620 --> 01:18:51,880
didn't have<font color="#CCCCCC"> on the slides way I can add</font>

1775
01:18:51,880 --> 01:18:53,350
it later just<font color="#E5E5E5"> exciting again</font><font color="#CCCCCC"> worth</font>

1776
01:18:53,350 --> 01:18:53,800
<font color="#CCCCCC">noting</font>

1777
01:18:53,800 --> 01:18:55,540
so square<font color="#E5E5E5"> error is</font><font color="#CCCCCC"> very common in</font>

1778
01:18:55,540 --> 01:18:58,030
regression<font color="#E5E5E5"> problems</font><font color="#CCCCCC"> again in practice I</font>

1779
01:18:58,030 --> 01:18:59,830
would probably<font color="#E5E5E5"> try squared error if I</font>

1780
01:18:59,830 --> 01:19:01,929
had this but I'd probably<font color="#E5E5E5"> also try other</font>

1781
01:19:01,929 --> 01:19:05,290
norms as well so in particular<font color="#E5E5E5"> l1</font><font color="#CCCCCC"> one of</font>

1782
01:19:05,290 --> 01:19:07,480
the problems with<font color="#E5E5E5"> squared error is if</font>

1783
01:19:07,480 --> 01:19:09,820
you have outliers<font color="#E5E5E5"> or operations that for</font>

1784
01:19:09,820 --> 01:19:11,920
whatever reason<font color="#E5E5E5"> have to be way happen to</font>

1785
01:19:11,920 --> 01:19:13,420
be way off mark<font color="#E5E5E5"> that you can get</font>

1786
01:19:13,420 --> 01:19:15,429
extremely<font color="#E5E5E5"> large gradients</font><font color="#CCCCCC"> and so</font>

1787
01:19:15,429 --> 01:19:16,870
sometimes<font color="#CCCCCC"> that</font><font color="#E5E5E5"> can make learning</font>

1788
01:19:16,870 --> 01:19:21,010
unstable so again in all these cases

1789
01:19:21,010 --> 01:19:22,659
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> sort like reasonable defaults</font>

1790
01:19:22,659 --> 01:19:24,159
that<font color="#CCCCCC"> are sensible</font><font color="#E5E5E5"> to start with but it's</font>

1791
01:19:24,159 --> 01:19:26,409
also useful<font color="#CCCCCC"> to know</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of okay what</font>

1792
01:19:26,409 --> 01:19:28,000
<font color="#E5E5E5">would the design choices that</font><font color="#CCCCCC"> I might</font>

1793
01:19:28,000 --> 01:19:31,090
want<font color="#CCCCCC"> to revisit be if if things for</font>

1794
01:19:31,090 --> 01:19:32,710
<font color="#E5E5E5">whatever is not working or if great</font>

1795
01:19:32,710 --> 01:19:36,100
<font color="#CCCCCC">Nizar kind of blowing</font><font color="#E5E5E5"> up and actually</font>

1796
01:19:36,100 --> 01:19:39,670
that brings<font color="#E5E5E5"> me on to this next</font><font color="#CCCCCC"> section</font>

1797
01:19:39,670 --> 01:19:43,390
where what I'll do is kind of go through

1798
01:19:43,390 --> 01:19:46,420
<font color="#E5E5E5">some sort of high-level practical tips</font>

1799
01:19:46,420 --> 01:19:47,710
in<font color="#CCCCCC"> terms of things that</font><font color="#E5E5E5"> might</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> useful</font>

1800
01:19:47,710 --> 01:19:49,659
for<font color="#E5E5E5"> you when</font><font color="#CCCCCC"> you're dealing with these</font>

1801
01:19:49,659 --> 01:19:53,409
models and kind of<font color="#E5E5E5"> good things to to</font>

1802
01:19:53,409 --> 01:19:56,320
bear in<font color="#CCCCCC"> mind</font><font color="#E5E5E5"> this came</font><font color="#CCCCCC"> up a</font><font color="#E5E5E5"> bit in the</font>

1803
01:19:56,320 --> 01:19:59,890
break as<font color="#E5E5E5"> well it's sort of the the field</font>

1804
01:19:59,890 --> 01:20:01,420
at<font color="#E5E5E5"> the</font><font color="#CCCCCC"> moment</font><font color="#E5E5E5"> there's definitely a kind</font>

1805
01:20:01,420 --> 01:20:04,690
<font color="#E5E5E5">of scarcity</font><font color="#CCCCCC"> of strong theoretical</font>

1806
01:20:04,690 --> 01:20:06,210
<font color="#E5E5E5">statements we</font><font color="#CCCCCC"> can make and so</font>

1807
01:20:06,210 --> 01:20:09,690
<font color="#E5E5E5">unfortunately</font><font color="#CCCCCC"> that kind</font><font color="#E5E5E5"> of means</font><font color="#CCCCCC"> that a</font>

1808
01:20:09,690 --> 01:20:12,310
lot<font color="#E5E5E5"> of deep learning is</font><font color="#CCCCCC"> still a bit more</font>

1809
01:20:12,310 --> 01:20:14,969
of a dark art than<font color="#E5E5E5"> it would be ideal so</font>

1810
01:20:14,969 --> 01:20:17,020
<font color="#E5E5E5">there are some things</font><font color="#CCCCCC"> that you can</font><font color="#E5E5E5"> kind</font>

1811
01:20:17,020 --> 01:20:19,330
of plug in and just rely on<font color="#E5E5E5"> but there's</font>

1812
01:20:19,330 --> 01:20:25,179
also a lot<font color="#CCCCCC"> of trial</font><font color="#E5E5E5"> and error and it's</font>

1813
01:20:25,179 --> 01:20:26,530
some<font color="#E5E5E5"> pieces where you kind of have to do</font>

1814
01:20:26,530 --> 01:20:29,199
more<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> an interrogated loop of okay</font>

1815
01:20:29,199 --> 01:20:30,699
is this<font color="#E5E5E5"> model working if so great if not</font>

1816
01:20:30,699 --> 01:20:34,030
<font color="#E5E5E5">okay what might be going wrong and a</font><font color="#CCCCCC"> lot</font>

1817
01:20:34,030 --> 01:20:35,469
of<font color="#E5E5E5"> getting good at</font><font color="#CCCCCC"> this kind</font><font color="#E5E5E5"> of stuff is</font>

1818
01:20:35,469 --> 01:20:38,230
refining your intuition for if something

1819
01:20:38,230 --> 01:20:39,040
isn't working

1820
01:20:39,040 --> 01:20:41,119
<font color="#E5E5E5">what might the causes be</font>

1821
01:20:41,119 --> 01:20:43,879
to quickly diagnose<font color="#CCCCCC"> that and</font><font color="#E5E5E5"> also what</font>

1822
01:20:43,879 --> 01:20:45,260
<font color="#E5E5E5">sort of things you could do to fix</font><font color="#CCCCCC"> that</font>

1823
01:20:45,260 --> 01:20:54,050
<font color="#E5E5E5">so let's go through these so one problem</font>

1824
01:20:54,050 --> 01:20:57,669
<font color="#E5E5E5">that you can run into is overfitting so</font>

1825
01:20:57,669 --> 01:21:00,499
you get very good<font color="#E5E5E5"> loss on your</font><font color="#CCCCCC"> training</font>

1826
01:21:00,499 --> 01:21:04,669
<font color="#CCCCCC">set</font><font color="#E5E5E5"> but you don't generalize well so one</font>

1827
01:21:04,669 --> 01:21:07,010
thing<font color="#E5E5E5"> you can do there and this was kind</font>

1828
01:21:07,010 --> 01:21:10,669
<font color="#E5E5E5">of probably</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> early</font><font color="#E5E5E5"> days is early</font>

1829
01:21:10,669 --> 01:21:12,260
stopping so you basically<font color="#E5E5E5"> just rather</font>

1830
01:21:12,260 --> 01:21:14,449
<font color="#E5E5E5">than training</font><font color="#CCCCCC"> to kind of push your loss</font>

1831
01:21:14,449 --> 01:21:18,919
<font color="#E5E5E5">all the way to zero you kind of in</font>

1832
01:21:18,919 --> 01:21:20,629
parallel<font color="#E5E5E5"> or evaluating on some</font>

1833
01:21:20,629 --> 01:21:23,030
validation set<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> stop once</font><font color="#E5E5E5"> say</font>

1834
01:21:23,030 --> 01:21:24,590
that<font color="#E5E5E5"> the loss in</font><font color="#CCCCCC"> your validation step</font>

1835
01:21:24,590 --> 01:21:28,189
starts to go up<font color="#CCCCCC"> that's one method some</font>

1836
01:21:28,189 --> 01:21:29,899
something<font color="#E5E5E5"> else you can do and you</font><font color="#CCCCCC"> know</font>

1837
01:21:29,899 --> 01:21:31,059
you can do<font color="#E5E5E5"> all these in combination</font>

1838
01:21:31,059 --> 01:21:33,349
<font color="#CCCCCC">there's something</font><font color="#E5E5E5"> else called weight</font>

1839
01:21:33,349 --> 01:21:37,969
decay and it basically penalizes the

1840
01:21:37,969 --> 01:21:39,379
weights in<font color="#CCCCCC"> your</font><font color="#E5E5E5"> network from becoming</font>

1841
01:21:39,379 --> 01:21:42,679
<font color="#CCCCCC">too big and one intuition for why this</font>

1842
01:21:42,679 --> 01:21:44,719
might be<font color="#CCCCCC"> helpful is if we</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> about</font>

1843
01:21:44,719 --> 01:21:46,789
something like<font color="#E5E5E5"> the sigmoid with small</font>

1844
01:21:46,789 --> 01:21:48,229
weights<font color="#E5E5E5"> we're going to tend to be in</font>

1845
01:21:48,229 --> 01:21:54,320
<font color="#E5E5E5">this more often in this linear region</font><font color="#CCCCCC"> so</font>

1846
01:21:54,320 --> 01:21:56,889
<font color="#CCCCCC">our kind of functional mapping will be</font>

1847
01:21:56,889 --> 01:22:01,669
closer<font color="#E5E5E5"> to linear and so potentially</font>

1848
01:22:01,669 --> 01:22:04,639
lower<font color="#E5E5E5"> complexity what one thing to</font>

1849
01:22:04,639 --> 01:22:05,869
mention<font color="#CCCCCC"> actually about weight decay is</font>

1850
01:22:05,869 --> 01:22:08,179
that it<font color="#E5E5E5"> doesn't have as much an effect</font>

1851
01:22:08,179 --> 01:22:10,669
on<font color="#CCCCCC"> reloj units as it does on some of</font>

1852
01:22:10,669 --> 01:22:15,019
these others so it may be a less<font color="#E5E5E5"> useful</font>

1853
01:22:15,019 --> 01:22:17,209
form of regularization<font color="#E5E5E5"> for your relu</font>

1854
01:22:17,209 --> 01:22:18,409
layers<font color="#CCCCCC"> it'll still obviously have an</font>

1855
01:22:18,409 --> 01:22:22,249
effect on<font color="#E5E5E5"> the output but with</font><font color="#CCCCCC"> Ray lose</font>

1856
01:22:22,249 --> 01:22:23,840
you<font color="#E5E5E5"> can get a new scale all the</font><font color="#CCCCCC"> weights</font>

1857
01:22:23,840 --> 01:22:26,030
down and you<font color="#E5E5E5"> still have the same set of</font>

1858
01:22:26,030 --> 01:22:27,469
decision boundaries so it doesn't quite

1859
01:22:27,469 --> 01:22:30,849
<font color="#E5E5E5">regularize where I lose in the same way</font>

1860
01:22:30,849 --> 01:22:34,939
something<font color="#E5E5E5"> else that you can do is I said</font>

1861
01:22:34,939 --> 01:22:38,030
he<font color="#E5E5E5"> add noise and this kind of brings</font><font color="#CCCCCC"> us</font>

1862
01:22:38,030 --> 01:22:41,179
<font color="#E5E5E5">on to things like drop out and there's a</font>

1863
01:22:41,179 --> 01:22:42,860
couple<font color="#E5E5E5"> of ways of interpreting what's</font>

1864
01:22:42,860 --> 01:22:46,669
going on so you<font color="#CCCCCC"> can add noise</font><font color="#E5E5E5"> to your</font>

1865
01:22:46,669 --> 01:22:48,619
your inputs<font color="#E5E5E5"> which you could also think</font>

1866
01:22:48,619 --> 01:22:50,059
of as a<font color="#E5E5E5"> form of data augmentation you</font>

1867
01:22:50,059 --> 01:22:52,519
could add noise<font color="#E5E5E5"> to your activities you</font>

1868
01:22:52,519 --> 01:22:54,050
can add noise to<font color="#E5E5E5"> your parameters</font><font color="#CCCCCC"> you can</font>

1869
01:22:54,050 --> 01:22:54,820
kind<font color="#E5E5E5"> of</font>

1870
01:22:54,820 --> 01:22:58,250
<font color="#E5E5E5">mask out some of the activities of units</font>

1871
01:22:58,250 --> 01:23:01,460
within<font color="#E5E5E5"> layers</font><font color="#CCCCCC"> and yet in terms of the</font>

1872
01:23:01,460 --> 01:23:03,080
<font color="#E5E5E5">like what is this doing well you can</font>

1873
01:23:03,080 --> 01:23:03,770
kind<font color="#CCCCCC"> of think</font><font color="#E5E5E5"> of it in a</font><font color="#CCCCCC"> couple</font>

1874
01:23:03,770 --> 01:23:05,840
<font color="#CCCCCC">different ways</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> is that it prevents</font>

1875
01:23:05,840 --> 01:23:08,750
<font color="#CCCCCC">the Mott Network from being too reliant</font>

1876
01:23:08,750 --> 01:23:12,460
on very precise conjunctions<font color="#CCCCCC"> or features</font>

1877
01:23:12,460 --> 01:23:15,290
so you can<font color="#CCCCCC"> imagine that you know that'd</font>

1878
01:23:15,290 --> 01:23:17,780
<font color="#CCCCCC">be one way to memorize</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> data set if</font>

1879
01:23:17,780 --> 01:23:20,090
you kind of<font color="#E5E5E5"> have very precise activities</font>

1880
01:23:20,090 --> 01:23:22,119
that depend on the very precise pattern

1881
01:23:22,119 --> 01:23:25,670
<font color="#E5E5E5">that you see</font><font color="#CCCCCC"> in a particular input you</font>

1882
01:23:25,670 --> 01:23:27,409
can<font color="#CCCCCC"> also view it as a</font><font color="#E5E5E5"> kind of cheap way</font>

1883
01:23:27,409 --> 01:23:31,340
<font color="#CCCCCC">of doing ensemble assay model multiple</font>

1884
01:23:31,340 --> 01:23:32,840
times adding different<font color="#E5E5E5"> amounts of noise</font>

1885
01:23:32,840 --> 01:23:36,619
then that's<font color="#E5E5E5"> some what you might spend</font>

1886
01:23:36,619 --> 01:23:38,030
that to have somewhat similar effects<font color="#E5E5E5"> to</font>

1887
01:23:38,030 --> 01:23:40,639
<font color="#E5E5E5">if I had an ensemble of similar models</font>

1888
01:23:40,639 --> 01:23:42,349
and so you can also kind<font color="#E5E5E5"> of tie that</font>

1889
01:23:42,349 --> 01:23:46,610
<font color="#CCCCCC">into some ideas from so phasing</font>

1890
01:23:46,610 --> 01:23:48,469
statistics are rather than say have a

1891
01:23:48,469 --> 01:23:49,699
single model<font color="#E5E5E5"> you have a posterior</font>

1892
01:23:49,699 --> 01:23:51,650
<font color="#E5E5E5">distribution over parameters and adding</font>

1893
01:23:51,650 --> 01:23:53,690
<font color="#E5E5E5">noise in a hand-wavy sense is a little</font>

1894
01:23:53,690 --> 01:23:55,940
<font color="#CCCCCC">bit like</font><font color="#E5E5E5"> looking at a local plastic</font>

1895
01:23:55,940 --> 01:24:00,349
proximation<font color="#CCCCCC"> and then probably</font><font color="#E5E5E5"> the best</font>

1896
01:24:00,349 --> 01:24:02,750
known of these is is<font color="#E5E5E5"> dropout and so in</font>

1897
01:24:02,750 --> 01:24:05,300
this you sort of<font color="#E5E5E5"> randomly set</font><font color="#CCCCCC"> a fraction</font>

1898
01:24:05,300 --> 01:24:08,409
of activities in a given layer to<font color="#CCCCCC"> 0 and</font>

1899
01:24:08,409 --> 01:24:11,719
<font color="#CCCCCC">at testing time you kind of need to</font>

1900
01:24:11,719 --> 01:24:13,730
rescale things<font color="#E5E5E5"> by the proper fraction</font>

1901
01:24:13,730 --> 01:24:16,250
because<font color="#CCCCCC"> at test time</font><font color="#E5E5E5"> you're gonna have</font>

1902
01:24:16,250 --> 01:24:20,650
everything<font color="#E5E5E5"> active so this would be</font>

1903
01:24:20,650 --> 01:24:23,840
typical magnitude of the activities in<font color="#E5E5E5"> a</font>

1904
01:24:23,840 --> 01:24:26,150
given way are<font color="#E5E5E5"> going to be higher</font><font color="#CCCCCC"> it's</font>

1905
01:24:26,150 --> 01:24:27,770
also<font color="#E5E5E5"> worth noting that sort of drop out</font>

1906
01:24:27,770 --> 01:24:29,360
<font color="#E5E5E5">it's one of those things that kind</font><font color="#CCCCCC"> of</font>

1907
01:24:29,360 --> 01:24:31,190
<font color="#E5E5E5">you</font><font color="#CCCCCC"> know peaked in popularity I guess</font>

1908
01:24:31,190 --> 01:24:34,730
around<font color="#E5E5E5"> like 2012 or so it's not used as</font>

1909
01:24:34,730 --> 01:24:38,360
much<font color="#CCCCCC"> these days</font><font color="#E5E5E5"> as it used to be</font><font color="#CCCCCC"> I think</font>

1910
01:24:38,360 --> 01:24:42,020
<font color="#CCCCCC">one of the reasons for</font><font color="#E5E5E5"> that is the sort</font>

1911
01:24:42,020 --> 01:24:45,440
of introduction<font color="#E5E5E5"> of normalization so I'll</font>

1912
01:24:45,440 --> 01:24:47,090
<font color="#E5E5E5">talk about that</font><font color="#CCCCCC"> in a second but another</font>

1913
01:24:47,090 --> 01:24:49,219
another factor<font color="#CCCCCC"> that can</font><font color="#E5E5E5"> be important in</font>

1914
01:24:49,219 --> 01:24:51,349
<font color="#E5E5E5">terms of whether your models</font><font color="#CCCCCC"> train well</font>

1915
01:24:51,349 --> 01:24:55,179
or<font color="#E5E5E5"> not is how will you initialize them</font>

1916
01:24:55,179 --> 01:24:58,190
and yeah this<font color="#E5E5E5"> can expect</font><font color="#CCCCCC"> what I was</font>

1917
01:24:58,190 --> 01:24:59,570
<font color="#E5E5E5">saying about you know the</font><font color="#CCCCCC"> tonnage being</font>

1918
01:24:59,570 --> 01:25:01,429
someone nice<font color="#CCCCCC"> and that if you have small</font>

1919
01:25:01,429 --> 01:25:02,960
weights then you can get<font color="#E5E5E5"> to initialize</font>

1920
01:25:02,960 --> 01:25:05,599
things in a more or less linear region

1921
01:25:05,599 --> 01:25:06,539
but

1922
01:25:06,539 --> 01:25:08,730
the<font color="#E5E5E5"> beginning of training you want to</font>

1923
01:25:08,730 --> 01:25:11,010
make<font color="#CCCCCC"> sure that you have good</font><font color="#E5E5E5"> gradients</font>

1924
01:25:11,010 --> 01:25:12,239
flowing all<font color="#CCCCCC"> the way through your network</font>

1925
01:25:12,239 --> 01:25:15,719
<font color="#CCCCCC">so you</font><font color="#E5E5E5"> don't them</font><font color="#CCCCCC"> to be too big and you</font>

1926
01:25:15,719 --> 01:25:18,269
don't them<font color="#CCCCCC"> to be too small there's</font>

1927
01:25:18,269 --> 01:25:20,340
<font color="#E5E5E5">various heuristics for kind of arranging</font>

1928
01:25:20,340 --> 01:25:23,159
<font color="#E5E5E5">for this to be the case</font><font color="#CCCCCC"> a link to a</font>

1929
01:25:23,159 --> 01:25:27,719
couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> figures here</font><font color="#CCCCCC"> so and for</font><font color="#E5E5E5"> some</font>

1930
01:25:27,719 --> 01:25:28,800
reason a<font color="#CCCCCC"> lot of these are</font><font color="#E5E5E5"> kind of named</font>

1931
01:25:28,800 --> 01:25:32,909
after the first<font color="#E5E5E5"> author of the</font><font color="#CCCCCC"> proposed</font>

1932
01:25:32,909 --> 01:25:34,230
these<font color="#E5E5E5"> so there's something that protocol</font>

1933
01:25:34,230 --> 01:25:38,730
Xavier<font color="#E5E5E5"> initialization named after is a</font>

1934
01:25:38,730 --> 01:25:42,619
burglar who's<font color="#E5E5E5"> so deep mind</font><font color="#CCCCCC"> I forget</font><font color="#E5E5E5"> the</font>

1935
01:25:42,619 --> 01:25:45,030
first name of hair but there's a

1936
01:25:45,030 --> 01:25:46,349
<font color="#CCCCCC">follow-on paper that</font><font color="#E5E5E5"> the difference</font>

1937
01:25:46,349 --> 01:25:49,309
<font color="#E5E5E5">between these two is that both trying to</font>

1938
01:25:49,309 --> 01:25:52,320
say<font color="#E5E5E5"> okay how should</font><font color="#CCCCCC"> I scale my weights</font>

1939
01:25:52,320 --> 01:25:55,639
and biases at initialization so that the

1940
01:25:55,639 --> 01:25:59,849
input<font color="#E5E5E5"> to my normally</font><font color="#CCCCCC"> era T's say have</font>

1941
01:25:59,849 --> 01:26:03,510
some<font color="#E5E5E5"> particular distribution so maybe 0</font>

1942
01:26:03,510 --> 01:26:06,389
mean unit variance<font color="#CCCCCC"> but</font><font color="#E5E5E5"> differently in</font>

1943
01:26:06,389 --> 01:26:09,210
these two is that<font color="#E5E5E5"> the assumptions that</font>

1944
01:26:09,210 --> 01:26:10,829
you might want to<font color="#E5E5E5"> make if you're using</font>

1945
01:26:10,829 --> 01:26:13,440
say a sigmoid unit are different from

1946
01:26:13,440 --> 01:26:16,079
<font color="#E5E5E5">those if you're using say a rectified</font>

1947
01:26:16,079 --> 01:26:18,719
linear unit so yeah there's a<font color="#E5E5E5"> couple of</font>

1948
01:26:18,719 --> 01:26:19,800
<font color="#E5E5E5">papers here</font><font color="#CCCCCC"> that you might want to take</font>

1949
01:26:19,800 --> 01:26:22,650
<font color="#E5E5E5">a look at then there's this thing batch</font>

1950
01:26:22,650 --> 01:26:26,579
norm which is used<font color="#E5E5E5"> full extensively now</font>

1951
01:26:26,579 --> 01:26:29,750
particularly in feed-forward networks

1952
01:26:29,750 --> 01:26:33,570
it's still not used as much<font color="#CCCCCC"> in recurrent</font>

1953
01:26:33,570 --> 01:26:35,849
models<font color="#CCCCCC"> just because there's some</font>

1954
01:26:35,849 --> 01:26:37,139
subtleties<font color="#CCCCCC"> about how you'd actually go</font>

1955
01:26:37,139 --> 01:26:39,420
about doing<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and it's used</font>

1956
01:26:39,420 --> 01:26:42,360
<font color="#E5E5E5">I'd say hardly at all in deep RL but</font>

1957
01:26:42,360 --> 01:26:44,070
there's<font color="#E5E5E5"> probably modifications to this</font>

1958
01:26:44,070 --> 01:26:45,690
kind<font color="#CCCCCC"> of idea that</font><font color="#E5E5E5"> you could do a few if</font>

1959
01:26:45,690 --> 01:26:47,309
you<font color="#E5E5E5"> wanted to apply those approaches</font>

1960
01:26:47,309 --> 01:26:52,710
there and it it kind of subsumes<font color="#CCCCCC"> some of</font>

1961
01:26:52,710 --> 01:26:55,619
the stuff in that<font color="#E5E5E5"> you can think</font><font color="#CCCCCC"> of it as</font>

1962
01:26:55,619 --> 01:26:57,510
being similar to<font color="#E5E5E5"> what we do in some of</font>

1963
01:26:57,510 --> 01:27:00,619
<font color="#E5E5E5">these initialization methods but we also</font>

1964
01:27:00,619 --> 01:27:04,380
continuously update<font color="#E5E5E5"> to maintain these</font>

1965
01:27:04,380 --> 01:27:09,480
<font color="#E5E5E5">properties so the idea is we'd</font><font color="#CCCCCC"> like the</font>

1966
01:27:09,480 --> 01:27:13,500
the inputs the some inputs to<font color="#E5E5E5"> our units</font>

1967
01:27:13,500 --> 01:27:14,960
<font color="#CCCCCC">to have a zero mean</font><font color="#E5E5E5"> and unit variance</font>

1968
01:27:14,960 --> 01:27:17,190
<font color="#CCCCCC">but for the reasons</font><font color="#E5E5E5"> I described in terms</font>

1969
01:27:17,190 --> 01:27:19,230
of initialization<font color="#E5E5E5"> what batch norm does</font>

1970
01:27:19,230 --> 01:27:19,949
is it kind

1971
01:27:19,949 --> 01:27:22,440
enforces<font color="#CCCCCC"> that but it also introduces</font>

1972
01:27:22,440 --> 01:27:24,900
some additional trainable correction

1973
01:27:24,900 --> 01:27:27,420
factors so that<font color="#E5E5E5"> if it turned out in fact</font>

1974
01:27:27,420 --> 01:27:29,610
I would rather have something that had

1975
01:27:29,610 --> 01:27:32,579
<font color="#E5E5E5">variance 10 and I've</font><font color="#CCCCCC"> mean of one then</font>

1976
01:27:32,579 --> 01:27:34,469
there's kind<font color="#E5E5E5"> of scalings and offsets</font>

1977
01:27:34,469 --> 01:27:36,749
<font color="#CCCCCC">that I can learn</font><font color="#E5E5E5"> during training to help</font>

1978
01:27:36,749 --> 01:27:39,809
that be the case but it all that's<font color="#E5E5E5"> being</font>

1979
01:27:39,809 --> 01:27:41,909
<font color="#E5E5E5">equal it kind of helps keep my</font>

1980
01:27:41,909 --> 01:27:44,340
activities you know a<font color="#E5E5E5"> reasonable regime</font>

1981
01:27:44,340 --> 01:27:46,499
with respect to minorities<font color="#E5E5E5"> and also with</font>

1982
01:27:46,499 --> 01:27:48,119
respect<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the kind</font><font color="#E5E5E5"> of gradient scaling</font>

1983
01:27:48,119 --> 01:27:51,389
that<font color="#E5E5E5"> we get when we do back</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> another</font>

1984
01:27:51,389 --> 01:27:55,440
<font color="#E5E5E5">nice benefit of</font><font color="#CCCCCC"> Bachelor on that is</font><font color="#E5E5E5"> I</font>

1985
01:27:55,440 --> 01:27:57,209
think<font color="#CCCCCC"> actually mentioned less often but</font>

1986
01:27:57,209 --> 01:27:59,489
<font color="#E5E5E5">is is interesting and is perhaps part of</font>

1987
01:27:59,489 --> 01:28:02,699
the<font color="#CCCCCC"> reason why drop out</font><font color="#E5E5E5"> isn't as favored</font>

1988
01:28:02,699 --> 01:28:05,179
as much is that<font color="#CCCCCC"> you you</font><font color="#E5E5E5"> get a sort of</font>

1989
01:28:05,179 --> 01:28:08,309
drop out like<font color="#E5E5E5"> noise effect from batch</font>

1990
01:28:08,309 --> 01:28:12,150
<font color="#E5E5E5">normalization and that in order</font><font color="#CCCCCC"> to</font>

1991
01:28:12,150 --> 01:28:15,959
<font color="#E5E5E5">enforce or to encourage these kind of 0</font>

1992
01:28:15,959 --> 01:28:17,760
mean unit<font color="#CCCCCC"> variance properties you look</font>

1993
01:28:17,760 --> 01:28:20,010
at your local<font color="#E5E5E5"> data batch and so just</font>

1994
01:28:20,010 --> 01:28:22,530
<font color="#CCCCCC">because of randomization</font><font color="#E5E5E5"> amongst the</font>

1995
01:28:22,530 --> 01:28:25,590
cases that<font color="#CCCCCC"> you get in a given batch</font><font color="#E5E5E5"> from</font>

1996
01:28:25,590 --> 01:28:26,789
<font color="#E5E5E5">the point of view</font><font color="#CCCCCC"> of any one of those</font>

1997
01:28:26,789 --> 01:28:29,489
data cases the contribution to<font color="#CCCCCC"> the batch</font>

1998
01:28:29,489 --> 01:28:31,199
normalization<font color="#E5E5E5"> from the rest of the batch</font>

1999
01:28:31,199 --> 01:28:33,329
members<font color="#E5E5E5"> looks a lot like noise and</font><font color="#CCCCCC"> so</font>

2000
01:28:33,329 --> 01:28:35,699
that kind of gives you<font color="#E5E5E5"> some some</font><font color="#CCCCCC"> sort of</font>

2001
01:28:35,699 --> 01:28:38,459
regularization effect<font color="#E5E5E5"> anyway there'll be</font>

2002
01:28:38,459 --> 01:28:41,070
<font color="#E5E5E5">a lot more</font><font color="#CCCCCC"> about this in current</font><font color="#E5E5E5"> lecture</font>

2003
01:28:41,070 --> 01:28:46,709
<font color="#E5E5E5">on conducts</font><font color="#CCCCCC"> another kind</font><font color="#E5E5E5"> of area that's</font>

2004
01:28:46,709 --> 01:28:49,739
important practice is how to pick<font color="#CCCCCC"> good</font>

2005
01:28:49,739 --> 01:28:56,130
<font color="#E5E5E5">hyper parameters so how do</font><font color="#CCCCCC"> I know</font><font color="#E5E5E5"> how do</font>

2006
01:28:56,130 --> 01:28:58,650
I know<font color="#CCCCCC"> what a</font><font color="#E5E5E5"> good learning rate is if</font>

2007
01:28:58,650 --> 01:29:01,170
I'm using<font color="#E5E5E5"> dropout how do I know what</font>

2008
01:29:01,170 --> 01:29:03,179
fraction<font color="#E5E5E5"> units to dropout or how much</font>

2009
01:29:03,179 --> 01:29:04,889
noise<font color="#E5E5E5"> to add if I'm doing weight decay</font>

2010
01:29:04,889 --> 01:29:09,959
and so on and we're still relatively

2011
01:29:09,959 --> 01:29:12,709
primitive and how we deal with<font color="#E5E5E5"> this so</font>

2012
01:29:12,709 --> 01:29:15,630
basically<font color="#CCCCCC"> the idea is just</font><font color="#E5E5E5"> to try many</font>

2013
01:29:15,630 --> 01:29:17,639
combinations<font color="#E5E5E5"> and kind of evaluate</font><font color="#CCCCCC"> the</font>

2014
01:29:17,639 --> 01:29:20,269
<font color="#E5E5E5">final results on some held out data set</font>

2015
01:29:20,269 --> 01:29:23,519
<font color="#CCCCCC">and</font><font color="#E5E5E5"> then pick</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> best</font><font color="#CCCCCC"> but there are</font><font color="#E5E5E5"> a</font>

2016
01:29:23,519 --> 01:29:24,780
kind<font color="#CCCCCC"> of a couple of kind of practical</font>

2017
01:29:24,780 --> 01:29:27,389
<font color="#E5E5E5">tricks and some of these to it so if</font>

2018
01:29:27,389 --> 01:29:28,650
there's lots<font color="#E5E5E5"> and lots of hyper</font>

2019
01:29:28,650 --> 01:29:30,479
parameters then the search space can<font color="#CCCCCC"> be</font>

2020
01:29:30,479 --> 01:29:32,909
huge so that's something<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you might</font>

2021
01:29:32,909 --> 01:29:33,900
<font color="#E5E5E5">worry about</font>

2022
01:29:33,900 --> 01:29:36,030
<font color="#E5E5E5">for a long time people advocated grid</font>

2023
01:29:36,030 --> 01:29:37,920
search so essentially for each hyper

2024
01:29:37,920 --> 01:29:41,610
parameter<font color="#E5E5E5"> that you you care about</font><font color="#CCCCCC"> maybe</font>

2025
01:29:41,610 --> 01:29:43,380
kind of come<font color="#E5E5E5"> up with some grid of things</font>

2026
01:29:43,380 --> 01:29:45,270
to<font color="#E5E5E5"> try and kind of systematically try</font>

2027
01:29:45,270 --> 01:29:48,020
the cross base of all possibilities

2028
01:29:48,020 --> 01:29:51,840
<font color="#CCCCCC">turns</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> that in a lot of cases that's</font>

2029
01:29:51,840 --> 01:29:54,620
<font color="#E5E5E5">actually not the</font><font color="#CCCCCC"> best</font><font color="#E5E5E5"> thing to do and</font>

2030
01:29:54,620 --> 01:29:56,820
there's a nice<font color="#E5E5E5"> paper by a</font><font color="#CCCCCC"> box</font><font color="#E5E5E5"> from</font>

2031
01:29:56,820 --> 01:29:58,560
<font color="#CCCCCC">benzio which</font><font color="#E5E5E5"> I've linked here and I've</font>

2032
01:29:58,560 --> 01:30:00,600
taken this figure from<font color="#E5E5E5"> it and this kind</font>

2033
01:30:00,600 --> 01:30:02,429
<font color="#E5E5E5">of tries to illustrate</font><font color="#CCCCCC"> why that might be</font>

2034
01:30:02,429 --> 01:30:06,929
<font color="#E5E5E5">so depending on what the</font><font color="#CCCCCC"> the sensitivity</font>

2035
01:30:06,929 --> 01:30:09,239
<font color="#E5E5E5">of your model is to the hyper parameters</font>

2036
01:30:09,239 --> 01:30:11,820
<font color="#E5E5E5">if you do grid sir you could very easily</font>

2037
01:30:11,820 --> 01:30:14,010
miss these good regions<font color="#E5E5E5"> just if your</font>

2038
01:30:14,010 --> 01:30:17,429
grid happens to be poorly aligned with

2039
01:30:17,429 --> 01:30:20,360
respect<font color="#E5E5E5"> to the reason is</font><font color="#CCCCCC"> that useful</font><font color="#E5E5E5"> so</font>

2040
01:30:20,360 --> 01:30:23,489
they advocate and kind<font color="#E5E5E5"> of empirically</font>

2041
01:30:23,489 --> 01:30:25,350
demonstrated that this often gets better

2042
01:30:25,350 --> 01:30:27,360
results<font color="#CCCCCC"> just</font><font color="#E5E5E5"> doing random search so</font>

2043
01:30:27,360 --> 01:30:29,489
rather than defining a grid for each

2044
01:30:29,489 --> 01:30:31,710
dimension<font color="#CCCCCC"> you might define some sampling</font>

2045
01:30:31,710 --> 01:30:36,080
<font color="#E5E5E5">distribution and then you essentially</font>

2046
01:30:36,080 --> 01:30:38,969
<font color="#E5E5E5">just set a sample from that joint</font>

2047
01:30:38,969 --> 01:30:42,150
<font color="#E5E5E5">probability space run run your models</font>

2048
01:30:42,150 --> 01:30:43,409
and then a nice thing there<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> you</font>

2049
01:30:43,409 --> 01:30:48,120
<font color="#CCCCCC">can you get</font><font color="#E5E5E5"> broader coverage of any</font>

2050
01:30:48,120 --> 01:30:51,929
individual parameter value and there's a

2051
01:30:51,929 --> 01:30:53,250
better<font color="#E5E5E5"> chance</font><font color="#CCCCCC"> that you'll find a good</font>

2052
01:30:53,250 --> 01:30:55,260
<font color="#E5E5E5">region that you can then explore more</font>

2053
01:30:55,260 --> 01:30:57,690
carefully so I would say if you're if

2054
01:30:57,690 --> 01:30:58,650
<font color="#E5E5E5">you're faced with</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> kind of issue</font>

2055
01:30:58,650 --> 01:31:01,500
then<font color="#CCCCCC"> unless you have a good reason not</font>

2056
01:31:01,500 --> 01:31:03,330
<font color="#E5E5E5">to don't do grid search to do do a</font>

2057
01:31:03,330 --> 01:31:06,780
random search<font color="#CCCCCC"> there's actually</font><font color="#E5E5E5"> kind of a</font>

2058
01:31:06,780 --> 01:31:10,770
lot<font color="#CCCCCC"> of ongoing research</font><font color="#E5E5E5"> in terms of ways</font>

2059
01:31:10,770 --> 01:31:12,960
to get<font color="#CCCCCC"> around some of these problems</font><font color="#E5E5E5"> or</font>

2060
01:31:12,960 --> 01:31:14,820
at least<font color="#CCCCCC"> a kind</font><font color="#E5E5E5"> of automate this search</font>

2061
01:31:14,820 --> 01:31:18,750
process so there's some approaches<font color="#E5E5E5"> from</font>

2062
01:31:18,750 --> 01:31:22,050
kind<font color="#E5E5E5"> of Bayesian modeling</font><font color="#CCCCCC"> where the idea</font>

2063
01:31:22,050 --> 01:31:27,239
there is<font color="#CCCCCC"> if I</font><font color="#E5E5E5"> could somehow form a model</font>

2064
01:31:27,239 --> 01:31:29,940
of how well<font color="#CCCCCC"> form a predictive model of</font>

2065
01:31:29,940 --> 01:31:31,800
the performance of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> models that I'm</font>

2066
01:31:31,800 --> 01:31:33,929
training then I could be smarter<font color="#CCCCCC"> about</font>

2067
01:31:33,929 --> 01:31:35,670
figuring out which<font color="#E5E5E5"> hydro parameter</font>

2068
01:31:35,670 --> 01:31:40,760
values to try<font color="#CCCCCC"> next there's also some</font>

2069
01:31:40,760 --> 01:31:42,570
reinforcement learning approaches which

2070
01:31:42,570 --> 01:31:46,740
<font color="#E5E5E5">essentially there's some upfront cost</font>

2071
01:31:46,740 --> 01:31:48,150
<font color="#CCCCCC">in terms of having</font><font color="#E5E5E5"> to run training many</font>

2072
01:31:48,150 --> 01:31:50,430
times but<font color="#E5E5E5"> the hope is that I can</font>

2073
01:31:50,430 --> 01:31:52,950
essentially learn how<font color="#E5E5E5"> to dynamically</font>

2074
01:31:52,950 --> 01:31:54,870
adjust<font color="#CCCCCC"> these hyper parameters</font><font color="#E5E5E5"> through</font>

2075
01:31:54,870 --> 01:31:57,180
training so<font color="#CCCCCC"> that if I then</font><font color="#E5E5E5"> have another</font>

2076
01:31:57,180 --> 01:31:58,830
instance<font color="#E5E5E5"> of the same sort of learning</font>

2077
01:31:58,830 --> 01:32:02,100
problem<font color="#CCCCCC"> I can be much</font><font color="#E5E5E5"> smarter about how</font>

2078
01:32:02,100 --> 01:32:05,810
<font color="#E5E5E5">I treat that and then there's</font><font color="#CCCCCC"> actually a</font>

2079
01:32:05,810 --> 01:32:10,020
paper the<font color="#E5E5E5"> I along</font><font color="#CCCCCC"> with some other</font><font color="#E5E5E5"> folks</font>

2080
01:32:10,020 --> 01:32:12,600
<font color="#E5E5E5">would</font><font color="#CCCCCC"> be mine</font><font color="#E5E5E5"> published</font><font color="#CCCCCC"> archived at the</font>

2081
01:32:12,600 --> 01:32:15,000
end of last year which<font color="#CCCCCC"> is this</font><font color="#E5E5E5"> idea</font><font color="#CCCCCC"> of</font>

2082
01:32:15,000 --> 01:32:17,190
borrowing<font color="#E5E5E5"> some tricks from evolutionary</font>

2083
01:32:17,190 --> 01:32:20,430
optimization and a population<font color="#E5E5E5"> of</font>

2084
01:32:20,430 --> 01:32:22,950
simultaneous training models<font color="#E5E5E5"> and</font>

2085
01:32:22,950 --> 01:32:25,710
essentially the<font color="#CCCCCC"> idea there is</font><font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of</font>

2086
01:32:25,710 --> 01:32:28,140
doing at a grid search or random search

2087
01:32:28,140 --> 01:32:30,480
<font color="#CCCCCC">let's say we initialize with</font><font color="#E5E5E5"> random</font>

2088
01:32:30,480 --> 01:32:34,650
search we're training everything<font color="#E5E5E5"> all</font>

2089
01:32:34,650 --> 01:32:37,230
<font color="#CCCCCC">together</font><font color="#E5E5E5"> and periodically we look at the</font>

2090
01:32:37,230 --> 01:32:40,620
<font color="#CCCCCC">training</font><font color="#E5E5E5"> progress that each of the the</font>

2091
01:32:40,620 --> 01:32:43,350
<font color="#E5E5E5">jobs</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> population has made and if</font>

2092
01:32:43,350 --> 01:32:45,210
something seems to<font color="#CCCCCC"> be doing</font><font color="#E5E5E5"> particularly</font>

2093
01:32:45,210 --> 01:32:47,430
poorly<font color="#E5E5E5"> then we look for something</font><font color="#CCCCCC"> that's</font>

2094
01:32:47,430 --> 01:32:49,620
<font color="#CCCCCC">doing particularly well</font><font color="#E5E5E5"> we copy its</font>

2095
01:32:49,620 --> 01:32:51,720
parameters<font color="#CCCCCC"> over and then do a small</font>

2096
01:32:51,720 --> 01:32:53,370
adjustment<font color="#CCCCCC"> to its hyper parameters</font><font color="#E5E5E5"> and</font>

2097
01:32:53,370 --> 01:32:56,100
then continue training<font color="#CCCCCC"> and that lets us</font>

2098
01:32:56,100 --> 01:33:00,290
<font color="#E5E5E5">do be kind of it's a nice</font><font color="#CCCCCC"> combination of</font>

2099
01:33:00,290 --> 01:33:02,730
Hydra parameter search and<font color="#E5E5E5"> a little bit</font>

2100
01:33:02,730 --> 01:33:04,340
of<font color="#CCCCCC"> online model selection in that were</font>

2101
01:33:04,340 --> 01:33:06,810
devoting more compute to the models that

2102
01:33:06,810 --> 01:33:08,690
<font color="#E5E5E5">seem to</font><font color="#CCCCCC"> be doing better and also</font>

2103
01:33:08,690 --> 01:33:10,830
<font color="#E5E5E5">exploring in regions of hyper parameter</font>

2104
01:33:10,830 --> 01:33:12,950
space that seemed to<font color="#E5E5E5"> be more promising</font>

2105
01:33:12,950 --> 01:33:15,720
<font color="#CCCCCC">that</font><font color="#E5E5E5"> she has another particularly nice</font>

2106
01:33:15,720 --> 01:33:18,720
benefit in reinforcement<font color="#E5E5E5"> learning so one</font>

2107
01:33:18,720 --> 01:33:21,540
of the<font color="#E5E5E5"> kind of hallmarks</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> many</font><font color="#CCCCCC"> RL</font>

2108
01:33:21,540 --> 01:33:23,280
problems is<font color="#E5E5E5"> that the data distribution</font>

2109
01:33:23,280 --> 01:33:24,750
<font color="#E5E5E5">that we deal with is is non-stationary</font>

2110
01:33:24,750 --> 01:33:27,330
so you know if I'm a robot<font color="#CCCCCC"> that's</font>

2111
01:33:27,330 --> 01:33:29,310
letting to operate in the world<font color="#E5E5E5"> that</font><font color="#CCCCCC"> may</font>

2112
01:33:29,310 --> 01:33:30,960
<font color="#CCCCCC">be you know the David</font><font color="#E5E5E5"> distribution in</font>

2113
01:33:30,960 --> 01:33:32,250
this room might be<font color="#E5E5E5"> completely</font><font color="#CCCCCC"> different</font>

2114
01:33:32,250 --> 01:33:34,560
<font color="#E5E5E5">to the</font><font color="#CCCCCC"> David distribution when I go into</font>

2115
01:33:34,560 --> 01:33:36,030
the hallway<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so it could well</font><font color="#CCCCCC"> be the</font>

2116
01:33:36,030 --> 01:33:38,130
<font color="#E5E5E5">case</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> throughout learning there it</font>

2117
01:33:38,130 --> 01:33:39,810
the the hyper parameters that<font color="#E5E5E5"> would</font>

2118
01:33:39,810 --> 01:33:40,860
allow me<font color="#E5E5E5"> to make the best learning</font>

2119
01:33:40,860 --> 01:33:43,490
progress<font color="#CCCCCC"> might be quite different and so</font>

2120
01:33:43,490 --> 01:33:45,570
some of<font color="#E5E5E5"> these</font><font color="#CCCCCC"> methods</font><font color="#E5E5E5"> like random search</font>

2121
01:33:45,570 --> 01:33:48,570
<font color="#E5E5E5">just can't address that whereas the</font>

2122
01:33:48,570 --> 01:33:50,100
<font color="#CCCCCC">population-based</font><font color="#E5E5E5"> method that we</font><font color="#CCCCCC"> propose</font>

2123
01:33:50,100 --> 01:33:53,090
is actually kind of locally adaptive so

2124
01:33:53,090 --> 01:33:56,430
that's worth<font color="#CCCCCC"> looking at it works super</font>

2125
01:33:56,430 --> 01:33:58,800
well and<font color="#E5E5E5"> a</font><font color="#CCCCCC"> demine</font><font color="#E5E5E5"> workhorse of like</font>

2126
01:33:58,800 --> 01:34:00,420
using this

2127
01:34:00,420 --> 01:34:02,070
the vast<font color="#E5E5E5"> majority of our experiments now</font>

2128
01:34:02,070 --> 01:34:06,090
<font color="#E5E5E5">the downside is it's simple to implement</font>

2129
01:34:06,090 --> 01:34:08,670
but it's a little<font color="#CCCCCC"> resource-hungry</font><font color="#E5E5E5"> in</font>

2130
01:34:08,670 --> 01:34:11,700
terms of how much compete<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> able to</font>

2131
01:34:11,700 --> 01:34:15,240
<font color="#CCCCCC">access</font><font color="#E5E5E5"> concurrently so if you're able</font><font color="#CCCCCC"> to</font>

2132
01:34:15,240 --> 01:34:18,980
run say<font color="#E5E5E5"> 30 or</font><font color="#CCCCCC"> 40 replicas of your</font>

2133
01:34:18,980 --> 01:34:23,280
experiment in parallel then I this is<font color="#E5E5E5"> I</font>

2134
01:34:23,280 --> 01:34:25,680
think<font color="#E5E5E5"> I said a clearly better way to do</font>

2135
01:34:25,680 --> 01:34:27,600
<font color="#E5E5E5">hyper own search but yeah if you don't</font>

2136
01:34:27,600 --> 01:34:29,640
have some Google's resources<font color="#E5E5E5"> then it can</font>

2137
01:34:29,640 --> 01:34:31,470
be trickier to<font color="#E5E5E5"> kind of do that so you</font>

2138
01:34:31,470 --> 01:34:32,840
might want to do<font color="#E5E5E5"> these more sequential</font>

2139
01:34:32,840 --> 01:34:39,450
methods<font color="#E5E5E5"> so</font><font color="#CCCCCC"> ya hit his just some kind of</font>

2140
01:34:39,450 --> 01:34:41,490
rules of thumb<font color="#CCCCCC"> but</font><font color="#E5E5E5"> there's a much longer</font>

2141
01:34:41,490 --> 01:34:43,080
list<font color="#E5E5E5"> of this and exacting some of those</font>

2142
01:34:43,080 --> 01:34:44,490
<font color="#CCCCCC">things that you just</font><font color="#E5E5E5"> kind of build up</font>

2143
01:34:44,490 --> 01:34:46,860
experience<font color="#E5E5E5"> over</font><font color="#CCCCCC"> time but a couple of</font>

2144
01:34:46,860 --> 01:34:49,710
kind<font color="#E5E5E5"> of easy things to do if you're</font><font color="#CCCCCC"> not</font>

2145
01:34:49,710 --> 01:34:50,940
<font color="#E5E5E5">getting the</font><font color="#CCCCCC"> performance</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you've</font>

2146
01:34:50,940 --> 01:34:54,060
<font color="#CCCCCC">hoped for one is to sort check for dead</font>

2147
01:34:54,060 --> 01:34:56,910
unit so<font color="#CCCCCC"> you could say take a large</font>

2148
01:34:56,910 --> 01:34:59,640
<font color="#CCCCCC">mini-batch and look at the histogram for</font>

2149
01:34:59,640 --> 01:35:01,500
<font color="#E5E5E5">a given layer</font><font color="#CCCCCC"> look at the histogram</font><font color="#E5E5E5"> of</font>

2150
01:35:01,500 --> 01:35:03,270
activities<font color="#CCCCCC"> of units in</font><font color="#E5E5E5"> that layer</font><font color="#CCCCCC"> and</font>

2151
01:35:03,270 --> 01:35:05,280
what you're<font color="#E5E5E5"> looking for is</font><font color="#CCCCCC"> basically you</font>

2152
01:35:05,280 --> 01:35:06,840
know<font color="#E5E5E5"> some units that maybe never turn on</font>

2153
01:35:06,840 --> 01:35:08,970
so for whatever reason and maybe your

2154
01:35:08,970 --> 01:35:10,920
initialization was<font color="#E5E5E5"> off or you went to a</font>

2155
01:35:10,920 --> 01:35:12,930
weird letting regime<font color="#E5E5E5"> but it might be the</font>

2156
01:35:12,930 --> 01:35:15,090
case<font color="#E5E5E5"> that say if you have rarely units</font>

2157
01:35:15,090 --> 01:35:16,470
<font color="#E5E5E5">many of them are</font><font color="#CCCCCC"> just never</font><font color="#E5E5E5"> in that</font>

2158
01:35:16,470 --> 01:35:18,270
<font color="#E5E5E5">linear region and so you have the</font>

2159
01:35:18,270 --> 01:35:19,380
<font color="#CCCCCC">capacity there but it's actually not</font>

2160
01:35:19,380 --> 01:35:21,480
<font color="#E5E5E5">useful</font><font color="#CCCCCC"> for you and so I'm</font><font color="#E5E5E5"> just getting</font>

2161
01:35:21,480 --> 01:35:22,860
<font color="#CCCCCC">in the</font><font color="#E5E5E5"> way</font>

2162
01:35:22,860 --> 01:35:26,310
a similar diagnostic is it can be<font color="#E5E5E5"> useful</font>

2163
01:35:26,310 --> 01:35:30,000
<font color="#CCCCCC">to look</font><font color="#E5E5E5"> at histograms of your gradient</font>

2164
01:35:30,000 --> 01:35:32,190
<font color="#E5E5E5">say again visualized over a large</font><font color="#CCCCCC"> mini</font>

2165
01:35:32,190 --> 01:35:33,840
<font color="#CCCCCC">batch and again you're</font><font color="#E5E5E5"> kind of looking</font>

2166
01:35:33,840 --> 01:35:35,730
<font color="#E5E5E5">out for you know gradients that are</font>

2167
01:35:35,730 --> 01:35:37,110
always<font color="#CCCCCC"> zero in which</font><font color="#E5E5E5"> case you're gonna</font>

2168
01:35:37,110 --> 01:35:40,470
have from making any<font color="#E5E5E5"> progress or very</font>

2169
01:35:40,470 --> 01:35:42,150
heavy tailed<font color="#CCCCCC"> grading distributions in</font>

2170
01:35:42,150 --> 01:35:44,700
which case maybe<font color="#E5E5E5"> there's some data cases</font>

2171
01:35:44,700 --> 01:35:47,820
that are dominating or<font color="#E5E5E5"> there's some kind</font>

2172
01:35:47,820 --> 01:35:49,170
of<font color="#CCCCCC"> numerical issues with</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> gratings</font>

2173
01:35:49,170 --> 01:35:50,700
blowing up

2174
01:35:50,700 --> 01:35:52,380
something else is<font color="#CCCCCC"> a really useful thing</font>

2175
01:35:52,380 --> 01:35:56,880
<font color="#E5E5E5">to try is take a kind of a very small</font>

2176
01:35:56,880 --> 01:35:59,970
subset<font color="#CCCCCC"> of data or if it's an RL setting</font>

2177
01:35:59,970 --> 01:36:01,740
if there's a kind of a simplified

2178
01:36:01,740 --> 01:36:04,860
version<font color="#E5E5E5"> of your task</font><font color="#CCCCCC"> I just try to try a</font>

2179
01:36:04,860 --> 01:36:06,090
model on that simpler version<font color="#E5E5E5"> of the</font>

2180
01:36:06,090 --> 01:36:08,850
task and<font color="#E5E5E5"> for a smaller</font><font color="#CCCCCC"> subset you should</font>

2181
01:36:08,850 --> 01:36:11,730
be able<font color="#E5E5E5"> to get zero training error or</font>

2182
01:36:11,730 --> 01:36:12,990
<font color="#E5E5E5">you know close</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> a depending on you</font>

2183
01:36:12,990 --> 01:36:13,320
know

2184
01:36:13,320 --> 01:36:15,240
noisy<font color="#CCCCCC"> labeling that kind of stuff</font><font color="#E5E5E5"> but</font>

2185
01:36:15,240 --> 01:36:17,700
the idea<font color="#CCCCCC"> is if you're</font><font color="#E5E5E5"> not seeing the</font>

2186
01:36:17,700 --> 01:36:18,840
<font color="#CCCCCC">performance on the</font><font color="#E5E5E5"> real world problem</font>

2187
01:36:18,840 --> 01:36:20,790
you care about<font color="#E5E5E5"> just as a kind of sanity</font>

2188
01:36:20,790 --> 01:36:22,410
check<font color="#E5E5E5"> scale back the size of your data</font>

2189
01:36:22,410 --> 01:36:24,990
set<font color="#CCCCCC"> and make sure</font><font color="#E5E5E5"> that you can over fit</font>

2190
01:36:24,990 --> 01:36:31,710
on a small amount of data<font color="#CCCCCC"> and because we</font>

2191
01:36:31,710 --> 01:36:33,380
could just<font color="#CCCCCC"> get about ten minutes left</font>

2192
01:36:33,380 --> 01:36:36,060
I'll go<font color="#E5E5E5"> through this fairly</font><font color="#CCCCCC"> quickly it's</font>

2193
01:36:36,060 --> 01:36:38,760
a kind<font color="#E5E5E5"> of research topic again</font><font color="#CCCCCC"> from D</font>

2194
01:36:38,760 --> 01:36:40,050
<font color="#E5E5E5">mind that relates to some of the stuff</font>

2195
01:36:40,050 --> 01:36:41,820
<font color="#E5E5E5">we've talked about but I'm</font><font color="#CCCCCC"> I'll leave</font>

2196
01:36:41,820 --> 01:36:43,500
five minutes at<font color="#E5E5E5"> the end for questions as</font>

2197
01:36:43,500 --> 01:36:48,420
well so this<font color="#CCCCCC"> is some work that</font><font color="#E5E5E5"> was it's</font>

2198
01:36:48,420 --> 01:36:50,460
from I guess a year<font color="#CCCCCC"> and a half ago now</font>

2199
01:36:50,460 --> 01:36:53,420
although what kind of<font color="#E5E5E5"> stuff on going and</font>

2200
01:36:53,420 --> 01:36:56,120
it was<font color="#E5E5E5"> this idea that we called</font>

2201
01:36:56,120 --> 01:36:58,620
decoupled neural interfaces using<font color="#E5E5E5"> some</font>

2202
01:36:58,620 --> 01:37:03,800
data gradients<font color="#E5E5E5"> and basically the idea is</font>

2203
01:37:03,800 --> 01:37:09,450
rather than running<font color="#E5E5E5"> say our forward</font>

2204
01:37:09,450 --> 01:37:10,980
propagation<font color="#CCCCCC"> all the way to the end and</font>

2205
01:37:10,980 --> 01:37:12,720
then back propagation although at the

2206
01:37:12,720 --> 01:37:17,160
<font color="#E5E5E5">end can we say midway through this chain</font>

2207
01:37:17,160 --> 01:37:20,160
predict what the back propagated

2208
01:37:20,160 --> 01:37:21,870
gradients are gonna be<font color="#E5E5E5"> before we</font>

2209
01:37:21,870 --> 01:37:25,740
actually get them and it turns out<font color="#E5E5E5"> that</font>

2210
01:37:25,740 --> 01:37:29,430
you can do<font color="#E5E5E5"> that you might ask why why</font>

2211
01:37:29,430 --> 01:37:33,180
would I want to so there's two places<font color="#CCCCCC"> I</font>

2212
01:37:33,180 --> 01:37:35,520
think<font color="#E5E5E5"> where it's useful</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> is if we</font>

2213
01:37:35,520 --> 01:37:37,530
have is more<font color="#E5E5E5"> a</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of I guess</font>

2214
01:37:37,530 --> 01:37:38,550
<font color="#E5E5E5">infrastructure thing that we have</font>

2215
01:37:38,550 --> 01:37:41,370
massive massive graphs and<font color="#E5E5E5"> we want it we</font>

2216
01:37:41,370 --> 01:37:42,750
need to<font color="#E5E5E5"> do lots of most of computation</font>

2217
01:37:42,750 --> 01:37:47,040
before<font color="#E5E5E5"> we can do an update then</font><font color="#CCCCCC"> if this</font>

2218
01:37:47,040 --> 01:37:48,800
<font color="#E5E5E5">were model parallel say then essentially</font>

2219
01:37:48,800 --> 01:37:52,890
<font color="#E5E5E5">the the</font><font color="#CCCCCC"> machines</font><font color="#E5E5E5"> holding this these</font>

2220
01:37:52,890 --> 01:37:55,080
nodes would<font color="#E5E5E5"> be waiting</font><font color="#CCCCCC"> for the back prop</font>

2221
01:37:55,080 --> 01:37:56,280
s to happen<font color="#E5E5E5"> before they could do an</font>

2222
01:37:56,280 --> 01:37:58,140
update<font color="#E5E5E5"> after the forward pass so one way</font>

2223
01:37:58,140 --> 01:38:00,060
<font color="#CCCCCC">is to kind of allow for potentially</font>

2224
01:38:00,060 --> 01:38:02,310
better pipelining<font color="#E5E5E5"> the other benefit and</font>

2225
01:38:02,310 --> 01:38:04,580
that's partly why I kind<font color="#CCCCCC"> of have this</font>

2226
01:38:04,580 --> 01:38:06,390
graph<font color="#E5E5E5"> here that's more of a sequence</font>

2227
01:38:06,390 --> 01:38:09,900
model<font color="#E5E5E5"> is there are some settings where</font>

2228
01:38:09,900 --> 01:38:12,300
we<font color="#CCCCCC"> actually don't</font><font color="#E5E5E5"> want to have to wait</font>

2229
01:38:12,300 --> 01:38:13,770
<font color="#E5E5E5">for the future to arrive</font><font color="#CCCCCC"> before we</font>

2230
01:38:13,770 --> 01:38:15,300
update our parameters so if I have a

2231
01:38:15,300 --> 01:38:16,830
sequence<font color="#E5E5E5"> model over an extremely long</font>

2232
01:38:16,830 --> 01:38:20,370
sequence<font color="#CCCCCC"> or in the case of an</font><font color="#E5E5E5"> and RL</font>

2233
01:38:20,370 --> 01:38:22,440
agent you know it's kind of indefinite<font color="#E5E5E5"> I</font>

2234
01:38:22,440 --> 01:38:25,260
can't<font color="#CCCCCC"> so I don't want to wait for an</font>

2235
01:38:25,260 --> 01:38:26,640
<font color="#E5E5E5">extremely long</font><font color="#CCCCCC"> time before</font><font color="#E5E5E5"> I can run my</font>

2236
01:38:26,640 --> 01:38:27,060
<font color="#E5E5E5">back</font>

2237
01:38:27,060 --> 01:38:29,400
through time to get<font color="#E5E5E5"> gradients and it</font>

2238
01:38:29,400 --> 01:38:32,730
might not<font color="#CCCCCC"> be might not be</font><font color="#E5E5E5"> feasible right</font>

2239
01:38:32,730 --> 01:38:34,830
<font color="#E5E5E5">now if what what people typically do is</font>

2240
01:38:34,830 --> 01:38:36,870
they'll take<font color="#E5E5E5"> a long sequence and they'll</font>

2241
01:38:36,870 --> 01:38:38,730
chop it into<font color="#E5E5E5"> chunks and they'll run</font>

2242
01:38:38,730 --> 01:38:40,590
<font color="#E5E5E5">something</font><font color="#CCCCCC"> called</font><font color="#E5E5E5"> truncated</font><font color="#CCCCCC"> back prop</font>

2243
01:38:40,590 --> 01:38:43,620
through time and if you sit down<font color="#E5E5E5"> and</font>

2244
01:38:43,620 --> 01:38:44,970
<font color="#CCCCCC">think</font><font color="#E5E5E5"> about what that's doing then</font><font color="#CCCCCC"> it's</font>

2245
01:38:44,970 --> 01:38:47,370
it's<font color="#E5E5E5"> essentially assuming that outside</font>

2246
01:38:47,370 --> 01:38:48,990
<font color="#E5E5E5">of the kind of truncation window the</font>

2247
01:38:48,990 --> 01:38:50,550
<font color="#E5E5E5">gradient from the future are zero</font>

2248
01:38:50,550 --> 01:38:51,960
<font color="#E5E5E5">because what we're just ignoring</font><font color="#CCCCCC"> them</font>

2249
01:38:51,960 --> 01:38:53,910
and so if you look at<font color="#E5E5E5"> it like</font><font color="#CCCCCC"> they're</font>

2250
01:38:53,910 --> 01:38:55,920
the argument behind<font color="#CCCCCC"> Cynthia gradients is</font>

2251
01:38:55,920 --> 01:38:57,510
is kind of obvious<font color="#CCCCCC"> you're basically</font>

2252
01:38:57,510 --> 01:39:00,390
saying if I my default was to do

2253
01:39:00,390 --> 01:39:03,030
truncated back put through time<font color="#CCCCCC"> which</font>

2254
01:39:03,030 --> 01:39:04,260
implicitly makes the assumption that

2255
01:39:04,260 --> 01:39:06,030
gradients from outside the truncation

2256
01:39:06,030 --> 01:39:08,370
window are zero<font color="#E5E5E5"> could</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> possibly do</font>

2257
01:39:08,370 --> 01:39:09,600
better by predicting something<font color="#E5E5E5"> other</font>

2258
01:39:09,600 --> 01:39:12,090
than zero and the answer is probably yes

2259
01:39:12,090 --> 01:39:13,950
in<font color="#E5E5E5"> most cases and so that's a kind of</font>

2260
01:39:13,950 --> 01:39:16,790
good<font color="#E5E5E5"> motivation for why it's interesting</font>

2261
01:39:16,790 --> 01:39:18,690
<font color="#E5E5E5">there's a couple of papers</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font>

2262
01:39:18,690 --> 01:39:20,160
published on this<font color="#E5E5E5"> now already</font><font color="#CCCCCC"> and</font>

2263
01:39:20,160 --> 01:39:22,800
there's<font color="#E5E5E5"> a nice kind of interactive</font><font color="#CCCCCC"> blog</font>

2264
01:39:22,800 --> 01:39:24,180
post that<font color="#E5E5E5"> you can you</font><font color="#CCCCCC"> can look at here</font>

2265
01:39:24,180 --> 01:39:27,540
<font color="#E5E5E5">if you if you want to hear some more so</font>

2266
01:39:27,540 --> 01:39:29,220
<font color="#E5E5E5">you know that's it for today the next</font>

2267
01:39:29,220 --> 01:39:30,690
lecture is going to be<font color="#E5E5E5"> commnets with</font>

2268
01:39:30,690 --> 01:39:33,240
<font color="#CCCCCC">Korean but yeah there's time some</font>

2269
01:39:33,240 --> 01:39:34,200
questions<font color="#CCCCCC"> now and</font><font color="#E5E5E5"> if there's more</font>

2270
01:39:34,200 --> 01:39:35,820
<font color="#CCCCCC">questions afterwards I'm happy to kind</font>

2271
01:39:35,820 --> 01:39:38,070
<font color="#E5E5E5">of hand ran outside for a bit more than</font>

2272
01:39:38,070 --> 01:39:49,770
<font color="#E5E5E5">we have</font><font color="#CCCCCC"> time for yeah</font><font color="#E5E5E5"> that's another</font>

2273
01:39:49,770 --> 01:39:53,100
great question<font color="#CCCCCC"> I said that's a kind of</font>

2274
01:39:53,100 --> 01:39:58,860
another<font color="#CCCCCC"> ongoing area</font><font color="#E5E5E5"> research so the</font>

2275
01:39:58,860 --> 01:40:02,190
sort of the<font color="#CCCCCC"> fault of the moan is more</font>

2276
01:40:02,190 --> 01:40:04,800
<font color="#CCCCCC">like you</font><font color="#E5E5E5"> know kind of human driven you</font>

2277
01:40:04,800 --> 01:40:06,060
<font color="#E5E5E5">briefed me optimization and that you</font>

2278
01:40:06,060 --> 01:40:07,350
know I have some idea in my head of what

2279
01:40:07,350 --> 01:40:08,640
<font color="#E5E5E5">the kind of fitness of different</font>

2280
01:40:08,640 --> 01:40:09,960
<font color="#E5E5E5">architectures would be and I kind</font><font color="#CCCCCC"> of</font>

2281
01:40:09,960 --> 01:40:12,840
prioritize trying those there's some

2282
01:40:12,840 --> 01:40:16,110
<font color="#E5E5E5">interesting work</font><font color="#CCCCCC"> going on</font><font color="#E5E5E5"> again using</font>

2283
01:40:16,110 --> 01:40:18,620
some<font color="#E5E5E5"> of these gradient free methods to</font>

2284
01:40:18,620 --> 01:40:22,380
search<font color="#E5E5E5"> over architectures so at a high</font>

2285
01:40:22,380 --> 01:40:24,300
<font color="#CCCCCC">level this idea if I can start to build</font>

2286
01:40:24,300 --> 01:40:26,730
<font color="#CCCCCC">a predictive model of how different</font>

2287
01:40:26,730 --> 01:40:28,860
architectures might perform then I can

2288
01:40:28,860 --> 01:40:30,930
<font color="#E5E5E5">use that to automate the priority list</font>

2289
01:40:30,930 --> 01:40:33,660
<font color="#E5E5E5">of what I should try next on the</font>

2290
01:40:33,660 --> 01:40:37,200
population training side of things<font color="#E5E5E5"> some</font>

2291
01:40:37,200 --> 01:40:38,820
of<font color="#CCCCCC"> the stuff that were</font>

2292
01:40:38,820 --> 01:40:41,750
working on actually<font color="#E5E5E5"> at the</font><font color="#CCCCCC"> moment</font><font color="#E5E5E5"> is</font>

2293
01:40:41,750 --> 01:40:46,860
<font color="#E5E5E5">there are ways of adapting network</font>

2294
01:40:46,860 --> 01:40:49,619
architectures online without having<font color="#CCCCCC"> to</font>

2295
01:40:49,619 --> 01:40:52,159
restart<font color="#E5E5E5"> training so one example of that</font>

2296
01:40:52,159 --> 01:40:54,420
<font color="#E5E5E5">there's a couple</font><font color="#CCCCCC"> of papers on</font><font color="#E5E5E5"> technique</font>

2297
01:40:54,420 --> 01:40:56,219
<font color="#E5E5E5">service in a called net net or net</font>

2298
01:40:56,219 --> 01:40:57,630
morphism and various other

2299
01:40:57,630 --> 01:41:01,800
transformations there<font color="#CCCCCC"> I see so imagine a</font>

2300
01:41:01,800 --> 01:41:05,610
<font color="#E5E5E5">mitem that I have some architecture and</font>

2301
01:41:05,610 --> 01:41:07,500
I'm thinking<font color="#E5E5E5"> would that architecture be</font>

2302
01:41:07,500 --> 01:41:09,090
better if I were to<font color="#E5E5E5"> interject an</font>

2303
01:41:09,090 --> 01:41:11,190
additional hidden<font color="#E5E5E5"> layer somewhere</font>

2304
01:41:11,190 --> 01:41:14,010
<font color="#CCCCCC">I could just start training from scratch</font>

2305
01:41:14,010 --> 01:41:15,960
but something else<font color="#CCCCCC"> that I can do is take</font>

2306
01:41:15,960 --> 01:41:17,310
<font color="#E5E5E5">something's</font><font color="#CCCCCC"> thats been trained</font>

2307
01:41:17,310 --> 01:41:19,170
originally and figure out<font color="#E5E5E5"> a way</font><font color="#CCCCCC"> to</font>

2308
01:41:19,170 --> 01:41:21,300
inject an additional<font color="#E5E5E5"> hidden layer in</font>

2309
01:41:21,300 --> 01:41:22,860
there<font color="#E5E5E5"> that doesn't</font><font color="#CCCCCC"> change the function</font>

2310
01:41:22,860 --> 01:41:23,940
that's<font color="#E5E5E5"> been learned so far</font>

2311
01:41:23,940 --> 01:41:25,860
but then after I've can added that

2312
01:41:25,860 --> 01:41:27,329
<font color="#E5E5E5">hidden layer I can</font><font color="#CCCCCC"> then continue</font>

2313
01:41:27,329 --> 01:41:29,550
<font color="#E5E5E5">training and potentially allowed the</font>

2314
01:41:29,550 --> 01:41:32,880
model to<font color="#CCCCCC"> make use of</font><font color="#E5E5E5"> that additional</font>

2315
01:41:32,880 --> 01:41:37,469
capacity<font color="#E5E5E5"> and one one cartoon of how to</font>

2316
01:41:37,469 --> 01:41:45,230
see I could do that is I could say

2317
01:41:45,710 --> 01:41:48,210
<font color="#CCCCCC">arrange to have an</font><font color="#E5E5E5"> additional hidden</font>

2318
01:41:48,210 --> 01:41:51,530
layer with<font color="#CCCCCC"> say tonight's unit and</font>

2319
01:41:51,530 --> 01:41:54,030
<font color="#E5E5E5">initialize them so that they're kind of</font>

2320
01:41:54,030 --> 01:41:55,590
in<font color="#E5E5E5"> Berlin ear region so it's it's more</font>

2321
01:41:55,590 --> 01:41:58,829
<font color="#E5E5E5">or</font><font color="#CCCCCC"> less a linear pass through so I could</font>

2322
01:41:58,829 --> 01:42:00,929
<font color="#E5E5E5">take</font><font color="#CCCCCC"> my previous model add in an</font>

2323
01:42:00,929 --> 01:42:02,639
<font color="#CCCCCC">additional layer with the existing</font>

2324
01:42:02,639 --> 01:42:05,070
weight matrix<font color="#CCCCCC"> initialize the outgoing</font>

2325
01:42:05,070 --> 01:42:09,389
wig matrix of that<font color="#E5E5E5"> 10h layer to be some</font>

2326
01:42:09,389 --> 01:42:11,190
kind<font color="#CCCCCC"> of large values and that</font><font color="#E5E5E5"> will that</font>

2327
01:42:11,190 --> 01:42:15,360
will locally give me something that has

2328
01:42:15,360 --> 01:42:18,329
a very similar functional mapping as the

2329
01:42:18,329 --> 01:42:20,070
the<font color="#E5E5E5"> network I start out</font><font color="#CCCCCC"> with but now I</font>

2330
01:42:20,070 --> 01:42:22,440
have the potential to<font color="#E5E5E5"> learn additional</font>

2331
01:42:22,440 --> 01:42:24,030
connections<font color="#E5E5E5"> going from those ten each</font>

2332
01:42:24,030 --> 01:42:25,650
unit so there's potentially ways of

2333
01:42:25,650 --> 01:42:27,690
doing this kind<font color="#CCCCCC"> of architecture search</font>

2334
01:42:27,690 --> 01:42:30,929
online<font color="#E5E5E5"> and then there's model-based</font>

2335
01:42:30,929 --> 01:42:33,030
approaches and then evolutionary methods

2336
01:42:33,030 --> 01:42:34,739
<font color="#E5E5E5">I'd say they're kind</font><font color="#CCCCCC"> of the three main</font>

2337
01:42:34,739 --> 01:42:37,790
ways<font color="#E5E5E5"> of doing that</font>

2338
01:42:46,270 --> 01:42:50,440
<font color="#E5E5E5">learners are you looking at kind of</font><font color="#CCCCCC"> help</font>

2339
01:42:50,440 --> 01:42:52,030
<font color="#CCCCCC">set performance</font><font color="#E5E5E5"> are you looking at</font>

2340
01:42:52,030 --> 01:42:53,920
convergence<font color="#E5E5E5"> rates yeah it's a good</font>

2341
01:42:53,920 --> 01:42:54,580
<font color="#CCCCCC">question</font>

2342
01:42:54,580 --> 01:42:57,010
so I've mostly been thinking of this in

2343
01:42:57,010 --> 01:42:58,810
the context of reinforcement learning

2344
01:42:58,810 --> 01:43:03,040
and so they're sort<font color="#CCCCCC"> of your test say is</font>

2345
01:43:03,040 --> 01:43:05,770
your training<font color="#E5E5E5"> set in a sentence</font><font color="#CCCCCC"> yeah so</font>

2346
01:43:05,770 --> 01:43:07,240
for kind<font color="#E5E5E5"> of supervised problems then</font>

2347
01:43:07,240 --> 01:43:09,760
yeah<font color="#E5E5E5"> looking at it on a held out set</font>

2348
01:43:09,760 --> 01:43:10,960
another<font color="#E5E5E5"> thing that's worth mentioning</font>

2349
01:43:10,960 --> 01:43:12,310
<font color="#E5E5E5">and again this is something that were</font>

2350
01:43:12,310 --> 01:43:14,020
<font color="#E5E5E5">kind of actively working on at the</font>

2351
01:43:14,020 --> 01:43:18,100
moment<font color="#E5E5E5"> is you might not want to make</font>

2352
01:43:18,100 --> 01:43:21,130
greedy decisions about<font color="#E5E5E5"> that so a good</font>

2353
01:43:21,130 --> 01:43:22,870
example<font color="#E5E5E5"> is you know in supervised</font>

2354
01:43:22,870 --> 01:43:26,080
learning<font color="#CCCCCC"> it might be</font><font color="#E5E5E5"> the so often it's</font>

2355
01:43:26,080 --> 01:43:27,400
good to<font color="#E5E5E5"> have a fairly high learning rate</font>

2356
01:43:27,400 --> 01:43:28,360
<font color="#CCCCCC">initially and then to</font><font color="#E5E5E5"> kind of drop it</font>

2357
01:43:28,360 --> 01:43:31,570
<font color="#E5E5E5">down but one</font><font color="#CCCCCC"> of things we noticed and</font>

2358
01:43:31,570 --> 01:43:32,470
applying this to some<font color="#E5E5E5"> of the supervised</font>

2359
01:43:32,470 --> 01:43:37,180
problems is<font color="#E5E5E5"> that you can if you kind of</font>

2360
01:43:37,180 --> 01:43:39,490
look greedily<font color="#CCCCCC"> you can appear to</font><font color="#E5E5E5"> be doing</font>

2361
01:43:39,490 --> 01:43:41,560
<font color="#CCCCCC">better by dropping their learning rate</font>

2362
01:43:41,560 --> 01:43:43,120
<font color="#E5E5E5">earlier than you would in a nocturnal</font>

2363
01:43:43,120 --> 01:43:44,410
setting<font color="#CCCCCC"> because I kind of give you that</font>

2364
01:43:44,410 --> 01:43:48,040
local boost<font color="#E5E5E5"> and so</font><font color="#CCCCCC"> something that again</font>

2365
01:43:48,040 --> 01:43:50,230
this<font color="#E5E5E5"> is appears to be less of a</font><font color="#CCCCCC"> problem</font>

2366
01:43:50,230 --> 01:43:52,960
in<font color="#E5E5E5"> the RL settings we've looked at but</font>

2367
01:43:52,960 --> 01:43:55,240
<font color="#CCCCCC">I'm saying</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you probably want to do</font>

2368
01:43:55,240 --> 01:43:57,910
as we extend these<font color="#E5E5E5"> methods is think</font>

2369
01:43:57,910 --> 01:43:59,530
about<font color="#E5E5E5"> kind of performance metrics</font><font color="#CCCCCC"> that</font>

2370
01:43:59,530 --> 01:44:01,120
aren't<font color="#E5E5E5"> just how well am i doing now but</font>

2371
01:44:01,120 --> 01:44:02,260
kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> combining</font><font color="#CCCCCC"> in some of that</font>

2372
01:44:02,260 --> 01:44:04,870
model-based<font color="#E5E5E5"> for looking things so</font><font color="#CCCCCC"> not</font>

2373
01:44:04,870 --> 01:44:06,760
<font color="#CCCCCC">how well am i doing now but given</font>

2374
01:44:06,760 --> 01:44:07,840
<font color="#E5E5E5">everything I've seen</font><font color="#CCCCCC"> about learning</font>

2375
01:44:07,840 --> 01:44:11,020
<font color="#CCCCCC">progress so far</font><font color="#E5E5E5"> how well could this run</font>

2376
01:44:11,020 --> 01:44:13,420
or<font color="#CCCCCC"> its descendants</font><font color="#E5E5E5"> end up doing and kind</font>

2377
01:44:13,420 --> 01:44:16,990
of use use a less greedy performance

2378
01:44:16,990 --> 01:44:23,080
metric<font color="#E5E5E5"> way if there are no more</font>

2379
01:44:23,080 --> 01:44:24,880
<font color="#CCCCCC">questions then thank you</font><font color="#E5E5E5"> and yeah feel</font>

2380
01:44:24,880 --> 01:44:27,870
<font color="#E5E5E5">free to ask</font><font color="#CCCCCC"> because no</font><font color="#E5E5E5"> salary</font>

2381
01:44:27,870 --> 00:00:00,000
[Applause]

